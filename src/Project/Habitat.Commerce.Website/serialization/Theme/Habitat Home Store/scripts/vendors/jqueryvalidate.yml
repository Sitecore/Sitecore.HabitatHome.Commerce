---
ID: "8c161e2b-02a3-486b-9057-7aa6d0d54400"
Parent: "0f96d50a-ce5f-456f-837d-a416b6d71b99"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Themes/Habitat Sites/Habitat Home Store/scripts/vendors/jqueryvalidate
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/1AE9D7FDE2724D8DB59D610BB7C0647D.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "d47a9501-7b26-4197-8e80-905a1a5dbfb5"
  Value: 
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 39382
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/x-javascript"
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 50
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: js
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20171120T053120Z
- Language: "ja-JP"
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20171120T053120Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\admin
