----item----
version: 1
id: {641190DD-97E2-4472-803E-C0697317CADF}
database: master
path: /sitecore/media library/Themes/Habitat Sites/Habitat Home/Habitat Home Store/scripts/vendors/jquery-321
parent: {0F96D50A-CE5F-456F-837D-A416B6D71B99}
name: jquery-321
master: {00000000-0000-0000-0000-000000000000}
template: {962B53C4-F93B-4DF9-9821-415C867B8903}
templatekey: File
created: 20180215T174743Z

----field----
field: {40E50ED9-BA07-4702-992E-A912738D32DC}
name: Blob
key: blob
content-length: 366792

LyohCiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjMuMi4xCiAqIGh0dHBzOi8vanF1ZXJ5
LmNvbS8KICoKICogSW5jbHVkZXMgU2l6emxlLmpzCiAqIGh0dHBzOi8vc2l6emxlanMuY29tLwog
KgogKiBDb3B5cmlnaHQgSlMgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJl
bGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZQogKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5z
ZQogKgogKiBEYXRlOiAyMDE3LTAzLTIwVDE4OjU5WgogKi8KKCBmdW5jdGlvbiggZ2xvYmFsLCBm
YWN0b3J5ICkgewoKCSJ1c2Ugc3RyaWN0IjsKCglpZiAoIHR5cGVvZiBtb2R1bGUgPT09ICJvYmpl
Y3QiICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gIm9iamVjdCIgKSB7CgoJCS8vIEZvciBD
b21tb25KUyBhbmQgQ29tbW9uSlMtbGlrZSBlbnZpcm9ubWVudHMgd2hlcmUgYSBwcm9wZXIgYHdp
bmRvd2AKCQkvLyBpcyBwcmVzZW50LCBleGVjdXRlIHRoZSBmYWN0b3J5IGFuZCBnZXQgalF1ZXJ5
LgoJCS8vIEZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3QgaGF2ZSBhIGB3aW5kb3dgIHdpdGgg
YSBgZG9jdW1lbnRgCgkJLy8gKHN1Y2ggYXMgTm9kZS5qcyksIGV4cG9zZSBhIGZhY3RvcnkgYXMg
bW9kdWxlLmV4cG9ydHMuCgkJLy8gVGhpcyBhY2NlbnR1YXRlcyB0aGUgbmVlZCBmb3IgdGhlIGNy
ZWF0aW9uIG9mIGEgcmVhbCBgd2luZG93YC4KCQkvLyBlLmcuIHZhciBqUXVlcnkgPSByZXF1aXJl
KCJqcXVlcnkiKSh3aW5kb3cpOwoJCS8vIFNlZSB0aWNrZXQgIzE0NTQ5IGZvciBtb3JlIGluZm8u
CgkJbW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwuZG9jdW1lbnQgPwoJCQlmYWN0b3J5KCBnbG9iYWws
IHRydWUgKSA6CgkJCWZ1bmN0aW9uKCB3ICkgewoJCQkJaWYgKCAhdy5kb2N1bWVudCApIHsKCQkJ
CQl0aHJvdyBuZXcgRXJyb3IoICJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3Vt
ZW50IiApOwoJCQkJfQoJCQkJcmV0dXJuIGZhY3RvcnkoIHcgKTsKCQkJfTsKCX0gZWxzZSB7CgkJ
ZmFjdG9yeSggZ2xvYmFsICk7Cgl9CgovLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZp
bmVkIHlldAp9ICkoIHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDogdGhp
cywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7CgovLyBFZGdlIDw9IDEyIC0gMTMrLCBG
aXJlZm94IDw9MTggLSA0NSssIElFIDEwIC0gMTEsIFNhZmFyaSA1LjEgLSA5KywgaU9TIDYgLSA5
LjEKLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5F
VCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlCi8vIGFyZ3VtZW50cy5jYWxsZWUuY2FsbGVyICh0
cmFjLTEzMzM1KS4gQnV0IGFzIG9mIGpRdWVyeSAzLjAgKDIwMTYpLCBzdHJpY3QgbW9kZSBzaG91
bGQgYmUgY29tbW9uCi8vIGVub3VnaCB0aGF0IGFsbCBzdWNoIGF0dGVtcHRzIGFyZSBndWFyZGVk
IGluIGEgdHJ5IGJsb2NrLgoidXNlIHN0cmljdCI7Cgp2YXIgYXJyID0gW107Cgp2YXIgZG9jdW1l
bnQgPSB3aW5kb3cuZG9jdW1lbnQ7Cgp2YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBl
T2Y7Cgp2YXIgc2xpY2UgPSBhcnIuc2xpY2U7Cgp2YXIgY29uY2F0ID0gYXJyLmNvbmNhdDsKCnZh
ciBwdXNoID0gYXJyLnB1c2g7Cgp2YXIgaW5kZXhPZiA9IGFyci5pbmRleE9mOwoKdmFyIGNsYXNz
MnR5cGUgPSB7fTsKCnZhciB0b1N0cmluZyA9IGNsYXNzMnR5cGUudG9TdHJpbmc7Cgp2YXIgaGFz
T3duID0gY2xhc3MydHlwZS5oYXNPd25Qcm9wZXJ0eTsKCnZhciBmblRvU3RyaW5nID0gaGFzT3du
LnRvU3RyaW5nOwoKdmFyIE9iamVjdEZ1bmN0aW9uU3RyaW5nID0gZm5Ub1N0cmluZy5jYWxsKCBP
YmplY3QgKTsKCnZhciBzdXBwb3J0ID0ge307CgoKCglmdW5jdGlvbiBET01FdmFsKCBjb2RlLCBk
b2MgKSB7CgkJZG9jID0gZG9jIHx8IGRvY3VtZW50OwoKCQl2YXIgc2NyaXB0ID0gZG9jLmNyZWF0
ZUVsZW1lbnQoICJzY3JpcHQiICk7CgoJCXNjcmlwdC50ZXh0ID0gY29kZTsKCQlkb2MuaGVhZC5h
cHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7Cgl9
Ci8qIGdsb2JhbCBTeW1ib2wgKi8KLy8gRGVmaW5pbmcgdGhpcyBnbG9iYWwgaW4gLmVzbGludHJj
Lmpzb24gd291bGQgY3JlYXRlIGEgZGFuZ2VyIG9mIHVzaW5nIHRoZSBnbG9iYWwKLy8gdW5ndWFy
ZGVkIGluIGFub3RoZXIgcGxhY2UsIGl0IHNlZW1zIHNhZmVyIHRvIGRlZmluZSBnbG9iYWwgb25s
eSBmb3IgdGhpcyBtb2R1bGUKCgoKdmFyCgl2ZXJzaW9uID0gIjMuMi4xIiwKCgkvLyBEZWZpbmUg
YSBsb2NhbCBjb3B5IG9mIGpRdWVyeQoJalF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250
ZXh0ICkgewoKCQkvLyBUaGUgalF1ZXJ5IG9iamVjdCBpcyBhY3R1YWxseSBqdXN0IHRoZSBpbml0
IGNvbnN0cnVjdG9yICdlbmhhbmNlZCcKCQkvLyBOZWVkIGluaXQgaWYgalF1ZXJ5IGlzIGNhbGxl
ZCAoanVzdCBhbGxvdyBlcnJvciB0byBiZSB0aHJvd24gaWYgbm90IGluY2x1ZGVkKQoJCXJldHVy
biBuZXcgalF1ZXJ5LmZuLmluaXQoIHNlbGVjdG9yLCBjb250ZXh0ICk7Cgl9LAoKCS8vIFN1cHBv
cnQ6IEFuZHJvaWQgPD00LjAgb25seQoJLy8gTWFrZSBzdXJlIHdlIHRyaW0gQk9NIGFuZCBOQlNQ
CglydHJpbSA9IC9eW1xzXHVGRUZGXHhBMF0rfFtcc1x1RkVGRlx4QTBdKyQvZywKCgkvLyBNYXRj
aGVzIGRhc2hlZCBzdHJpbmcgZm9yIGNhbWVsaXppbmcKCXJtc1ByZWZpeCA9IC9eLW1zLS8sCgly
ZGFzaEFscGhhID0gLy0oW2Etel0pL2csCgoJLy8gVXNlZCBieSBqUXVlcnkuY2FtZWxDYXNlIGFz
IGNhbGxiYWNrIHRvIHJlcGxhY2UoKQoJZmNhbWVsQ2FzZSA9IGZ1bmN0aW9uKCBhbGwsIGxldHRl
ciApIHsKCQlyZXR1cm4gbGV0dGVyLnRvVXBwZXJDYXNlKCk7Cgl9OwoKalF1ZXJ5LmZuID0galF1
ZXJ5LnByb3RvdHlwZSA9IHsKCgkvLyBUaGUgY3VycmVudCB2ZXJzaW9uIG9mIGpRdWVyeSBiZWlu
ZyB1c2VkCglqcXVlcnk6IHZlcnNpb24sCgoJY29uc3RydWN0b3I6IGpRdWVyeSwKCgkvLyBUaGUg
ZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDAKCWxlbmd0aDogMCwKCgl0b0Fy
cmF5OiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApOwoJfSwKCgkvLyBH
ZXQgdGhlIE50aCBlbGVtZW50IGluIHRoZSBtYXRjaGVkIGVsZW1lbnQgc2V0IE9SCgkvLyBHZXQg
dGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheQoJZ2V0OiBmdW5j
dGlvbiggbnVtICkgewoKCQkvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFy
cmF5CgkJaWYgKCBudW0gPT0gbnVsbCApIHsKCQkJcmV0dXJuIHNsaWNlLmNhbGwoIHRoaXMgKTsK
CQl9CgoJCS8vIFJldHVybiBqdXN0IHRoZSBvbmUgZWxlbWVudCBmcm9tIHRoZSBzZXQKCQlyZXR1
cm4gbnVtIDwgMCA/IHRoaXNbIG51bSArIHRoaXMubGVuZ3RoIF0gOiB0aGlzWyBudW0gXTsKCX0s
CgoJLy8gVGFrZSBhbiBhcnJheSBvZiBlbGVtZW50cyBhbmQgcHVzaCBpdCBvbnRvIHRoZSBzdGFj
awoJLy8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpCglwdXNoU3RhY2s6
IGZ1bmN0aW9uKCBlbGVtcyApIHsKCgkJLy8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxl
bWVudCBzZXQKCQl2YXIgcmV0ID0galF1ZXJ5Lm1lcmdlKCB0aGlzLmNvbnN0cnVjdG9yKCksIGVs
ZW1zICk7CgoJCS8vIEFkZCB0aGUgb2xkIG9iamVjdCBvbnRvIHRoZSBzdGFjayAoYXMgYSByZWZl
cmVuY2UpCgkJcmV0LnByZXZPYmplY3QgPSB0aGlzOwoKCQkvLyBSZXR1cm4gdGhlIG5ld2x5LWZv
cm1lZCBlbGVtZW50IHNldAoJCXJldHVybiByZXQ7Cgl9LAoKCS8vIEV4ZWN1dGUgYSBjYWxsYmFj
ayBmb3IgZXZlcnkgZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBzZXQuCgllYWNoOiBmdW5jdGlvbigg
Y2FsbGJhY2sgKSB7CgkJcmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjayApOwoJfSwK
CgltYXA6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHsKCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpR
dWVyeS5tYXAoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkgewoJCQlyZXR1cm4gY2FsbGJhY2su
Y2FsbCggZWxlbSwgaSwgZWxlbSApOwoJCX0gKSApOwoJfSwKCglzbGljZTogZnVuY3Rpb24oKSB7
CgkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICkg
KTsKCX0sCgoJZmlyc3Q6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmVxKCAwICk7Cgl9LAoK
CWxhc3Q6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmVxKCAtMSApOwoJfSwKCgllcTogZnVu
Y3Rpb24oIGkgKSB7CgkJdmFyIGxlbiA9IHRoaXMubGVuZ3RoLAoJCQlqID0gK2kgKyAoIGkgPCAw
ID8gbGVuIDogMCApOwoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggaiA+PSAwICYmIGogPCBsZW4g
PyBbIHRoaXNbIGogXSBdIDogW10gKTsKCX0sCgoJZW5kOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4g
dGhpcy5wcmV2T2JqZWN0IHx8IHRoaXMuY29uc3RydWN0b3IoKTsKCX0sCgoJLy8gRm9yIGludGVy
bmFsIHVzZSBvbmx5LgoJLy8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlr
ZSBhIGpRdWVyeSBtZXRob2QuCglwdXNoOiBwdXNoLAoJc29ydDogYXJyLnNvcnQsCglzcGxpY2U6
IGFyci5zcGxpY2UKfTsKCmpRdWVyeS5leHRlbmQgPSBqUXVlcnkuZm4uZXh0ZW5kID0gZnVuY3Rp
b24oKSB7Cgl2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmUs
CgkJdGFyZ2V0ID0gYXJndW1lbnRzWyAwIF0gfHwge30sCgkJaSA9IDEsCgkJbGVuZ3RoID0gYXJn
dW1lbnRzLmxlbmd0aCwKCQlkZWVwID0gZmFsc2U7CgoJLy8gSGFuZGxlIGEgZGVlcCBjb3B5IHNp
dHVhdGlvbgoJaWYgKCB0eXBlb2YgdGFyZ2V0ID09PSAiYm9vbGVhbiIgKSB7CgkJZGVlcCA9IHRh
cmdldDsKCgkJLy8gU2tpcCB0aGUgYm9vbGVhbiBhbmQgdGhlIHRhcmdldAoJCXRhcmdldCA9IGFy
Z3VtZW50c1sgaSBdIHx8IHt9OwoJCWkrKzsKCX0KCgkvLyBIYW5kbGUgY2FzZSB3aGVuIHRhcmdl
dCBpcyBhIHN0cmluZyBvciBzb21ldGhpbmcgKHBvc3NpYmxlIGluIGRlZXAgY29weSkKCWlmICgg
dHlwZW9mIHRhcmdldCAhPT0gIm9iamVjdCIgJiYgIWpRdWVyeS5pc0Z1bmN0aW9uKCB0YXJnZXQg
KSApIHsKCQl0YXJnZXQgPSB7fTsKCX0KCgkvLyBFeHRlbmQgalF1ZXJ5IGl0c2VsZiBpZiBvbmx5
IG9uZSBhcmd1bWVudCBpcyBwYXNzZWQKCWlmICggaSA9PT0gbGVuZ3RoICkgewoJCXRhcmdldCA9
IHRoaXM7CgkJaS0tOwoJfQoKCWZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkgewoKCQkvLyBPbmx5
IGRlYWwgd2l0aCBub24tbnVsbC91bmRlZmluZWQgdmFsdWVzCgkJaWYgKCAoIG9wdGlvbnMgPSBh
cmd1bWVudHNbIGkgXSApICE9IG51bGwgKSB7CgoJCQkvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0
CgkJCWZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHsKCQkJCXNyYyA9IHRhcmdldFsgbmFtZSBdOwoJ
CQkJY29weSA9IG9wdGlvbnNbIG5hbWUgXTsKCgkJCQkvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBs
b29wCgkJCQlpZiAoIHRhcmdldCA9PT0gY29weSApIHsKCQkJCQljb250aW51ZTsKCQkJCX0KCgkJ
CQkvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXMKCQkJ
CWlmICggZGVlcCAmJiBjb3B5ICYmICggalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvcHkgKSB8fAoJ
CQkJCSggY29weUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KCBjb3B5ICkgKSApICkgewoKCQkJCQlp
ZiAoIGNvcHlJc0FycmF5ICkgewoJCQkJCQljb3B5SXNBcnJheSA9IGZhbHNlOwoJCQkJCQljbG9u
ZSA9IHNyYyAmJiBBcnJheS5pc0FycmF5KCBzcmMgKSA/IHNyYyA6IFtdOwoKCQkJCQl9IGVsc2Ug
ewoJCQkJCQljbG9uZSA9IHNyYyAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggc3JjICkgPyBzcmMg
OiB7fTsKCQkJCQl9CgoJCQkJCS8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUg
dGhlbQoJCQkJCXRhcmdldFsgbmFtZSBdID0galF1ZXJ5LmV4dGVuZCggZGVlcCwgY2xvbmUsIGNv
cHkgKTsKCgkJCQkvLyBEb24ndCBicmluZyBpbiB1bmRlZmluZWQgdmFsdWVzCgkJCQl9IGVsc2Ug
aWYgKCBjb3B5ICE9PSB1bmRlZmluZWQgKSB7CgkJCQkJdGFyZ2V0WyBuYW1lIF0gPSBjb3B5OwoJ
CQkJfQoJCQl9CgkJfQoJfQoKCS8vIFJldHVybiB0aGUgbW9kaWZpZWQgb2JqZWN0CglyZXR1cm4g
dGFyZ2V0Owp9OwoKalF1ZXJ5LmV4dGVuZCggewoKCS8vIFVuaXF1ZSBmb3IgZWFjaCBjb3B5IG9m
IGpRdWVyeSBvbiB0aGUgcGFnZQoJZXhwYW5kbzogImpRdWVyeSIgKyAoIHZlcnNpb24gKyBNYXRo
LnJhbmRvbSgpICkucmVwbGFjZSggL1xEL2csICIiICksCgoJLy8gQXNzdW1lIGpRdWVyeSBpcyBy
ZWFkeSB3aXRob3V0IHRoZSByZWFkeSBtb2R1bGUKCWlzUmVhZHk6IHRydWUsCgoJZXJyb3I6IGZ1
bmN0aW9uKCBtc2cgKSB7CgkJdGhyb3cgbmV3IEVycm9yKCBtc2cgKTsKCX0sCgoJbm9vcDogZnVu
Y3Rpb24oKSB7fSwKCglpc0Z1bmN0aW9uOiBmdW5jdGlvbiggb2JqICkgewoJCXJldHVybiBqUXVl
cnkudHlwZSggb2JqICkgPT09ICJmdW5jdGlvbiI7Cgl9LAoKCWlzV2luZG93OiBmdW5jdGlvbigg
b2JqICkgewoJCXJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT09IG9iai53aW5kb3c7Cgl9LAoK
CWlzTnVtZXJpYzogZnVuY3Rpb24oIG9iaiApIHsKCgkJLy8gQXMgb2YgalF1ZXJ5IDMuMCwgaXNO
dW1lcmljIGlzIGxpbWl0ZWQgdG8KCQkvLyBzdHJpbmdzIGFuZCBudW1iZXJzIChwcmltaXRpdmVz
IG9yIG9iamVjdHMpCgkJLy8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAo
Z2gtMjY2MikKCQl2YXIgdHlwZSA9IGpRdWVyeS50eXBlKCBvYmogKTsKCQlyZXR1cm4gKCB0eXBl
ID09PSAibnVtYmVyIiB8fCB0eXBlID09PSAic3RyaW5nIiApICYmCgoJCQkvLyBwYXJzZUZsb2F0
IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAoIiIpCgkJCS8vIC4uLmJ1dCBtaXNp
bnRlcnByZXRzIGxlYWRpbmctbnVtYmVyIHN0cmluZ3MsIHBhcnRpY3VsYXJseSBoZXggbGl0ZXJh
bHMgKCIweC4uLiIpCgkJCS8vIHN1YnRyYWN0aW9uIGZvcmNlcyBpbmZpbml0aWVzIHRvIE5hTgoJ
CQkhaXNOYU4oIG9iaiAtIHBhcnNlRmxvYXQoIG9iaiApICk7Cgl9LAoKCWlzUGxhaW5PYmplY3Q6
IGZ1bmN0aW9uKCBvYmogKSB7CgkJdmFyIHByb3RvLCBDdG9yOwoKCQkvLyBEZXRlY3Qgb2J2aW91
cyBuZWdhdGl2ZXMKCQkvLyBVc2UgdG9TdHJpbmcgaW5zdGVhZCBvZiBqUXVlcnkudHlwZSB0byBj
YXRjaCBob3N0IG9iamVjdHMKCQlpZiAoICFvYmogfHwgdG9TdHJpbmcuY2FsbCggb2JqICkgIT09
ICJbb2JqZWN0IE9iamVjdF0iICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQlwcm90byA9IGdl
dFByb3RvKCBvYmogKTsKCgkJLy8gT2JqZWN0cyB3aXRoIG5vIHByb3RvdHlwZSAoZS5nLiwgYE9i
amVjdC5jcmVhdGUoIG51bGwgKWApIGFyZSBwbGFpbgoJCWlmICggIXByb3RvICkgewoJCQlyZXR1
cm4gdHJ1ZTsKCQl9CgoJCS8vIE9iamVjdHMgd2l0aCBwcm90b3R5cGUgYXJlIHBsYWluIGlmZiB0
aGV5IHdlcmUgY29uc3RydWN0ZWQgYnkgYSBnbG9iYWwgT2JqZWN0IGZ1bmN0aW9uCgkJQ3RvciA9
IGhhc093bi5jYWxsKCBwcm90bywgImNvbnN0cnVjdG9yIiApICYmIHByb3RvLmNvbnN0cnVjdG9y
OwoJCXJldHVybiB0eXBlb2YgQ3RvciA9PT0gImZ1bmN0aW9uIiAmJiBmblRvU3RyaW5nLmNhbGwo
IEN0b3IgKSA9PT0gT2JqZWN0RnVuY3Rpb25TdHJpbmc7Cgl9LAoKCWlzRW1wdHlPYmplY3Q6IGZ1
bmN0aW9uKCBvYmogKSB7CgoJCS8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovCgkJ
Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQvZXNsaW50L2lzc3Vlcy82MTI1CgkJdmFy
IG5hbWU7CgoJCWZvciAoIG5hbWUgaW4gb2JqICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJCXJl
dHVybiB0cnVlOwoJfSwKCgl0eXBlOiBmdW5jdGlvbiggb2JqICkgewoJCWlmICggb2JqID09IG51
bGwgKSB7CgkJCXJldHVybiBvYmogKyAiIjsKCQl9CgoJCS8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0y
LjMgb25seSAoZnVuY3Rpb25pc2ggUmVnRXhwKQoJCXJldHVybiB0eXBlb2Ygb2JqID09PSAib2Jq
ZWN0IiB8fCB0eXBlb2Ygb2JqID09PSAiZnVuY3Rpb24iID8KCQkJY2xhc3MydHlwZVsgdG9TdHJp
bmcuY2FsbCggb2JqICkgXSB8fCAib2JqZWN0IiA6CgkJCXR5cGVvZiBvYmo7Cgl9LAoKCS8vIEV2
YWx1YXRlcyBhIHNjcmlwdCBpbiBhIGdsb2JhbCBjb250ZXh0CglnbG9iYWxFdmFsOiBmdW5jdGlv
biggY29kZSApIHsKCQlET01FdmFsKCBjb2RlICk7Cgl9LAoKCS8vIENvbnZlcnQgZGFzaGVkIHRv
IGNhbWVsQ2FzZTsgdXNlZCBieSB0aGUgY3NzIGFuZCBkYXRhIG1vZHVsZXMKCS8vIFN1cHBvcnQ6
IElFIDw9OSAtIDExLCBFZGdlIDEyIC0gMTMKCS8vIE1pY3Jvc29mdCBmb3Jnb3QgdG8gaHVtcCB0
aGVpciB2ZW5kb3IgcHJlZml4ICgjOTU3MikKCWNhbWVsQ2FzZTogZnVuY3Rpb24oIHN0cmluZyAp
IHsKCQlyZXR1cm4gc3RyaW5nLnJlcGxhY2UoIHJtc1ByZWZpeCwgIm1zLSIgKS5yZXBsYWNlKCBy
ZGFzaEFscGhhLCBmY2FtZWxDYXNlICk7Cgl9LAoKCWVhY2g6IGZ1bmN0aW9uKCBvYmosIGNhbGxi
YWNrICkgewoJCXZhciBsZW5ndGgsIGkgPSAwOwoKCQlpZiAoIGlzQXJyYXlMaWtlKCBvYmogKSAp
IHsKCQkJbGVuZ3RoID0gb2JqLmxlbmd0aDsKCQkJZm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7
CgkJCQlpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxz
ZSApIHsKCQkJCQlicmVhazsKCQkJCX0KCQkJfQoJCX0gZWxzZSB7CgkJCWZvciAoIGkgaW4gb2Jq
ICkgewoJCQkJaWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0g
ZmFsc2UgKSB7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiBvYmo7Cgl9LAoK
CS8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seQoJdHJpbTogZnVuY3Rpb24oIHRleHQgKSB7
CgkJcmV0dXJuIHRleHQgPT0gbnVsbCA/CgkJCSIiIDoKCQkJKCB0ZXh0ICsgIiIgKS5yZXBsYWNl
KCBydHJpbSwgIiIgKTsKCX0sCgoJLy8gcmVzdWx0cyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25s
eQoJbWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkgewoJCXZhciByZXQgPSByZXN1
bHRzIHx8IFtdOwoKCQlpZiAoIGFyciAhPSBudWxsICkgewoJCQlpZiAoIGlzQXJyYXlMaWtlKCBP
YmplY3QoIGFyciApICkgKSB7CgkJCQlqUXVlcnkubWVyZ2UoIHJldCwKCQkJCQl0eXBlb2YgYXJy
ID09PSAic3RyaW5nIiA/CgkJCQkJWyBhcnIgXSA6IGFycgoJCQkJKTsKCQkJfSBlbHNlIHsKCQkJ
CXB1c2guY2FsbCggcmV0LCBhcnIgKTsKCQkJfQoJCX0KCgkJcmV0dXJuIHJldDsKCX0sCgoJaW5B
cnJheTogZnVuY3Rpb24oIGVsZW0sIGFyciwgaSApIHsKCQlyZXR1cm4gYXJyID09IG51bGwgPyAt
MSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7Cgl9LAoKCS8vIFN1cHBvcnQ6IEFuZHJv
aWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seQoJLy8gcHVzaC5hcHBseShfLCBhcnJheWxp
a2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdAoJbWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vj
b25kICkgewoJCXZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCwKCQkJaiA9IDAsCgkJCWkgPSBmaXJz
dC5sZW5ndGg7CgoJCWZvciAoIDsgaiA8IGxlbjsgaisrICkgewoJCQlmaXJzdFsgaSsrIF0gPSBz
ZWNvbmRbIGogXTsKCQl9CgoJCWZpcnN0Lmxlbmd0aCA9IGk7CgoJCXJldHVybiBmaXJzdDsKCX0s
CgoJZ3JlcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgaW52ZXJ0ICkgewoJCXZhciBjYWxs
YmFja0ludmVyc2UsCgkJCW1hdGNoZXMgPSBbXSwKCQkJaSA9IDAsCgkJCWxlbmd0aCA9IGVsZW1z
Lmxlbmd0aCwKCQkJY2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0OwoKCQkvLyBHbyB0aHJvdWdoIHRo
ZSBhcnJheSwgb25seSBzYXZpbmcgdGhlIGl0ZW1zCgkJLy8gdGhhdCBwYXNzIHRoZSB2YWxpZGF0
b3IgZnVuY3Rpb24KCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHsKCQkJY2FsbGJhY2tJbnZl
cnNlID0gIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7CgkJCWlmICggY2FsbGJhY2tJbnZlcnNl
ICE9PSBjYWxsYmFja0V4cGVjdCApIHsKCQkJCW1hdGNoZXMucHVzaCggZWxlbXNbIGkgXSApOwoJ
CQl9CgkJfQoKCQlyZXR1cm4gbWF0Y2hlczsKCX0sCgoJLy8gYXJnIGlzIGZvciBpbnRlcm5hbCB1
c2FnZSBvbmx5CgltYXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGFyZyApIHsKCQl2YXIg
bGVuZ3RoLCB2YWx1ZSwKCQkJaSA9IDAsCgkJCXJldCA9IFtdOwoKCQkvLyBHbyB0aHJvdWdoIHRo
ZSBhcnJheSwgdHJhbnNsYXRpbmcgZWFjaCBvZiB0aGUgaXRlbXMgdG8gdGhlaXIgbmV3IHZhbHVl
cwoJCWlmICggaXNBcnJheUxpa2UoIGVsZW1zICkgKSB7CgkJCWxlbmd0aCA9IGVsZW1zLmxlbmd0
aDsKCQkJZm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7CgkJCQl2YWx1ZSA9IGNhbGxiYWNrKCBl
bGVtc1sgaSBdLCBpLCBhcmcgKTsKCgkJCQlpZiAoIHZhbHVlICE9IG51bGwgKSB7CgkJCQkJcmV0
LnB1c2goIHZhbHVlICk7CgkJCQl9CgkJCX0KCgkJLy8gR28gdGhyb3VnaCBldmVyeSBrZXkgb24g
dGhlIG9iamVjdCwKCQl9IGVsc2UgewoJCQlmb3IgKCBpIGluIGVsZW1zICkgewoJCQkJdmFsdWUg
PSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7CgoJCQkJaWYgKCB2YWx1ZSAhPSBudWxs
ICkgewoJCQkJCXJldC5wdXNoKCB2YWx1ZSApOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBGbGF0dGVu
IGFueSBuZXN0ZWQgYXJyYXlzCgkJcmV0dXJuIGNvbmNhdC5hcHBseSggW10sIHJldCApOwoJfSwK
CgkvLyBBIGdsb2JhbCBHVUlEIGNvdW50ZXIgZm9yIG9iamVjdHMKCWd1aWQ6IDEsCgoJLy8gQmlu
ZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcg
YW55CgkvLyBhcmd1bWVudHMuCglwcm94eTogZnVuY3Rpb24oIGZuLCBjb250ZXh0ICkgewoJCXZh
ciB0bXAsIGFyZ3MsIHByb3h5OwoKCQlpZiAoIHR5cGVvZiBjb250ZXh0ID09PSAic3RyaW5nIiAp
IHsKCQkJdG1wID0gZm5bIGNvbnRleHQgXTsKCQkJY29udGV4dCA9IGZuOwoJCQlmbiA9IHRtcDsK
CQl9CgoJCS8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUs
IGluIHRoZSBzcGVjCgkJLy8gdGhpcyB0aHJvd3MgYSBUeXBlRXJyb3IsIGJ1dCB3ZSB3aWxsIGp1
c3QgcmV0dXJuIHVuZGVmaW5lZC4KCQlpZiAoICFqUXVlcnkuaXNGdW5jdGlvbiggZm4gKSApIHsK
CQkJcmV0dXJuIHVuZGVmaW5lZDsKCQl9CgoJCS8vIFNpbXVsYXRlZCBiaW5kCgkJYXJncyA9IHNs
aWNlLmNhbGwoIGFyZ3VtZW50cywgMiApOwoJCXByb3h5ID0gZnVuY3Rpb24oKSB7CgkJCXJldHVy
biBmbi5hcHBseSggY29udGV4dCB8fCB0aGlzLCBhcmdzLmNvbmNhdCggc2xpY2UuY2FsbCggYXJn
dW1lbnRzICkgKSApOwoJCX07CgoJCS8vIFNldCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0
byB0aGUgc2FtZSBvZiBvcmlnaW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZAoJCXBy
b3h5Lmd1aWQgPSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBqUXVlcnkuZ3VpZCsrOwoKCQlyZXR1cm4g
cHJveHk7Cgl9LAoKCW5vdzogRGF0ZS5ub3csCgoJLy8galF1ZXJ5LnN1cHBvcnQgaXMgbm90IHVz
ZWQgaW4gQ29yZSBidXQgb3RoZXIgcHJvamVjdHMgYXR0YWNoIHRoZWlyCgkvLyBwcm9wZXJ0aWVz
IHRvIGl0IHNvIGl0IG5lZWRzIHRvIGV4aXN0LgoJc3VwcG9ydDogc3VwcG9ydAp9ICk7CgppZiAo
IHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgKSB7CglqUXVlcnkuZm5bIFN5bWJvbC5pdGVy
YXRvciBdID0gYXJyWyBTeW1ib2wuaXRlcmF0b3IgXTsKfQoKLy8gUG9wdWxhdGUgdGhlIGNsYXNz
MnR5cGUgbWFwCmpRdWVyeS5lYWNoKCAiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFy
cmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciBTeW1ib2wiLnNwbGl0KCAiICIgKSwKZnVuY3Rp
b24oIGksIG5hbWUgKSB7CgljbGFzczJ0eXBlWyAiW29iamVjdCAiICsgbmFtZSArICJdIiBdID0g
bmFtZS50b0xvd2VyQ2FzZSgpOwp9ICk7CgpmdW5jdGlvbiBpc0FycmF5TGlrZSggb2JqICkgewoK
CS8vIFN1cHBvcnQ6IHJlYWwgaU9TIDguMiBvbmx5IChub3QgcmVwcm9kdWNpYmxlIGluIHNpbXVs
YXRvcikKCS8vIGBpbmAgY2hlY2sgdXNlZCB0byBwcmV2ZW50IEpJVCBlcnJvciAoZ2gtMjE0NSkK
CS8vIGhhc093biBpc24ndCB1c2VkIGhlcmUgZHVlIHRvIGZhbHNlIG5lZ2F0aXZlcwoJLy8gcmVn
YXJkaW5nIE5vZGVsaXN0IGxlbmd0aCBpbiBJRQoJdmFyIGxlbmd0aCA9ICEhb2JqICYmICJsZW5n
dGgiIGluIG9iaiAmJiBvYmoubGVuZ3RoLAoJCXR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7CgoJ
aWYgKCB0eXBlID09PSAiZnVuY3Rpb24iIHx8IGpRdWVyeS5pc1dpbmRvdyggb2JqICkgKSB7CgkJ
cmV0dXJuIGZhbHNlOwoJfQoKCXJldHVybiB0eXBlID09PSAiYXJyYXkiIHx8IGxlbmd0aCA9PT0g
MCB8fAoJCXR5cGVvZiBsZW5ndGggPT09ICJudW1iZXIiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5n
dGggLSAxICkgaW4gb2JqOwp9CnZhciBTaXp6bGUgPQovKiEKICogU2l6emxlIENTUyBTZWxlY3Rv
ciBFbmdpbmUgdjIuMy4zCiAqIGh0dHBzOi8vc2l6emxlanMuY29tLwogKgogKiBDb3B5cmlnaHQg
alF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRl
ciB0aGUgTUlUIGxpY2Vuc2UKICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBEYXRl
OiAyMDE2LTA4LTA4CiAqLwooZnVuY3Rpb24oIHdpbmRvdyApIHsKCnZhciBpLAoJc3VwcG9ydCwK
CUV4cHIsCglnZXRUZXh0LAoJaXNYTUwsCgl0b2tlbml6ZSwKCWNvbXBpbGUsCglzZWxlY3QsCglv
dXRlcm1vc3RDb250ZXh0LAoJc29ydElucHV0LAoJaGFzRHVwbGljYXRlLAoKCS8vIExvY2FsIGRv
Y3VtZW50IHZhcnMKCXNldERvY3VtZW50LAoJZG9jdW1lbnQsCglkb2NFbGVtLAoJZG9jdW1lbnRJ
c0hUTUwsCglyYnVnZ3lRU0EsCglyYnVnZ3lNYXRjaGVzLAoJbWF0Y2hlcywKCWNvbnRhaW5zLAoK
CS8vIEluc3RhbmNlLXNwZWNpZmljIGRhdGEKCWV4cGFuZG8gPSAic2l6emxlIiArIDEgKiBuZXcg
RGF0ZSgpLAoJcHJlZmVycmVkRG9jID0gd2luZG93LmRvY3VtZW50LAoJZGlycnVucyA9IDAsCglk
b25lID0gMCwKCWNsYXNzQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLAoJdG9rZW5DYWNoZSA9IGNyZWF0
ZUNhY2hlKCksCgljb21waWxlckNhY2hlID0gY3JlYXRlQ2FjaGUoKSwKCXNvcnRPcmRlciA9IGZ1
bmN0aW9uKCBhLCBiICkgewoJCWlmICggYSA9PT0gYiApIHsKCQkJaGFzRHVwbGljYXRlID0gdHJ1
ZTsKCQl9CgkJcmV0dXJuIDA7Cgl9LAoKCS8vIEluc3RhbmNlIG1ldGhvZHMKCWhhc093biA9ICh7
fSkuaGFzT3duUHJvcGVydHksCglhcnIgPSBbXSwKCXBvcCA9IGFyci5wb3AsCglwdXNoX25hdGl2
ZSA9IGFyci5wdXNoLAoJcHVzaCA9IGFyci5wdXNoLAoJc2xpY2UgPSBhcnIuc2xpY2UsCgkvLyBV
c2UgYSBzdHJpcHBlZC1kb3duIGluZGV4T2YgYXMgaXQncyBmYXN0ZXIgdGhhbiBuYXRpdmUKCS8v
IGh0dHBzOi8vanNwZXJmLmNvbS90aG9yLWluZGV4b2YtdnMtZm9yLzUKCWluZGV4T2YgPSBmdW5j
dGlvbiggbGlzdCwgZWxlbSApIHsKCQl2YXIgaSA9IDAsCgkJCWxlbiA9IGxpc3QubGVuZ3RoOwoJ
CWZvciAoIDsgaSA8IGxlbjsgaSsrICkgewoJCQlpZiAoIGxpc3RbaV0gPT09IGVsZW0gKSB7CgkJ
CQlyZXR1cm4gaTsKCQkJfQoJCX0KCQlyZXR1cm4gLTE7Cgl9LAoKCWJvb2xlYW5zID0gImNoZWNr
ZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2Fi
bGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2Nv
cGVkIiwKCgkvLyBSZWd1bGFyIGV4cHJlc3Npb25zCgoJLy8gaHR0cDovL3d3dy53My5vcmcvVFIv
Y3NzMy1zZWxlY3RvcnMvI3doaXRlc3BhY2UKCXdoaXRlc3BhY2UgPSAiW1xceDIwXFx0XFxyXFxu
XFxmXSIsCgoJLy8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI3ZhbHVl
LWRlZi1pZGVudGlmaWVyCglpZGVudGlmaWVyID0gIig/OlxcXFwufFtcXHctXXxbXlwwLVxceGEw
XSkrIiwKCgkvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxl
Y3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnMKCWF0dHJpYnV0ZXMgPSAiXFxbIiArIHdoaXRlc3Bh
Y2UgKyAiKigiICsgaWRlbnRpZmllciArICIpKD86IiArIHdoaXRlc3BhY2UgKwoJCS8vIE9wZXJh
dG9yIChjYXB0dXJlIDIpCgkJIiooWypeJHwhfl0/PSkiICsgd2hpdGVzcGFjZSArCgkJLy8gIkF0
dHJpYnV0ZSB2YWx1ZXMgbXVzdCBiZSBDU1MgaWRlbnRpZmllcnMgW2NhcHR1cmUgNV0gb3Igc3Ry
aW5ncyBbY2FwdHVyZSAzIG9yIGNhcHR1cmUgNF0iCgkJIiooPzonKCg/OlxcXFwufFteXFxcXCdd
KSopJ3xcIigoPzpcXFxcLnxbXlxcXFxcIl0pKilcInwoIiArIGlkZW50aWZpZXIgKyAiKSl8KSIg
KyB3aGl0ZXNwYWNlICsKCQkiKlxcXSIsCgoJcHNldWRvcyA9ICI6KCIgKyBpZGVudGlmaWVyICsg
IikoPzpcXCgoIiArCgkJLy8gVG8gcmVkdWNlIHRoZSBudW1iZXIgb2Ygc2VsZWN0b3JzIG5lZWRp
bmcgdG9rZW5pemUgaW4gdGhlIHByZUZpbHRlciwgcHJlZmVyIGFyZ3VtZW50czoKCQkvLyAxLiBx
dW90ZWQgKGNhcHR1cmUgMzsgY2FwdHVyZSA0IG9yIGNhcHR1cmUgNSkKCQkiKCcoKD86XFxcXC58
W15cXFxcJ10pKiknfFwiKCg/OlxcXFwufFteXFxcXFwiXSkqKVwiKXwiICsKCQkvLyAyLiBzaW1w
bGUgKGNhcHR1cmUgNikKCQkiKCg/OlxcXFwufFteXFxcXCgpW1xcXV18IiArIGF0dHJpYnV0ZXMg
KyAiKSopfCIgKwoJCS8vIDMuIGFueXRoaW5nIGVsc2UgKGNhcHR1cmUgMikKCQkiLioiICsKCQki
KVxcKXwpIiwKCgkvLyBMZWFkaW5nIGFuZCBub24tZXNjYXBlZCB0cmFpbGluZyB3aGl0ZXNwYWNl
LCBjYXB0dXJpbmcgc29tZSBub24td2hpdGVzcGFjZSBjaGFyYWN0ZXJzIHByZWNlZGluZyB0aGUg
bGF0dGVyCglyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyAiKyIsICJnIiAp
LAoJcnRyaW0gPSBuZXcgUmVnRXhwKCAiXiIgKyB3aGl0ZXNwYWNlICsgIit8KCg/Ol58W15cXFxc
XSkoPzpcXFxcLikqKSIgKyB3aGl0ZXNwYWNlICsgIiskIiwgImciICksCgoJcmNvbW1hID0gbmV3
IFJlZ0V4cCggIl4iICsgd2hpdGVzcGFjZSArICIqLCIgKyB3aGl0ZXNwYWNlICsgIioiICksCgly
Y29tYmluYXRvcnMgPSBuZXcgUmVnRXhwKCAiXiIgKyB3aGl0ZXNwYWNlICsgIiooWz4rfl18IiAr
IHdoaXRlc3BhY2UgKyAiKSIgKyB3aGl0ZXNwYWNlICsgIioiICksCgoJcmF0dHJpYnV0ZVF1b3Rl
cyA9IG5ldyBSZWdFeHAoICI9IiArIHdoaXRlc3BhY2UgKyAiKihbXlxcXSdcIl0qPykiICsgd2hp
dGVzcGFjZSArICIqXFxdIiwgImciICksCgoJcnBzZXVkbyA9IG5ldyBSZWdFeHAoIHBzZXVkb3Mg
KSwKCXJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggIl4iICsgaWRlbnRpZmllciArICIkIiApLAoK
CW1hdGNoRXhwciA9IHsKCQkiSUQiOiBuZXcgUmVnRXhwKCAiXiMoIiArIGlkZW50aWZpZXIgKyAi
KSIgKSwKCQkiQ0xBU1MiOiBuZXcgUmVnRXhwKCAiXlxcLigiICsgaWRlbnRpZmllciArICIpIiAp
LAoJCSJUQUciOiBuZXcgUmVnRXhwKCAiXigiICsgaWRlbnRpZmllciArICJ8WypdKSIgKSwKCQki
QVRUUiI6IG5ldyBSZWdFeHAoICJeIiArIGF0dHJpYnV0ZXMgKSwKCQkiUFNFVURPIjogbmV3IFJl
Z0V4cCggIl4iICsgcHNldWRvcyApLAoJCSJDSElMRCI6IG5ldyBSZWdFeHAoICJeOihvbmx5fGZp
cnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXCgiICsgd2hpdGVzcGFj
ZSArCgkJCSIqKGV2ZW58b2RkfCgoWystXXwpKFxcZCopbnwpIiArIHdoaXRlc3BhY2UgKyAiKig/
OihbKy1dfCkiICsgd2hpdGVzcGFjZSArCgkJCSIqKFxcZCspfCkpIiArIHdoaXRlc3BhY2UgKyAi
KlxcKXwpIiwgImkiICksCgkJImJvb2wiOiBuZXcgUmVnRXhwKCAiXig/OiIgKyBib29sZWFucyAr
ICIpJCIsICJpIiApLAoJCS8vIEZvciB1c2UgaW4gbGlicmFyaWVzIGltcGxlbWVudGluZyAuaXMo
KQoJCS8vIFdlIHVzZSB0aGlzIGZvciBQT1MgbWF0Y2hpbmcgaW4gYHNlbGVjdGAKCQkibmVlZHND
b250ZXh0IjogbmV3IFJlZ0V4cCggIl4iICsgd2hpdGVzcGFjZSArICIqWz4rfl18OihldmVufG9k
ZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXCgiICsKCQkJd2hpdGVzcGFjZSArICIqKCg/
Oi1cXGQpP1xcZCopIiArIHdoaXRlc3BhY2UgKyAiKlxcKXwpKD89W14tXXwkKSIsICJpIiApCgl9
LAoKCXJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLAoJcmhl
YWRlciA9IC9eaFxkJC9pLAoKCXJuYXRpdmUgPSAvXltee10rXHtccypcW25hdGl2ZSBcdy8sCgoJ
Ly8gRWFzaWx5LXBhcnNlYWJsZS9yZXRyaWV2YWJsZSBJRCBvciBUQUcgb3IgQ0xBU1Mgc2VsZWN0
b3JzCglycXVpY2tFeHByID0gL14oPzojKFtcdy1dKyl8KFx3Kyl8XC4oW1x3LV0rKSkkLywKCgly
c2libGluZyA9IC9bK35dLywKCgkvLyBDU1MgZXNjYXBlcwoJLy8gaHR0cDovL3d3dy53My5vcmcv
VFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVycwoJcnVuZXNjYXBlID0gbmV3
IFJlZ0V4cCggIlxcXFwoW1xcZGEtZl17MSw2fSIgKyB3aGl0ZXNwYWNlICsgIj98KCIgKyB3aGl0
ZXNwYWNlICsgIil8LikiLCAiaWciICksCglmdW5lc2NhcGUgPSBmdW5jdGlvbiggXywgZXNjYXBl
ZCwgZXNjYXBlZFdoaXRlc3BhY2UgKSB7CgkJdmFyIGhpZ2ggPSAiMHgiICsgZXNjYXBlZCAtIDB4
MTAwMDA7CgkJLy8gTmFOIG1lYW5zIG5vbi1jb2RlcG9pbnQKCQkvLyBTdXBwb3J0OiBGaXJlZm94
PDI0CgkJLy8gV29ya2Fyb3VuZCBlcnJvbmVvdXMgbnVtZXJpYyBpbnRlcnByZXRhdGlvbiBvZiAr
IjB4IgoJCXJldHVybiBoaWdoICE9PSBoaWdoIHx8IGVzY2FwZWRXaGl0ZXNwYWNlID8KCQkJZXNj
YXBlZCA6CgkJCWhpZ2ggPCAwID8KCQkJCS8vIEJNUCBjb2RlcG9pbnQKCQkJCVN0cmluZy5mcm9t
Q2hhckNvZGUoIGhpZ2ggKyAweDEwMDAwICkgOgoJCQkJLy8gU3VwcGxlbWVudGFsIFBsYW5lIGNv
ZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpCgkJCQlTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoID4+
IDEwIHwgMHhEODAwLCBoaWdoICYgMHgzRkYgfCAweERDMDAgKTsKCX0sCgoJLy8gQ1NTIHN0cmlu
Zy9pZGVudGlmaWVyIHNlcmlhbGl6YXRpb24KCS8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9j
c3NvbS8jY29tbW9uLXNlcmlhbGl6aW5nLWlkaW9tcwoJcmNzc2VzY2FwZSA9IC8oW1wwLVx4MWZc
eDdmXXxeLT9cZCl8Xi0kfFteXDAtXHgxZlx4N2YtXHVGRkZGXHctXS9nLAoJZmNzc2VzY2FwZSA9
IGZ1bmN0aW9uKCBjaCwgYXNDb2RlUG9pbnQgKSB7CgkJaWYgKCBhc0NvZGVQb2ludCApIHsKCgkJ
CS8vIFUrMDAwMCBOVUxMIGJlY29tZXMgVStGRkZEIFJFUExBQ0VNRU5UIENIQVJBQ1RFUgoJCQlp
ZiAoIGNoID09PSAiXDAiICkgewoJCQkJcmV0dXJuICJcdUZGRkQiOwoJCQl9CgoJCQkvLyBDb250
cm9sIGNoYXJhY3RlcnMgYW5kIChkZXBlbmRlbnQgdXBvbiBwb3NpdGlvbikgbnVtYmVycyBnZXQg
ZXNjYXBlZCBhcyBjb2RlIHBvaW50cwoJCQlyZXR1cm4gY2guc2xpY2UoIDAsIC0xICkgKyAiXFwi
ICsgY2guY2hhckNvZGVBdCggY2gubGVuZ3RoIC0gMSApLnRvU3RyaW5nKCAxNiApICsgIiAiOwoJ
CX0KCgkJLy8gT3RoZXIgcG90ZW50aWFsbHktc3BlY2lhbCBBU0NJSSBjaGFyYWN0ZXJzIGdldCBi
YWNrc2xhc2gtZXNjYXBlZAoJCXJldHVybiAiXFwiICsgY2g7Cgl9LAoKCS8vIFVzZWQgZm9yIGlm
cmFtZXMKCS8vIFNlZSBzZXREb2N1bWVudCgpCgkvLyBSZW1vdmluZyB0aGUgZnVuY3Rpb24gd3Jh
cHBlciBjYXVzZXMgYSAiUGVybWlzc2lvbiBEZW5pZWQiCgkvLyBlcnJvciBpbiBJRQoJdW5sb2Fk
SGFuZGxlciA9IGZ1bmN0aW9uKCkgewoJCXNldERvY3VtZW50KCk7Cgl9LAoKCWRpc2FibGVkQW5j
ZXN0b3IgPSBhZGRDb21iaW5hdG9yKAoJCWZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxl
bS5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiAoImZvcm0iIGluIGVsZW0gfHwgImxhYmVsIiBpbiBlbGVt
KTsKCQl9LAoJCXsgZGlyOiAicGFyZW50Tm9kZSIsIG5leHQ6ICJsZWdlbmQiIH0KCSk7CgovLyBP
cHRpbWl6ZSBmb3IgcHVzaC5hcHBseSggXywgTm9kZUxpc3QgKQp0cnkgewoJcHVzaC5hcHBseSgK
CQkoYXJyID0gc2xpY2UuY2FsbCggcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMgKSksCgkJcHJlZmVy
cmVkRG9jLmNoaWxkTm9kZXMKCSk7CgkvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMAoJLy8gRGV0ZWN0
IHNpbGVudGx5IGZhaWxpbmcgcHVzaC5hcHBseQoJYXJyWyBwcmVmZXJyZWREb2MuY2hpbGROb2Rl
cy5sZW5ndGggXS5ub2RlVHlwZTsKfSBjYXRjaCAoIGUgKSB7CglwdXNoID0geyBhcHBseTogYXJy
Lmxlbmd0aCA/CgoJCS8vIExldmVyYWdlIHNsaWNlIGlmIHBvc3NpYmxlCgkJZnVuY3Rpb24oIHRh
cmdldCwgZWxzICkgewoJCQlwdXNoX25hdGl2ZS5hcHBseSggdGFyZ2V0LCBzbGljZS5jYWxsKGVs
cykgKTsKCQl9IDoKCgkJLy8gU3VwcG9ydDogSUU8OQoJCS8vIE90aGVyd2lzZSBhcHBlbmQgZGly
ZWN0bHkKCQlmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7CgkJCXZhciBqID0gdGFyZ2V0Lmxlbmd0
aCwKCQkJCWkgPSAwOwoJCQkvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGgKCQkJd2hpbGUg
KCAodGFyZ2V0W2orK10gPSBlbHNbaSsrXSkgKSB7fQoJCQl0YXJnZXQubGVuZ3RoID0gaiAtIDE7
CgkJfQoJfTsKfQoKZnVuY3Rpb24gU2l6emxlKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywg
c2VlZCApIHsKCXZhciBtLCBpLCBlbGVtLCBuaWQsIG1hdGNoLCBncm91cHMsIG5ld1NlbGVjdG9y
LAoJCW5ld0NvbnRleHQgPSBjb250ZXh0ICYmIGNvbnRleHQub3duZXJEb2N1bWVudCwKCgkJLy8g
bm9kZVR5cGUgZGVmYXVsdHMgdG8gOSwgc2luY2UgY29udGV4dCBkZWZhdWx0cyB0byBkb2N1bWVu
dAoJCW5vZGVUeXBlID0gY29udGV4dCA/IGNvbnRleHQubm9kZVR5cGUgOiA5OwoKCXJlc3VsdHMg
PSByZXN1bHRzIHx8IFtdOwoKCS8vIFJldHVybiBlYXJseSBmcm9tIGNhbGxzIHdpdGggaW52YWxp
ZCBzZWxlY3RvciBvciBjb250ZXh0CglpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gInN0cmluZyIg
fHwgIXNlbGVjdG9yIHx8CgkJbm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9k
ZVR5cGUgIT09IDExICkgewoKCQlyZXR1cm4gcmVzdWx0czsKCX0KCgkvLyBUcnkgdG8gc2hvcnRj
dXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1l
bnRzCglpZiAoICFzZWVkICkgewoKCQlpZiAoICggY29udGV4dCA/IGNvbnRleHQub3duZXJEb2N1
bWVudCB8fCBjb250ZXh0IDogcHJlZmVycmVkRG9jICkgIT09IGRvY3VtZW50ICkgewoJCQlzZXRE
b2N1bWVudCggY29udGV4dCApOwoJCX0KCQljb250ZXh0ID0gY29udGV4dCB8fCBkb2N1bWVudDsK
CgkJaWYgKCBkb2N1bWVudElzSFRNTCApIHsKCgkJCS8vIElmIHRoZSBzZWxlY3RvciBpcyBzdWZm
aWNpZW50bHkgc2ltcGxlLCB0cnkgdXNpbmcgYSAiZ2V0KkJ5KiIgRE9NIG1ldGhvZAoJCQkvLyAo
ZXhjZXB0aW5nIERvY3VtZW50RnJhZ21lbnQgY29udGV4dCwgd2hlcmUgdGhlIG1ldGhvZHMgZG9u
J3QgZXhpc3QpCgkJCWlmICggbm9kZVR5cGUgIT09IDExICYmIChtYXRjaCA9IHJxdWlja0V4cHIu
ZXhlYyggc2VsZWN0b3IgKSkgKSB7CgoJCQkJLy8gSUQgc2VsZWN0b3IKCQkJCWlmICggKG0gPSBt
YXRjaFsxXSkgKSB7CgoJCQkJCS8vIERvY3VtZW50IGNvbnRleHQKCQkJCQlpZiAoIG5vZGVUeXBl
ID09PSA5ICkgewoJCQkJCQlpZiAoIChlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbSAp
KSApIHsKCgkJCQkJCQkvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdAoJCQkJCQkJLy8gVE9E
TzogaWRlbnRpZnkgdmVyc2lvbnMKCQkJCQkJCS8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBl
bGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSUQKCQkJCQkJCWlmICggZWxlbS5pZCA9PT0gbSAp
IHsKCQkJCQkJCQlyZXN1bHRzLnB1c2goIGVsZW0gKTsKCQkJCQkJCQlyZXR1cm4gcmVzdWx0czsK
CQkJCQkJCX0KCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXJldHVybiByZXN1bHRzOwoJCQkJCQl9CgoJ
CQkJCS8vIEVsZW1lbnQgY29udGV4dAoJCQkJCX0gZWxzZSB7CgoJCQkJCQkvLyBTdXBwb3J0OiBJ
RSwgT3BlcmEsIFdlYmtpdAoJCQkJCQkvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9ucwoJCQkJCQkv
LyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElE
CgkJCQkJCWlmICggbmV3Q29udGV4dCAmJiAoZWxlbSA9IG5ld0NvbnRleHQuZ2V0RWxlbWVudEJ5
SWQoIG0gKSkgJiYKCQkJCQkJCWNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICkgJiYKCQkJCQkJCWVs
ZW0uaWQgPT09IG0gKSB7CgoJCQkJCQkJcmVzdWx0cy5wdXNoKCBlbGVtICk7CgkJCQkJCQlyZXR1
cm4gcmVzdWx0czsKCQkJCQkJfQoJCQkJCX0KCgkJCQkvLyBUeXBlIHNlbGVjdG9yCgkJCQl9IGVs
c2UgaWYgKCBtYXRjaFsyXSApIHsKCQkJCQlwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0Lmdl
dEVsZW1lbnRzQnlUYWdOYW1lKCBzZWxlY3RvciApICk7CgkJCQkJcmV0dXJuIHJlc3VsdHM7CgoJ
CQkJLy8gQ2xhc3Mgc2VsZWN0b3IKCQkJCX0gZWxzZSBpZiAoIChtID0gbWF0Y2hbM10pICYmIHN1
cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJgoJCQkJCWNvbnRleHQuZ2V0RWxlbWVudHNC
eUNsYXNzTmFtZSApIHsKCgkJCQkJcHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVt
ZW50c0J5Q2xhc3NOYW1lKCBtICkgKTsKCQkJCQlyZXR1cm4gcmVzdWx0czsKCQkJCX0KCQkJfQoK
CQkJLy8gVGFrZSBhZHZhbnRhZ2Ugb2YgcXVlcnlTZWxlY3RvckFsbAoJCQlpZiAoIHN1cHBvcnQu
cXNhICYmCgkJCQkhY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyAiICIgXSAmJgoJCQkJKCFyYnVn
Z3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApKSApIHsKCgkJCQlpZiAoIG5vZGVU
eXBlICE9PSAxICkgewoJCQkJCW5ld0NvbnRleHQgPSBjb250ZXh0OwoJCQkJCW5ld1NlbGVjdG9y
ID0gc2VsZWN0b3I7CgoJCQkJLy8gcVNBIGxvb2tzIG91dHNpZGUgRWxlbWVudCBjb250ZXh0LCB3
aGljaCBpcyBub3Qgd2hhdCB3ZSB3YW50CgkJCQkvLyBUaGFua3MgdG8gQW5kcmV3IER1cG9udCBm
b3IgdGhpcyB3b3JrYXJvdW5kIHRlY2huaXF1ZQoJCQkJLy8gU3VwcG9ydDogSUUgPD04CgkJCQkv
LyBFeGNsdWRlIG9iamVjdCBlbGVtZW50cwoJCQkJfSBlbHNlIGlmICggY29udGV4dC5ub2RlTmFt
ZS50b0xvd2VyQ2FzZSgpICE9PSAib2JqZWN0IiApIHsKCgkJCQkJLy8gQ2FwdHVyZSB0aGUgY29u
dGV4dCBJRCwgc2V0dGluZyBpdCBmaXJzdCBpZiBuZWNlc3NhcnkKCQkJCQlpZiAoIChuaWQgPSBj
b250ZXh0LmdldEF0dHJpYnV0ZSggImlkIiApKSApIHsKCQkJCQkJbmlkID0gbmlkLnJlcGxhY2Uo
IHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTsKCQkJCQl9IGVsc2UgewoJCQkJCQljb250ZXh0LnNl
dEF0dHJpYnV0ZSggImlkIiwgKG5pZCA9IGV4cGFuZG8pICk7CgkJCQkJfQoKCQkJCQkvLyBQcmVm
aXggZXZlcnkgc2VsZWN0b3IgaW4gdGhlIGxpc3QKCQkJCQlncm91cHMgPSB0b2tlbml6ZSggc2Vs
ZWN0b3IgKTsKCQkJCQlpID0gZ3JvdXBzLmxlbmd0aDsKCQkJCQl3aGlsZSAoIGktLSApIHsKCQkJ
CQkJZ3JvdXBzW2ldID0gIiMiICsgbmlkICsgIiAiICsgdG9TZWxlY3RvciggZ3JvdXBzW2ldICk7
CgkJCQkJfQoJCQkJCW5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oICIsIiApOwoKCQkJCQkvLyBF
eHBhbmQgY29udGV4dCBmb3Igc2libGluZyBzZWxlY3RvcnMKCQkJCQluZXdDb250ZXh0ID0gcnNp
YmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2Rl
ICkgfHwKCQkJCQkJY29udGV4dDsKCQkJCX0KCgkJCQlpZiAoIG5ld1NlbGVjdG9yICkgewoJCQkJ
CXRyeSB7CgkJCQkJCXB1c2guYXBwbHkoIHJlc3VsdHMsCgkJCQkJCQluZXdDb250ZXh0LnF1ZXJ5
U2VsZWN0b3JBbGwoIG5ld1NlbGVjdG9yICkKCQkJCQkJKTsKCQkJCQkJcmV0dXJuIHJlc3VsdHM7
CgkJCQkJfSBjYXRjaCAoIHFzYUVycm9yICkgewoJCQkJCX0gZmluYWxseSB7CgkJCQkJCWlmICgg
bmlkID09PSBleHBhbmRvICkgewoJCQkJCQkJY29udGV4dC5yZW1vdmVBdHRyaWJ1dGUoICJpZCIg
KTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCX0KCgkvLyBBbGwgb3RoZXJzCglyZXR1
cm4gc2VsZWN0KCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgIiQxIiApLCBjb250ZXh0LCByZXN1
bHRzLCBzZWVkICk7Cn0KCi8qKgogKiBDcmVhdGUga2V5LXZhbHVlIGNhY2hlcyBvZiBsaW1pdGVk
IHNpemUKICogQHJldHVybnMge2Z1bmN0aW9uKHN0cmluZywgb2JqZWN0KX0gUmV0dXJucyB0aGUg
T2JqZWN0IGRhdGEgYWZ0ZXIgc3RvcmluZyBpdCBvbiBpdHNlbGYgd2l0aAogKglwcm9wZXJ0eSBu
YW1lIHRoZSAoc3BhY2Utc3VmZml4ZWQpIHN0cmluZyBhbmQgKGlmIHRoZSBjYWNoZSBpcyBsYXJn
ZXIgdGhhbiBFeHByLmNhY2hlTGVuZ3RoKQogKglkZWxldGluZyB0aGUgb2xkZXN0IGVudHJ5CiAq
LwpmdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHsKCXZhciBrZXlzID0gW107CgoJZnVuY3Rpb24gY2Fj
aGUoIGtleSwgdmFsdWUgKSB7CgkJLy8gVXNlIChrZXkgKyAiICIpIHRvIGF2b2lkIGNvbGxpc2lv
biB3aXRoIG5hdGl2ZSBwcm90b3R5cGUgcHJvcGVydGllcyAoc2VlIElzc3VlICMxNTcpCgkJaWYg
KCBrZXlzLnB1c2goIGtleSArICIgIiApID4gRXhwci5jYWNoZUxlbmd0aCApIHsKCQkJLy8gT25s
eSBrZWVwIHRoZSBtb3N0IHJlY2VudCBlbnRyaWVzCgkJCWRlbGV0ZSBjYWNoZVsga2V5cy5zaGlm
dCgpIF07CgkJfQoJCXJldHVybiAoY2FjaGVbIGtleSArICIgIiBdID0gdmFsdWUpOwoJfQoJcmV0
dXJuIGNhY2hlOwp9CgovKioKICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBT
aXp6bGUKICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIG1hcmsKICovCmZ1
bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7CglmblsgZXhwYW5kbyBdID0gdHJ1ZTsKCXJldHVy
biBmbjsKfQoKLyoqCiAqIFN1cHBvcnQgdGVzdGluZyB1c2luZyBhbiBlbGVtZW50CiAqIEBwYXJh
bSB7RnVuY3Rpb259IGZuIFBhc3NlZCB0aGUgY3JlYXRlZCBlbGVtZW50IGFuZCByZXR1cm5zIGEg
Ym9vbGVhbiByZXN1bHQKICovCmZ1bmN0aW9uIGFzc2VydCggZm4gKSB7Cgl2YXIgZWwgPSBkb2N1
bWVudC5jcmVhdGVFbGVtZW50KCJmaWVsZHNldCIpOwoKCXRyeSB7CgkJcmV0dXJuICEhZm4oIGVs
ICk7Cgl9IGNhdGNoIChlKSB7CgkJcmV0dXJuIGZhbHNlOwoJfSBmaW5hbGx5IHsKCQkvLyBSZW1v
dmUgZnJvbSBpdHMgcGFyZW50IGJ5IGRlZmF1bHQKCQlpZiAoIGVsLnBhcmVudE5vZGUgKSB7CgkJ
CWVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIGVsICk7CgkJfQoJCS8vIHJlbGVhc2UgbWVtb3J5
IGluIElFCgkJZWwgPSBudWxsOwoJfQp9CgovKioKICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZv
ciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRycwogKiBAcGFyYW0ge1N0cmluZ30gYXR0cnMgUGlw
ZS1zZXBhcmF0ZWQgbGlzdCBvZiBhdHRyaWJ1dGVzCiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRs
ZXIgVGhlIG1ldGhvZCB0aGF0IHdpbGwgYmUgYXBwbGllZAogKi8KZnVuY3Rpb24gYWRkSGFuZGxl
KCBhdHRycywgaGFuZGxlciApIHsKCXZhciBhcnIgPSBhdHRycy5zcGxpdCgifCIpLAoJCWkgPSBh
cnIubGVuZ3RoOwoKCXdoaWxlICggaS0tICkgewoJCUV4cHIuYXR0ckhhbmRsZVsgYXJyW2ldIF0g
PSBoYW5kbGVyOwoJfQp9CgovKioKICogQ2hlY2tzIGRvY3VtZW50IG9yZGVyIG9mIHR3byBzaWJs
aW5ncwogKiBAcGFyYW0ge0VsZW1lbnR9IGEKICogQHBhcmFtIHtFbGVtZW50fSBiCiAqIEByZXR1
cm5zIHtOdW1iZXJ9IFJldHVybnMgbGVzcyB0aGFuIDAgaWYgYSBwcmVjZWRlcyBiLCBncmVhdGVy
IHRoYW4gMCBpZiBhIGZvbGxvd3MgYgogKi8KZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkg
ewoJdmFyIGN1ciA9IGIgJiYgYSwKCQlkaWZmID0gY3VyICYmIGEubm9kZVR5cGUgPT09IDEgJiYg
Yi5ub2RlVHlwZSA9PT0gMSAmJgoJCQlhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDsKCgkv
LyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXMKCWlmICggZGlm
ZiApIHsKCQlyZXR1cm4gZGlmZjsKCX0KCgkvLyBDaGVjayBpZiBiIGZvbGxvd3MgYQoJaWYgKCBj
dXIgKSB7CgkJd2hpbGUgKCAoY3VyID0gY3VyLm5leHRTaWJsaW5nKSApIHsKCQkJaWYgKCBjdXIg
PT09IGIgKSB7CgkJCQlyZXR1cm4gLTE7CgkJCX0KCQl9Cgl9CgoJcmV0dXJuIGEgPyAxIDogLTE7
Cn0KCi8qKgogKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGlucHV0
IHR5cGVzCiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlCiAqLwpmdW5jdGlvbiBjcmVhdGVJbnB1dFBz
ZXVkbyggdHlwZSApIHsKCXJldHVybiBmdW5jdGlvbiggZWxlbSApIHsKCQl2YXIgbmFtZSA9IGVs
ZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQlyZXR1cm4gbmFtZSA9PT0gImlucHV0IiAmJiBl
bGVtLnR5cGUgPT09IHR5cGU7Cgl9Owp9CgovKioKICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVz
ZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zCiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlCiAqLwpmdW5j
dGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7CglyZXR1cm4gZnVuY3Rpb24oIGVsZW0g
KSB7CgkJdmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7CgkJcmV0dXJuIChu
YW1lID09PSAiaW5wdXQiIHx8IG5hbWUgPT09ICJidXR0b24iKSAmJiBlbGVtLnR5cGUgPT09IHR5
cGU7Cgl9Owp9CgovKioKICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZv
ciA6ZW5hYmxlZC86ZGlzYWJsZWQKICogQHBhcmFtIHtCb29sZWFufSBkaXNhYmxlZCB0cnVlIGZv
ciA6ZGlzYWJsZWQ7IGZhbHNlIGZvciA6ZW5hYmxlZAogKi8KZnVuY3Rpb24gY3JlYXRlRGlzYWJs
ZWRQc2V1ZG8oIGRpc2FibGVkICkgewoKCS8vIEtub3duIDpkaXNhYmxlZCBmYWxzZSBwb3NpdGl2
ZXM6IGZpZWxkc2V0W2Rpc2FibGVkXSA+IGxlZ2VuZDpudGgtb2YtdHlwZShuKzIpIDpjYW4tZGlz
YWJsZQoJcmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkgewoKCQkvLyBPbmx5IGNlcnRhaW4gZWxlbWVu
dHMgY2FuIG1hdGNoIDplbmFibGVkIG9yIDpkaXNhYmxlZAoJCS8vIGh0dHBzOi8vaHRtbC5zcGVj
LndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWVuYWJsZWQKCQkv
LyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNz
ZWxlY3Rvci1kaXNhYmxlZAoJCWlmICggImZvcm0iIGluIGVsZW0gKSB7CgoJCQkvLyBDaGVjayBm
b3IgaW5oZXJpdGVkIGRpc2FibGVkbmVzcyBvbiByZWxldmFudCBub24tZGlzYWJsZWQgZWxlbWVu
dHM6CgkJCS8vICogbGlzdGVkIGZvcm0tYXNzb2NpYXRlZCBlbGVtZW50cyBpbiBhIGRpc2FibGVk
IGZpZWxkc2V0CgkJCS8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uv
Zm9ybXMuaHRtbCNjYXRlZ29yeS1saXN0ZWQKCQkJLy8gICBodHRwczovL2h0bWwuc3BlYy53aGF0
d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtZmUtZGlzYWJsZWQKCQkJLy8gKiBv
cHRpb24gZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBvcHRncm91cAoJCQkvLyAgIGh0dHBzOi8vaHRt
bC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY29uY2VwdC1vcHRpb24tZGlz
YWJsZWQKCQkJLy8gQWxsIHN1Y2ggZWxlbWVudHMgaGF2ZSBhICJmb3JtIiBwcm9wZXJ0eS4KCQkJ
aWYgKCBlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgKSB7CgoJCQkJ
Ly8gT3B0aW9uIGVsZW1lbnRzIGRlZmVyIHRvIGEgcGFyZW50IG9wdGdyb3VwIGlmIHByZXNlbnQK
CQkJCWlmICggImxhYmVsIiBpbiBlbGVtICkgewoJCQkJCWlmICggImxhYmVsIiBpbiBlbGVtLnBh
cmVudE5vZGUgKSB7CgkJCQkJCXJldHVybiBlbGVtLnBhcmVudE5vZGUuZGlzYWJsZWQgPT09IGRp
c2FibGVkOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNh
YmxlZDsKCQkJCQl9CgkJCQl9CgoJCQkJLy8gU3VwcG9ydDogSUUgNiAtIDExCgkJCQkvLyBVc2Ug
dGhlIGlzRGlzYWJsZWQgc2hvcnRjdXQgcHJvcGVydHkgdG8gY2hlY2sgZm9yIGRpc2FibGVkIGZp
ZWxkc2V0IGFuY2VzdG9ycwoJCQkJcmV0dXJuIGVsZW0uaXNEaXNhYmxlZCA9PT0gZGlzYWJsZWQg
fHwKCgkJCQkJLy8gV2hlcmUgdGhlcmUgaXMgbm8gaXNEaXNhYmxlZCwgY2hlY2sgbWFudWFsbHkK
CQkJCQkvKiBqc2hpbnQgLVcwMTggKi8KCQkJCQllbGVtLmlzRGlzYWJsZWQgIT09ICFkaXNhYmxl
ZCAmJgoJCQkJCQlkaXNhYmxlZEFuY2VzdG9yKCBlbGVtICkgPT09IGRpc2FibGVkOwoJCQl9CgoJ
CQlyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7CgoJCS8vIFRyeSB0byB3aW5ub3cg
b3V0IGVsZW1lbnRzIHRoYXQgY2FuJ3QgYmUgZGlzYWJsZWQgYmVmb3JlIHRydXN0aW5nIHRoZSBk
aXNhYmxlZCBwcm9wZXJ0eS4KCQkvLyBTb21lIHZpY3RpbXMgZ2V0IGNhdWdodCBpbiBvdXIgbmV0
IChsYWJlbCwgbGVnZW5kLCBtZW51LCB0cmFjayksIGJ1dCBpdCBzaG91bGRuJ3QKCQkvLyBldmVu
IGV4aXN0IG9uIHRoZW0sIGxldCBhbG9uZSBoYXZlIGEgYm9vbGVhbiB2YWx1ZS4KCQl9IGVsc2Ug
aWYgKCAibGFiZWwiIGluIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNh
YmxlZDsKCQl9CgoJCS8vIFJlbWFpbmluZyBlbGVtZW50cyBhcmUgbmVpdGhlciA6ZW5hYmxlZCBu
b3IgOmRpc2FibGVkCgkJcmV0dXJuIGZhbHNlOwoJfTsKfQoKLyoqCiAqIFJldHVybnMgYSBmdW5j
dGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHMKICogQHBhcmFtIHtGdW5jdGlv
bn0gZm4KICovCmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkgewoJcmV0dXJu
IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggYXJndW1lbnQgKSB7CgkJYXJndW1lbnQgPSArYXJndW1l
bnQ7CgkJcmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHsKCQkJ
dmFyIGosCgkJCQltYXRjaEluZGV4ZXMgPSBmbiggW10sIHNlZWQubGVuZ3RoLCBhcmd1bWVudCAp
LAoJCQkJaSA9IG1hdGNoSW5kZXhlcy5sZW5ndGg7CgoJCQkvLyBNYXRjaCBlbGVtZW50cyBmb3Vu
ZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXMKCQkJd2hpbGUgKCBpLS0gKSB7CgkJCQlpZiAoIHNl
ZWRbIChqID0gbWF0Y2hJbmRleGVzW2ldKSBdICkgewoJCQkJCXNlZWRbal0gPSAhKG1hdGNoZXNb
al0gPSBzZWVkW2pdKTsKCQkJCX0KCQkJfQoJCX0pOwoJfSk7Cn0KCi8qKgogKiBDaGVja3MgYSBu
b2RlIGZvciB2YWxpZGl0eSBhcyBhIFNpenpsZSBjb250ZXh0CiAqIEBwYXJhbSB7RWxlbWVudHxP
YmplY3Q9fSBjb250ZXh0CiAqIEByZXR1cm5zIHtFbGVtZW50fE9iamVjdHxCb29sZWFufSBUaGUg
aW5wdXQgbm9kZSBpZiBhY2NlcHRhYmxlLCBvdGhlcndpc2UgYSBmYWxzeSB2YWx1ZQogKi8KZnVu
Y3Rpb24gdGVzdENvbnRleHQoIGNvbnRleHQgKSB7CglyZXR1cm4gY29udGV4dCAmJiB0eXBlb2Yg
Y29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gInVuZGVmaW5lZCIgJiYgY29udGV4dDsK
fQoKLy8gRXhwb3NlIHN1cHBvcnQgdmFycyBmb3IgY29udmVuaWVuY2UKc3VwcG9ydCA9IFNpenps
ZS5zdXBwb3J0ID0ge307CgovKioKICogRGV0ZWN0cyBYTUwgbm9kZXMKICogQHBhcmFtIHtFbGVt
ZW50fE9iamVjdH0gZWxlbSBBbiBlbGVtZW50IG9yIGEgZG9jdW1lbnQKICogQHJldHVybnMge0Jv
b2xlYW59IFRydWUgaWZmIGVsZW0gaXMgYSBub24tSFRNTCBYTUwgbm9kZQogKi8KaXNYTUwgPSBT
aXp6bGUuaXNYTUwgPSBmdW5jdGlvbiggZWxlbSApIHsKCS8vIGRvY3VtZW50RWxlbWVudCBpcyB2
ZXJpZmllZCBmb3IgY2FzZXMgd2hlcmUgaXQgZG9lc24ndCB5ZXQgZXhpc3QKCS8vIChzdWNoIGFz
IGxvYWRpbmcgaWZyYW1lcyBpbiBJRSAtICM0ODMzKQoJdmFyIGRvY3VtZW50RWxlbWVudCA9IGVs
ZW0gJiYgKGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtKS5kb2N1bWVudEVsZW1lbnQ7CglyZXR1
cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSAiSFRNTCIg
OiBmYWxzZTsKfTsKCi8qKgogKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2Ug
YmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnQKICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0g
W2RvY10gQW4gZWxlbWVudCBvciBkb2N1bWVudCBvYmplY3QgdG8gdXNlIHRvIHNldCB0aGUgZG9j
dW1lbnQKICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY3VycmVudCBkb2N1bWVudAog
Ki8Kc2V0RG9jdW1lbnQgPSBTaXp6bGUuc2V0RG9jdW1lbnQgPSBmdW5jdGlvbiggbm9kZSApIHsK
CXZhciBoYXNDb21wYXJlLCBzdWJXaW5kb3csCgkJZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1
bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jOwoKCS8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMg
aW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkCglpZiAoIGRvYyA9PT0gZG9jdW1lbnQgfHwgZG9j
Lm5vZGVUeXBlICE9PSA5IHx8ICFkb2MuZG9jdW1lbnRFbGVtZW50ICkgewoJCXJldHVybiBkb2N1
bWVudDsKCX0KCgkvLyBVcGRhdGUgZ2xvYmFsIHZhcmlhYmxlcwoJZG9jdW1lbnQgPSBkb2M7Cglk
b2NFbGVtID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwoJZG9jdW1lbnRJc0hUTUwgPSAhaXNY
TUwoIGRvY3VtZW50ICk7CgoJLy8gU3VwcG9ydDogSUUgOS0xMSwgRWRnZQoJLy8gQWNjZXNzaW5n
IGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyAicGVybWlzc2lvbiBkZW5pZWQi
IGVycm9ycyAoalF1ZXJ5ICMxMzkzNikKCWlmICggcHJlZmVycmVkRG9jICE9PSBkb2N1bWVudCAm
JgoJCShzdWJXaW5kb3cgPSBkb2N1bWVudC5kZWZhdWx0VmlldykgJiYgc3ViV2luZG93LnRvcCAh
PT0gc3ViV2luZG93ICkgewoKCQkvLyBTdXBwb3J0OiBJRSAxMSwgRWRnZQoJCWlmICggc3ViV2lu
ZG93LmFkZEV2ZW50TGlzdGVuZXIgKSB7CgkJCXN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCAi
dW5sb2FkIiwgdW5sb2FkSGFuZGxlciwgZmFsc2UgKTsKCgkJLy8gU3VwcG9ydDogSUUgOSAtIDEw
IG9ubHkKCQl9IGVsc2UgaWYgKCBzdWJXaW5kb3cuYXR0YWNoRXZlbnQgKSB7CgkJCXN1YldpbmRv
dy5hdHRhY2hFdmVudCggIm9udW5sb2FkIiwgdW5sb2FkSGFuZGxlciApOwoJCX0KCX0KCgkvKiBB
dHRyaWJ1dGVzCgktLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCgoJLy8gU3VwcG9ydDogSUU8OAoJLy8gVmVyaWZ5
IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9w
ZXJ0aWVzCgkvLyAoZXhjZXB0aW5nIElFOCBib29sZWFucykKCXN1cHBvcnQuYXR0cmlidXRlcyA9
IGFzc2VydChmdW5jdGlvbiggZWwgKSB7CgkJZWwuY2xhc3NOYW1lID0gImkiOwoJCXJldHVybiAh
ZWwuZ2V0QXR0cmlidXRlKCJjbGFzc05hbWUiKTsKCX0pOwoKCS8qIGdldEVsZW1lbnQocylCeSoK
CS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0gKi8KCgkvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIp
IHJldHVybnMgb25seSBlbGVtZW50cwoJc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGFz
c2VydChmdW5jdGlvbiggZWwgKSB7CgkJZWwuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUNv
bW1lbnQoIiIpICk7CgkJcmV0dXJuICFlbC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpLmxlbmd0
aDsKCX0pOwoKCS8vIFN1cHBvcnQ6IElFPDkKCXN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFt
ZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApOwoKCS8v
IFN1cHBvcnQ6IElFPDEwCgkvLyBDaGVjayBpZiBnZXRFbGVtZW50QnlJZCByZXR1cm5zIGVsZW1l
bnRzIGJ5IG5hbWUKCS8vIFRoZSBicm9rZW4gZ2V0RWxlbWVudEJ5SWQgbWV0aG9kcyBkb24ndCBw
aWNrIHVwIHByb2dyYW1tYXRpY2FsbHktc2V0IG5hbWVzLAoJLy8gc28gdXNlIGEgcm91bmRhYm91
dCBnZXRFbGVtZW50c0J5TmFtZSB0ZXN0CglzdXBwb3J0LmdldEJ5SWQgPSBhc3NlcnQoZnVuY3Rp
b24oIGVsICkgewoJCWRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaWQgPSBleHBhbmRvOwoJCXJl
dHVybiAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUgfHwgIWRvY3VtZW50LmdldEVsZW1lbnRz
QnlOYW1lKCBleHBhbmRvICkubGVuZ3RoOwoJfSk7CgoJLy8gSUQgZmlsdGVyIGFuZCBmaW5kCglp
ZiAoIHN1cHBvcnQuZ2V0QnlJZCApIHsKCQlFeHByLmZpbHRlclsiSUQiXSA9IGZ1bmN0aW9uKCBp
ZCApIHsKCQkJdmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7
CgkJCXJldHVybiBmdW5jdGlvbiggZWxlbSApIHsKCQkJCXJldHVybiBlbGVtLmdldEF0dHJpYnV0
ZSgiaWQiKSA9PT0gYXR0cklkOwoJCQl9OwoJCX07CgkJRXhwci5maW5kWyJJRCJdID0gZnVuY3Rp
b24oIGlkLCBjb250ZXh0ICkgewoJCQlpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlk
ICE9PSAidW5kZWZpbmVkIiAmJiBkb2N1bWVudElzSFRNTCApIHsKCQkJCXZhciBlbGVtID0gY29u
dGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTsKCQkJCXJldHVybiBlbGVtID8gWyBlbGVtIF0gOiBb
XTsKCQkJfQoJCX07Cgl9IGVsc2UgewoJCUV4cHIuZmlsdGVyWyJJRCJdID0gIGZ1bmN0aW9uKCBp
ZCApIHsKCQkJdmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7
CgkJCXJldHVybiBmdW5jdGlvbiggZWxlbSApIHsKCQkJCXZhciBub2RlID0gdHlwZW9mIGVsZW0u
Z2V0QXR0cmlidXRlTm9kZSAhPT0gInVuZGVmaW5lZCIgJiYKCQkJCQllbGVtLmdldEF0dHJpYnV0
ZU5vZGUoImlkIik7CgkJCQlyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7CgkJ
CX07CgkJfTsKCgkJLy8gU3VwcG9ydDogSUUgNiAtIDcgb25seQoJCS8vIGdldEVsZW1lbnRCeUlk
IGlzIG5vdCByZWxpYWJsZSBhcyBhIGZpbmQgc2hvcnRjdXQKCQlFeHByLmZpbmRbIklEIl0gPSBm
dW5jdGlvbiggaWQsIGNvbnRleHQgKSB7CgkJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVu
dEJ5SWQgIT09ICJ1bmRlZmluZWQiICYmIGRvY3VtZW50SXNIVE1MICkgewoJCQkJdmFyIG5vZGUs
IGksIGVsZW1zLAoJCQkJCWVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApOwoKCQkJ
CWlmICggZWxlbSApIHsKCgkJCQkJLy8gVmVyaWZ5IHRoZSBpZCBhdHRyaWJ1dGUKCQkJCQlub2Rl
ID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCJpZCIpOwoJCQkJCWlmICggbm9kZSAmJiBub2RlLnZh
bHVlID09PSBpZCApIHsKCQkJCQkJcmV0dXJuIFsgZWxlbSBdOwoJCQkJCX0KCgkJCQkJLy8gRmFs
bCBiYWNrIG9uIGdldEVsZW1lbnRzQnlOYW1lCgkJCQkJZWxlbXMgPSBjb250ZXh0LmdldEVsZW1l
bnRzQnlOYW1lKCBpZCApOwoJCQkJCWkgPSAwOwoJCQkJCXdoaWxlICggKGVsZW0gPSBlbGVtc1tp
KytdKSApIHsKCQkJCQkJbm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSgiaWQiKTsKCQkJCQkJ
aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkgewoJCQkJCQkJcmV0dXJuIFsgZWxlbSBd
OwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoKCQkJCXJldHVybiBbXTsKCQkJfQoJCX07Cgl9CgoJLy8g
VGFnCglFeHByLmZpbmRbIlRBRyJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/CgkJ
ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHsKCQkJaWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVt
ZW50c0J5VGFnTmFtZSAhPT0gInVuZGVmaW5lZCIgKSB7CgkJCQlyZXR1cm4gY29udGV4dC5nZXRF
bGVtZW50c0J5VGFnTmFtZSggdGFnICk7CgoJCQkvLyBEb2N1bWVudEZyYWdtZW50IG5vZGVzIGRv
bid0IGhhdmUgZ0VCVE4KCQkJfSBlbHNlIGlmICggc3VwcG9ydC5xc2EgKSB7CgkJCQlyZXR1cm4g
Y29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgKTsKCQkJfQoJCX0gOgoKCQlmdW5jdGlvbigg
dGFnLCBjb250ZXh0ICkgewoJCQl2YXIgZWxlbSwKCQkJCXRtcCA9IFtdLAoJCQkJaSA9IDAsCgkJ
CQkvLyBCeSBoYXBweSBjb2luY2lkZW5jZSwgYSAoYnJva2VuKSBnRUJUTiBhcHBlYXJzIG9uIERv
Y3VtZW50RnJhZ21lbnQgbm9kZXMgdG9vCgkJCQlyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50
c0J5VGFnTmFtZSggdGFnICk7CgoJCQkvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzCgkJ
CWlmICggdGFnID09PSAiKiIgKSB7CgkJCQl3aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSAp
IHsKCQkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7CgkJCQkJCXRtcC5wdXNoKCBlbGVt
ICk7CgkJCQkJfQoJCQkJfQoKCQkJCXJldHVybiB0bXA7CgkJCX0KCQkJcmV0dXJuIHJlc3VsdHM7
CgkJfTsKCgkvLyBDbGFzcwoJRXhwci5maW5kWyJDTEFTUyJdID0gc3VwcG9ydC5nZXRFbGVtZW50
c0J5Q2xhc3NOYW1lICYmIGZ1bmN0aW9uKCBjbGFzc05hbWUsIGNvbnRleHQgKSB7CgkJaWYgKCB0
eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICE9PSAidW5kZWZpbmVkIiAmJiBk
b2N1bWVudElzSFRNTCApIHsKCQkJcmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFt
ZSggY2xhc3NOYW1lICk7CgkJfQoJfTsKCgkvKiBRU0EvbWF0Y2hlc1NlbGVjdG9yCgktLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tICovCgoJLy8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydAoKCS8vIG1hdGNo
ZXNTZWxlY3Rvcig6YWN0aXZlKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoSUU5L09wZXJhIDEx
LjUpCglyYnVnZ3lNYXRjaGVzID0gW107CgoJLy8gcVNhKDpmb2N1cykgcmVwb3J0cyBmYWxzZSB3
aGVuIHRydWUgKENocm9tZSAyMSkKCS8vIFdlIGFsbG93IHRoaXMgYmVjYXVzZSBvZiBhIGJ1ZyBp
biBJRTgvOSB0aGF0IHRocm93cyBhbiBlcnJvcgoJLy8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2
ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZQoJLy8gU28sIHdlIGFsbG93IDpmb2N1
cyB0byBwYXNzIHRocm91Z2ggUVNBIGFsbCB0aGUgdGltZSB0byBhdm9pZCB0aGUgSUUgZXJyb3IK
CS8vIFNlZSBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzgKCXJidWdneVFTQSA9
IFtdOwoKCWlmICggKHN1cHBvcnQucXNhID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5xdWVyeVNl
bGVjdG9yQWxsICkpICkgewoJCS8vIEJ1aWxkIFFTQSByZWdleAoJCS8vIFJlZ2V4IHN0cmF0ZWd5
IGFkb3B0ZWQgZnJvbSBEaWVnbyBQZXJpbmkKCQlhc3NlcnQoZnVuY3Rpb24oIGVsICkgewoJCQkv
LyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlCgkJCS8vIFRoaXMgaXMg
dG8gdGVzdCBJRSdzIHRyZWF0bWVudCBvZiBub3QgZXhwbGljaXRseQoJCQkvLyBzZXR0aW5nIGEg
Ym9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSwKCQkJLy8gc2luY2UgaXRzIHByZXNlbmNlIHNob3Vs
ZCBiZSBlbm91Z2gKCQkJLy8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEyMzU5CgkJ
CWRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaW5uZXJIVE1MID0gIjxhIGlkPSciICsgZXhwYW5k
byArICInPjwvYT4iICsKCQkJCSI8c2VsZWN0IGlkPSciICsgZXhwYW5kbyArICItXHJcXCcgbXNh
bGxvd2NhcHR1cmU9Jyc+IiArCgkJCQkiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3Nl
bGVjdD4iOwoKCQkJLy8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNgoJCQkvLyBOb3RoaW5n
IHNob3VsZCBiZSBzZWxlY3RlZCB3aGVuIGVtcHR5IHN0cmluZ3MgZm9sbG93IF49IG9yICQ9IG9y
ICo9CgkJCS8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0
ICJzYWZlIiBmb3IgV2luUlQKCQkJLy8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMv
bGlicmFyeS9pZS9oaDQ2NTM4OC5hc3B4I2F0dHJpYnV0ZV9zZWN0aW9uCgkJCWlmICggZWwucXVl
cnlTZWxlY3RvckFsbCgiW21zYWxsb3djYXB0dXJlXj0nJ10iKS5sZW5ndGggKSB7CgkJCQlyYnVn
Z3lRU0EucHVzaCggIlsqXiRdPSIgKyB3aGl0ZXNwYWNlICsgIiooPzonJ3xcIlwiKSIgKTsKCQkJ
fQoKCQkJLy8gU3VwcG9ydDogSUU4CgkJCS8vIEJvb2xlYW4gYXR0cmlidXRlcyBhbmQgInZhbHVl
IiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5CgkJCWlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwo
IltzZWxlY3RlZF0iKS5sZW5ndGggKSB7CgkJCQlyYnVnZ3lRU0EucHVzaCggIlxcWyIgKyB3aGl0
ZXNwYWNlICsgIiooPzp2YWx1ZXwiICsgYm9vbGVhbnMgKyAiKSIgKTsKCQkJfQoKCQkJLy8gU3Vw
cG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFu
dG9tSlM8MS45LjgrCgkJCWlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoICJbaWR+PSIgKyBleHBh
bmRvICsgIi1dIiApLmxlbmd0aCApIHsKCQkJCXJidWdneVFTQS5wdXNoKCJ+PSIpOwoJCQl9CgoJ
CQkvLyBXZWJraXQvT3BlcmEgLSA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIHNlbGVjdGVkIG9wdGlv
biBlbGVtZW50cwoJCQkvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVj
dG9ycy0yMDExMDkyOS8jY2hlY2tlZAoJCQkvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdp
bGwgbm90IHNlZSBsYXRlciB0ZXN0cwoJCQlpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCI6Y2hl
Y2tlZCIpLmxlbmd0aCApIHsKCQkJCXJidWdneVFTQS5wdXNoKCI6Y2hlY2tlZCIpOwoJCQl9CgoJ
CQkvLyBTdXBwb3J0OiBTYWZhcmkgOCssIGlPUyA4KwoJCQkvLyBodHRwczovL2J1Z3Mud2Via2l0
Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM2ODUxCgkJCS8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNp
YmxpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHMKCQkJaWYgKCAhZWwucXVlcnlTZWxlY3Rv
ckFsbCggImEjIiArIGV4cGFuZG8gKyAiKyoiICkubGVuZ3RoICkgewoJCQkJcmJ1Z2d5UVNBLnB1
c2goIi4jLitbK35dIik7CgkJCX0KCQl9KTsKCgkJYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHsKCQkJ
ZWwuaW5uZXJIVE1MID0gIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+IiArCgkJ
CQkiPHNlbGVjdCBkaXNhYmxlZD0nZGlzYWJsZWQnPjxvcHRpb24vPjwvc2VsZWN0PiI7CgoJCQkv
LyBTdXBwb3J0OiBXaW5kb3dzIDggTmF0aXZlIEFwcHMKCQkJLy8gVGhlIHR5cGUgYW5kIG5hbWUg
YXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50CgkJ
CXZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7CgkJCWlucHV0LnNl
dEF0dHJpYnV0ZSggInR5cGUiLCAiaGlkZGVuIiApOwoJCQllbC5hcHBlbmRDaGlsZCggaW5wdXQg
KS5zZXRBdHRyaWJ1dGUoICJuYW1lIiwgIkQiICk7CgoJCQkvLyBTdXBwb3J0OiBJRTgKCQkJLy8g
RW5mb3JjZSBjYXNlLXNlbnNpdGl2aXR5IG9mIG5hbWUgYXR0cmlidXRlCgkJCWlmICggZWwucXVl
cnlTZWxlY3RvckFsbCgiW25hbWU9ZF0iKS5sZW5ndGggKSB7CgkJCQlyYnVnZ3lRU0EucHVzaCgg
Im5hbWUiICsgd2hpdGVzcGFjZSArICIqWypeJHwhfl0/PSIgKTsKCQkJfQoKCQkJLy8gRkYgMy41
IC0gOmVuYWJsZWQvOmRpc2FibGVkIGFuZCBoaWRkZW4gZWxlbWVudHMgKGhpZGRlbiBlbGVtZW50
cyBhcmUgc3RpbGwgZW5hYmxlZCkKCQkJLy8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxs
IG5vdCBzZWUgbGF0ZXIgdGVzdHMKCQkJaWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCI6ZW5hYmxl
ZCIpLmxlbmd0aCAhPT0gMiApIHsKCQkJCXJidWdneVFTQS5wdXNoKCAiOmVuYWJsZWQiLCAiOmRp
c2FibGVkIiApOwoJCQl9CgoJCQkvLyBTdXBwb3J0OiBJRTktMTErCgkJCS8vIElFJ3MgOmRpc2Fi
bGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZp
ZWxkc2V0cwoJCQlkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmRpc2FibGVkID0gdHJ1ZTsKCQkJ
aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCI6ZGlzYWJsZWQiKS5sZW5ndGggIT09IDIgKSB7CgkJ
CQlyYnVnZ3lRU0EucHVzaCggIjplbmFibGVkIiwgIjpkaXNhYmxlZCIgKTsKCQkJfQoKCQkJLy8g
T3BlcmEgMTAtMTEgZG9lcyBub3QgdGhyb3cgb24gcG9zdC1jb21tYSBpbnZhbGlkIHBzZXVkb3MK
CQkJZWwucXVlcnlTZWxlY3RvckFsbCgiKiw6eCIpOwoJCQlyYnVnZ3lRU0EucHVzaCgiLC4qOiIp
OwoJCX0pOwoJfQoKCWlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0
KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fAoJCWRvY0VsZW0ud2Via2l0TWF0Y2hlc1Nl
bGVjdG9yIHx8CgkJZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHwKCQlkb2NFbGVtLm9NYXRj
aGVzU2VsZWN0b3IgfHwKCQlkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHsKCgkJYXNz
ZXJ0KGZ1bmN0aW9uKCBlbCApIHsKCQkJLy8gQ2hlY2sgdG8gc2VlIGlmIGl0J3MgcG9zc2libGUg
dG8gZG8gbWF0Y2hlc1NlbGVjdG9yCgkJCS8vIG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgKElFIDkp
CgkJCXN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2ggPSBtYXRjaGVzLmNhbGwoIGVsLCAiKiIgKTsK
CgkJCS8vIFRoaXMgc2hvdWxkIGZhaWwgd2l0aCBhbiBleGNlcHRpb24KCQkJLy8gR2Vja28gZG9l
cyBub3QgZXJyb3IsIHJldHVybnMgZmFsc2UgaW5zdGVhZAoJCQltYXRjaGVzLmNhbGwoIGVsLCAi
W3MhPScnXTp4IiApOwoJCQlyYnVnZ3lNYXRjaGVzLnB1c2goICIhPSIsIHBzZXVkb3MgKTsKCQl9
KTsKCX0KCglyYnVnZ3lRU0EgPSByYnVnZ3lRU0EubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdn
eVFTQS5qb2luKCJ8IikgKTsKCXJidWdneU1hdGNoZXMgPSByYnVnZ3lNYXRjaGVzLmxlbmd0aCAm
JiBuZXcgUmVnRXhwKCByYnVnZ3lNYXRjaGVzLmpvaW4oInwiKSApOwoKCS8qIENvbnRhaW5zCgkt
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tICovCgloYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBh
cmVEb2N1bWVudFBvc2l0aW9uICk7CgoJLy8gRWxlbWVudCBjb250YWlucyBhbm90aGVyCgkvLyBQ
dXJwb3NlZnVsbHkgc2VsZi1leGNsdXNpdmUKCS8vIEFzIGluLCBhbiBlbGVtZW50IGRvZXMgbm90
IGNvbnRhaW4gaXRzZWxmCgljb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBk
b2NFbGVtLmNvbnRhaW5zICkgPwoJCWZ1bmN0aW9uKCBhLCBiICkgewoJCQl2YXIgYWRvd24gPSBh
Lm5vZGVUeXBlID09PSA5ID8gYS5kb2N1bWVudEVsZW1lbnQgOiBhLAoJCQkJYnVwID0gYiAmJiBi
LnBhcmVudE5vZGU7CgkJCXJldHVybiBhID09PSBidXAgfHwgISEoIGJ1cCAmJiBidXAubm9kZVR5
cGUgPT09IDEgJiYgKAoJCQkJYWRvd24uY29udGFpbnMgPwoJCQkJCWFkb3duLmNvbnRhaW5zKCBi
dXAgKSA6CgkJCQkJYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVu
dFBvc2l0aW9uKCBidXAgKSAmIDE2CgkJCSkpOwoJCX0gOgoJCWZ1bmN0aW9uKCBhLCBiICkgewoJ
CQlpZiAoIGIgKSB7CgkJCQl3aGlsZSAoIChiID0gYi5wYXJlbnROb2RlKSApIHsKCQkJCQlpZiAo
IGIgPT09IGEgKSB7CgkJCQkJCXJldHVybiB0cnVlOwoJCQkJCX0KCQkJCX0KCQkJfQoJCQlyZXR1
cm4gZmFsc2U7CgkJfTsKCgkvKiBTb3J0aW5nCgktLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCgoJLy8gRG9jdW1l
bnQgb3JkZXIgc29ydGluZwoJc29ydE9yZGVyID0gaGFzQ29tcGFyZSA/CglmdW5jdGlvbiggYSwg
YiApIHsKCgkJLy8gRmxhZyBmb3IgZHVwbGljYXRlIHJlbW92YWwKCQlpZiAoIGEgPT09IGIgKSB7
CgkJCWhhc0R1cGxpY2F0ZSA9IHRydWU7CgkJCXJldHVybiAwOwoJCX0KCgkJLy8gU29ydCBvbiBt
ZXRob2QgZXhpc3RlbmNlIGlmIG9ubHkgb25lIGlucHV0IGhhcyBjb21wYXJlRG9jdW1lbnRQb3Np
dGlvbgoJCXZhciBjb21wYXJlID0gIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gLSAhYi5jb21w
YXJlRG9jdW1lbnRQb3NpdGlvbjsKCQlpZiAoIGNvbXBhcmUgKSB7CgkJCXJldHVybiBjb21wYXJl
OwoJCX0KCgkJLy8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0
aGUgc2FtZSBkb2N1bWVudAoJCWNvbXBhcmUgPSAoIGEub3duZXJEb2N1bWVudCB8fCBhICkgPT09
ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/CgkJCWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24o
IGIgKSA6CgoJCQkvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWQKCQkJ
MTsKCgkJLy8gRGlzY29ubmVjdGVkIG5vZGVzCgkJaWYgKCBjb21wYXJlICYgMSB8fAoJCQkoIXN1
cHBvcnQuc29ydERldGFjaGVkICYmIGIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGEgKSA9PT0g
Y29tcGFyZSkgKSB7CgoJCQkvLyBDaG9vc2UgdGhlIGZpcnN0IGVsZW1lbnQgdGhhdCBpcyByZWxh
dGVkIHRvIG91ciBwcmVmZXJyZWQgZG9jdW1lbnQKCQkJaWYgKCBhID09PSBkb2N1bWVudCB8fCBh
Lm93bmVyRG9jdW1lbnQgPT09IHByZWZlcnJlZERvYyAmJiBjb250YWlucyhwcmVmZXJyZWREb2Ms
IGEpICkgewoJCQkJcmV0dXJuIC0xOwoJCQl9CgkJCWlmICggYiA9PT0gZG9jdW1lbnQgfHwgYi5v
d25lckRvY3VtZW50ID09PSBwcmVmZXJyZWREb2MgJiYgY29udGFpbnMocHJlZmVycmVkRG9jLCBi
KSApIHsKCQkJCXJldHVybiAxOwoJCQl9CgoJCQkvLyBNYWludGFpbiBvcmlnaW5hbCBvcmRlcgoJ
CQlyZXR1cm4gc29ydElucHV0ID8KCQkJCSggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRl
eE9mKCBzb3J0SW5wdXQsIGIgKSApIDoKCQkJCTA7CgkJfQoKCQlyZXR1cm4gY29tcGFyZSAmIDQg
PyAtMSA6IDE7Cgl9IDoKCWZ1bmN0aW9uKCBhLCBiICkgewoJCS8vIEV4aXQgZWFybHkgaWYgdGhl
IG5vZGVzIGFyZSBpZGVudGljYWwKCQlpZiAoIGEgPT09IGIgKSB7CgkJCWhhc0R1cGxpY2F0ZSA9
IHRydWU7CgkJCXJldHVybiAwOwoJCX0KCgkJdmFyIGN1ciwKCQkJaSA9IDAsCgkJCWF1cCA9IGEu
cGFyZW50Tm9kZSwKCQkJYnVwID0gYi5wYXJlbnROb2RlLAoJCQlhcCA9IFsgYSBdLAoJCQlicCA9
IFsgYiBdOwoKCQkvLyBQYXJlbnRsZXNzIG5vZGVzIGFyZSBlaXRoZXIgZG9jdW1lbnRzIG9yIGRp
c2Nvbm5lY3RlZAoJCWlmICggIWF1cCB8fCAhYnVwICkgewoJCQlyZXR1cm4gYSA9PT0gZG9jdW1l
bnQgPyAtMSA6CgkJCQliID09PSBkb2N1bWVudCA/IDEgOgoJCQkJYXVwID8gLTEgOgoJCQkJYnVw
ID8gMSA6CgkJCQlzb3J0SW5wdXQgPwoJCQkJKCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGlu
ZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOgoJCQkJMDsKCgkJLy8gSWYgdGhlIG5vZGVzIGFyZSBz
aWJsaW5ncywgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2sKCQl9IGVsc2UgaWYgKCBhdXAgPT09IGJ1
cCApIHsKCQkJcmV0dXJuIHNpYmxpbmdDaGVjayggYSwgYiApOwoJCX0KCgkJLy8gT3RoZXJ3aXNl
IHdlIG5lZWQgZnVsbCBsaXN0cyBvZiB0aGVpciBhbmNlc3RvcnMgZm9yIGNvbXBhcmlzb24KCQlj
dXIgPSBhOwoJCXdoaWxlICggKGN1ciA9IGN1ci5wYXJlbnROb2RlKSApIHsKCQkJYXAudW5zaGlm
dCggY3VyICk7CgkJfQoJCWN1ciA9IGI7CgkJd2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUp
ICkgewoJCQlicC51bnNoaWZ0KCBjdXIgKTsKCQl9CgoJCS8vIFdhbGsgZG93biB0aGUgdHJlZSBs
b29raW5nIGZvciBhIGRpc2NyZXBhbmN5CgkJd2hpbGUgKCBhcFtpXSA9PT0gYnBbaV0gKSB7CgkJ
CWkrKzsKCQl9CgoJCXJldHVybiBpID8KCQkJLy8gRG8gYSBzaWJsaW5nIGNoZWNrIGlmIHRoZSBu
b2RlcyBoYXZlIGEgY29tbW9uIGFuY2VzdG9yCgkJCXNpYmxpbmdDaGVjayggYXBbaV0sIGJwW2ld
ICkgOgoKCQkJLy8gT3RoZXJ3aXNlIG5vZGVzIGluIG91ciBkb2N1bWVudCBzb3J0IGZpcnN0CgkJ
CWFwW2ldID09PSBwcmVmZXJyZWREb2MgPyAtMSA6CgkJCWJwW2ldID09PSBwcmVmZXJyZWREb2Mg
PyAxIDoKCQkJMDsKCX07CgoJcmV0dXJuIGRvY3VtZW50Owp9OwoKU2l6emxlLm1hdGNoZXMgPSBm
dW5jdGlvbiggZXhwciwgZWxlbWVudHMgKSB7CglyZXR1cm4gU2l6emxlKCBleHByLCBudWxsLCBu
dWxsLCBlbGVtZW50cyApOwp9OwoKU2l6emxlLm1hdGNoZXNTZWxlY3RvciA9IGZ1bmN0aW9uKCBl
bGVtLCBleHByICkgewoJLy8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkCglpZiAoICggZWxl
bS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPT0gZG9jdW1lbnQgKSB7CgkJc2V0RG9jdW1lbnQo
IGVsZW0gKTsKCX0KCgkvLyBNYWtlIHN1cmUgdGhhdCBhdHRyaWJ1dGUgc2VsZWN0b3JzIGFyZSBx
dW90ZWQKCWV4cHIgPSBleHByLnJlcGxhY2UoIHJhdHRyaWJ1dGVRdW90ZXMsICI9JyQxJ10iICk7
CgoJaWYgKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciAmJiBkb2N1bWVudElzSFRNTCAmJgoJCSFj
b21waWxlckNhY2hlWyBleHByICsgIiAiIF0gJiYKCQkoICFyYnVnZ3lNYXRjaGVzIHx8ICFyYnVn
Z3lNYXRjaGVzLnRlc3QoIGV4cHIgKSApICYmCgkJKCAhcmJ1Z2d5UVNBICAgICB8fCAhcmJ1Z2d5
UVNBLnRlc3QoIGV4cHIgKSApICkgewoKCQl0cnkgewoJCQl2YXIgcmV0ID0gbWF0Y2hlcy5jYWxs
KCBlbGVtLCBleHByICk7CgoJCQkvLyBJRSA5J3MgbWF0Y2hlc1NlbGVjdG9yIHJldHVybnMgZmFs
c2Ugb24gZGlzY29ubmVjdGVkIG5vZGVzCgkJCWlmICggcmV0IHx8IHN1cHBvcnQuZGlzY29ubmVj
dGVkTWF0Y2ggfHwKCQkJCQkvLyBBcyB3ZWxsLCBkaXNjb25uZWN0ZWQgbm9kZXMgYXJlIHNhaWQg
dG8gYmUgaW4gYSBkb2N1bWVudAoJCQkJCS8vIGZyYWdtZW50IGluIElFIDkKCQkJCQllbGVtLmRv
Y3VtZW50ICYmIGVsZW0uZG9jdW1lbnQubm9kZVR5cGUgIT09IDExICkgewoJCQkJcmV0dXJuIHJl
dDsKCQkJfQoJCX0gY2F0Y2ggKGUpIHt9Cgl9CgoJcmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1l
bnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDsKfTsKClNpenpsZS5jb250YWlucyA9IGZ1
bmN0aW9uKCBjb250ZXh0LCBlbGVtICkgewoJLy8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVk
CglpZiAoICggY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgKSAhPT0gZG9jdW1lbnQg
KSB7CgkJc2V0RG9jdW1lbnQoIGNvbnRleHQgKTsKCX0KCXJldHVybiBjb250YWlucyggY29udGV4
dCwgZWxlbSApOwp9OwoKU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHsKCS8v
IFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZAoJaWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8
fCBlbGVtICkgIT09IGRvY3VtZW50ICkgewoJCXNldERvY3VtZW50KCBlbGVtICk7Cgl9CgoJdmFy
IGZuID0gRXhwci5hdHRySGFuZGxlWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSwKCQkvLyBEb24ndCBn
ZXQgZm9vbGVkIGJ5IE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoalF1ZXJ5ICMxMzgwNykK
CQl2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJD
YXNlKCkgKSA/CgkJCWZuKCBlbGVtLCBuYW1lLCAhZG9jdW1lbnRJc0hUTUwgKSA6CgkJCXVuZGVm
aW5lZDsKCglyZXR1cm4gdmFsICE9PSB1bmRlZmluZWQgPwoJCXZhbCA6CgkJc3VwcG9ydC5hdHRy
aWJ1dGVzIHx8ICFkb2N1bWVudElzSFRNTCA/CgkJCWVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkg
OgoJCQkodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpKSAmJiB2YWwuc3BlY2lmaWVk
ID8KCQkJCXZhbC52YWx1ZSA6CgkJCQludWxsOwp9OwoKU2l6emxlLmVzY2FwZSA9IGZ1bmN0aW9u
KCBzZWwgKSB7CglyZXR1cm4gKHNlbCArICIiKS5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNj
YXBlICk7Cn07CgpTaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkgewoJdGhyb3cgbmV3IEVy
cm9yKCAiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogIiArIG1zZyApOwp9
OwoKLyoqCiAqIERvY3VtZW50IHNvcnRpbmcgYW5kIHJlbW92aW5nIGR1cGxpY2F0ZXMKICogQHBh
cmFtIHtBcnJheUxpa2V9IHJlc3VsdHMKICovClNpenpsZS51bmlxdWVTb3J0ID0gZnVuY3Rpb24o
IHJlc3VsdHMgKSB7Cgl2YXIgZWxlbSwKCQlkdXBsaWNhdGVzID0gW10sCgkJaiA9IDAsCgkJaSA9
IDA7CgoJLy8gVW5sZXNzIHdlICprbm93KiB3ZSBjYW4gZGV0ZWN0IGR1cGxpY2F0ZXMsIGFzc3Vt
ZSB0aGVpciBwcmVzZW5jZQoJaGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRl
czsKCXNvcnRJbnB1dCA9ICFzdXBwb3J0LnNvcnRTdGFibGUgJiYgcmVzdWx0cy5zbGljZSggMCAp
OwoJcmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTsKCglpZiAoIGhhc0R1cGxpY2F0ZSApIHsKCQl3
aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSApIHsKCQkJaWYgKCBlbGVtID09PSByZXN1bHRz
WyBpIF0gKSB7CgkJCQlqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7CgkJCX0KCQl9CgkJd2hpbGUg
KCBqLS0gKSB7CgkJCXJlc3VsdHMuc3BsaWNlKCBkdXBsaWNhdGVzWyBqIF0sIDEgKTsKCQl9Cgl9
CgoJLy8gQ2xlYXIgaW5wdXQgYWZ0ZXIgc29ydGluZyB0byByZWxlYXNlIG9iamVjdHMKCS8vIFNl
ZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNQoJc29ydElucHV0ID0g
bnVsbDsKCglyZXR1cm4gcmVzdWx0czsKfTsKCi8qKgogKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciBy
ZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2RlcwogKiBAcGFy
YW0ge0FycmF5fEVsZW1lbnR9IGVsZW0KICovCmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1
bmN0aW9uKCBlbGVtICkgewoJdmFyIG5vZGUsCgkJcmV0ID0gIiIsCgkJaSA9IDAsCgkJbm9kZVR5
cGUgPSBlbGVtLm5vZGVUeXBlOwoKCWlmICggIW5vZGVUeXBlICkgewoJCS8vIElmIG5vIG5vZGVU
eXBlLCB0aGlzIGlzIGV4cGVjdGVkIHRvIGJlIGFuIGFycmF5CgkJd2hpbGUgKCAobm9kZSA9IGVs
ZW1baSsrXSkgKSB7CgkJCS8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzCgkJCXJldCAr
PSBnZXRUZXh0KCBub2RlICk7CgkJfQoJfSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9k
ZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkgewoJCS8vIFVzZSB0ZXh0Q29udGVudCBm
b3IgZWxlbWVudHMKCQkvLyBpbm5lclRleHQgdXNhZ2UgcmVtb3ZlZCBmb3IgY29uc2lzdGVuY3kg
b2YgbmV3IGxpbmVzIChqUXVlcnkgIzExMTUzKQoJCWlmICggdHlwZW9mIGVsZW0udGV4dENvbnRl
bnQgPT09ICJzdHJpbmciICkgewoJCQlyZXR1cm4gZWxlbS50ZXh0Q29udGVudDsKCQl9IGVsc2Ug
ewoJCQkvLyBUcmF2ZXJzZSBpdHMgY2hpbGRyZW4KCQkJZm9yICggZWxlbSA9IGVsZW0uZmlyc3RD
aGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7CgkJCQlyZXQgKz0gZ2V0VGV4
dCggZWxlbSApOwoJCQl9CgkJfQoJfSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5
cGUgPT09IDQgKSB7CgkJcmV0dXJuIGVsZW0ubm9kZVZhbHVlOwoJfQoJLy8gRG8gbm90IGluY2x1
ZGUgY29tbWVudCBvciBwcm9jZXNzaW5nIGluc3RydWN0aW9uIG5vZGVzCgoJcmV0dXJuIHJldDsK
fTsKCkV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzID0gewoKCS8vIENhbiBiZSBhZGp1c3RlZCBieSB0
aGUgdXNlcgoJY2FjaGVMZW5ndGg6IDUwLAoKCWNyZWF0ZVBzZXVkbzogbWFya0Z1bmN0aW9uLAoK
CW1hdGNoOiBtYXRjaEV4cHIsCgoJYXR0ckhhbmRsZToge30sCgoJZmluZDoge30sCgoJcmVsYXRp
dmU6IHsKCQkiPiI6IHsgZGlyOiAicGFyZW50Tm9kZSIsIGZpcnN0OiB0cnVlIH0sCgkJIiAiOiB7
IGRpcjogInBhcmVudE5vZGUiIH0sCgkJIisiOiB7IGRpcjogInByZXZpb3VzU2libGluZyIsIGZp
cnN0OiB0cnVlIH0sCgkJIn4iOiB7IGRpcjogInByZXZpb3VzU2libGluZyIgfQoJfSwKCglwcmVG
aWx0ZXI6IHsKCQkiQVRUUiI6IGZ1bmN0aW9uKCBtYXRjaCApIHsKCQkJbWF0Y2hbMV0gPSBtYXRj
aFsxXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApOwoKCQkJLy8gTW92ZSB0aGUgZ2l2
ZW4gdmFsdWUgdG8gbWF0Y2hbM10gd2hldGhlciBxdW90ZWQgb3IgdW5xdW90ZWQKCQkJbWF0Y2hb
M10gPSAoIG1hdGNoWzNdIHx8IG1hdGNoWzRdIHx8IG1hdGNoWzVdIHx8ICIiICkucmVwbGFjZSgg
cnVuZXNjYXBlLCBmdW5lc2NhcGUgKTsKCgkJCWlmICggbWF0Y2hbMl0gPT09ICJ+PSIgKSB7CgkJ
CQltYXRjaFszXSA9ICIgIiArIG1hdGNoWzNdICsgIiAiOwoJCQl9CgoJCQlyZXR1cm4gbWF0Y2gu
c2xpY2UoIDAsIDQgKTsKCQl9LAoKCQkiQ0hJTEQiOiBmdW5jdGlvbiggbWF0Y2ggKSB7CgkJCS8q
IG1hdGNoZXMgZnJvbSBtYXRjaEV4cHJbIkNISUxEIl0KCQkJCTEgdHlwZSAob25seXxudGh8Li4u
KQoJCQkJMiB3aGF0IChjaGlsZHxvZi10eXBlKQoJCQkJMyBhcmd1bWVudCAoZXZlbnxvZGR8XGQq
fFxkKm4oWystXVxkKyk/fC4uLikKCQkJCTQgeG4tY29tcG9uZW50IG9mIHhuK3kgYXJndW1lbnQg
KFsrLV0/XGQqbnwpCgkJCQk1IHNpZ24gb2YgeG4tY29tcG9uZW50CgkJCQk2IHggb2YgeG4tY29t
cG9uZW50CgkJCQk3IHNpZ24gb2YgeS1jb21wb25lbnQKCQkJCTggeSBvZiB5LWNvbXBvbmVudAoJ
CQkqLwoJCQltYXRjaFsxXSA9IG1hdGNoWzFdLnRvTG93ZXJDYXNlKCk7CgoJCQlpZiAoIG1hdGNo
WzFdLnNsaWNlKCAwLCAzICkgPT09ICJudGgiICkgewoJCQkJLy8gbnRoLSogcmVxdWlyZXMgYXJn
dW1lbnQKCQkJCWlmICggIW1hdGNoWzNdICkgewoJCQkJCVNpenpsZS5lcnJvciggbWF0Y2hbMF0g
KTsKCQkJCX0KCgkJCQkvLyBudW1lcmljIHggYW5kIHkgcGFyYW1ldGVycyBmb3IgRXhwci5maWx0
ZXIuQ0hJTEQKCQkJCS8vIHJlbWVtYmVyIHRoYXQgZmFsc2UvdHJ1ZSBjYXN0IHJlc3BlY3RpdmVs
eSB0byAwLzEKCQkJCW1hdGNoWzRdID0gKyggbWF0Y2hbNF0gPyBtYXRjaFs1XSArIChtYXRjaFs2
XSB8fCAxKSA6IDIgKiAoIG1hdGNoWzNdID09PSAiZXZlbiIgfHwgbWF0Y2hbM10gPT09ICJvZGQi
ICkgKTsKCQkJCW1hdGNoWzVdID0gKyggKCBtYXRjaFs3XSArIG1hdGNoWzhdICkgfHwgbWF0Y2hb
M10gPT09ICJvZGQiICk7CgoJCQkvLyBvdGhlciB0eXBlcyBwcm9oaWJpdCBhcmd1bWVudHMKCQkJ
fSBlbHNlIGlmICggbWF0Y2hbM10gKSB7CgkJCQlTaXp6bGUuZXJyb3IoIG1hdGNoWzBdICk7CgkJ
CX0KCgkJCXJldHVybiBtYXRjaDsKCQl9LAoKCQkiUFNFVURPIjogZnVuY3Rpb24oIG1hdGNoICkg
ewoJCQl2YXIgZXhjZXNzLAoJCQkJdW5xdW90ZWQgPSAhbWF0Y2hbNl0gJiYgbWF0Y2hbMl07CgoJ
CQlpZiAoIG1hdGNoRXhwclsiQ0hJTEQiXS50ZXN0KCBtYXRjaFswXSApICkgewoJCQkJcmV0dXJu
IG51bGw7CgkJCX0KCgkJCS8vIEFjY2VwdCBxdW90ZWQgYXJndW1lbnRzIGFzLWlzCgkJCWlmICgg
bWF0Y2hbM10gKSB7CgkJCQltYXRjaFsyXSA9IG1hdGNoWzRdIHx8IG1hdGNoWzVdIHx8ICIiOwoK
CQkJLy8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHMKCQkJ
fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmCgkJCQkv
LyBHZXQgZXhjZXNzIGZyb20gdG9rZW5pemUgKHJlY3Vyc2l2ZWx5KQoJCQkJKGV4Y2VzcyA9IHRv
a2VuaXplKCB1bnF1b3RlZCwgdHJ1ZSApKSAmJgoJCQkJLy8gYWR2YW5jZSB0byB0aGUgbmV4dCBj
bG9zaW5nIHBhcmVudGhlc2lzCgkJCQkoZXhjZXNzID0gdW5xdW90ZWQuaW5kZXhPZiggIikiLCB1
bnF1b3RlZC5sZW5ndGggLSBleGNlc3MgKSAtIHVucXVvdGVkLmxlbmd0aCkgKSB7CgoJCQkJLy8g
ZXhjZXNzIGlzIGEgbmVnYXRpdmUgaW5kZXgKCQkJCW1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2Uo
IDAsIGV4Y2VzcyApOwoJCQkJbWF0Y2hbMl0gPSB1bnF1b3RlZC5zbGljZSggMCwgZXhjZXNzICk7
CgkJCX0KCgkJCS8vIFJldHVybiBvbmx5IGNhcHR1cmVzIG5lZWRlZCBieSB0aGUgcHNldWRvIGZp
bHRlciBtZXRob2QgKHR5cGUgYW5kIGFyZ3VtZW50KQoJCQlyZXR1cm4gbWF0Y2guc2xpY2UoIDAs
IDMgKTsKCQl9Cgl9LAoKCWZpbHRlcjogewoKCQkiVEFHIjogZnVuY3Rpb24oIG5vZGVOYW1lU2Vs
ZWN0b3IgKSB7CgkJCXZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVu
ZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpOwoJCQlyZXR1cm4gbm9kZU5hbWVTZWxl
Y3RvciA9PT0gIioiID8KCQkJCWZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSA6CgkJCQlmdW5j
dGlvbiggZWxlbSApIHsKCQkJCQlyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1l
LnRvTG93ZXJDYXNlKCkgPT09IG5vZGVOYW1lOwoJCQkJfTsKCQl9LAoKCQkiQ0xBU1MiOiBmdW5j
dGlvbiggY2xhc3NOYW1lICkgewoJCQl2YXIgcGF0dGVybiA9IGNsYXNzQ2FjaGVbIGNsYXNzTmFt
ZSArICIgIiBdOwoKCQkJcmV0dXJuIHBhdHRlcm4gfHwKCQkJCShwYXR0ZXJuID0gbmV3IFJlZ0V4
cCggIihefCIgKyB3aGl0ZXNwYWNlICsgIikiICsgY2xhc3NOYW1lICsgIigiICsgd2hpdGVzcGFj
ZSArICJ8JCkiICkpICYmCgkJCQljbGFzc0NhY2hlKCBjbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVt
ICkgewoJCQkJCXJldHVybiBwYXR0ZXJuLnRlc3QoIHR5cGVvZiBlbGVtLmNsYXNzTmFtZSA9PT0g
InN0cmluZyIgJiYgZWxlbS5jbGFzc05hbWUgfHwgdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlICE9
PSAidW5kZWZpbmVkIiAmJiBlbGVtLmdldEF0dHJpYnV0ZSgiY2xhc3MiKSB8fCAiIiApOwoJCQkJ
fSk7CgkJfSwKCgkJIkFUVFIiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkgewoJ
CQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQl2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIo
IGVsZW0sIG5hbWUgKTsKCgkJCQlpZiAoIHJlc3VsdCA9PSBudWxsICkgewoJCQkJCXJldHVybiBv
cGVyYXRvciA9PT0gIiE9IjsKCQkJCX0KCQkJCWlmICggIW9wZXJhdG9yICkgewoJCQkJCXJldHVy
biB0cnVlOwoJCQkJfQoKCQkJCXJlc3VsdCArPSAiIjsKCgkJCQlyZXR1cm4gb3BlcmF0b3IgPT09
ICI9IiA/IHJlc3VsdCA9PT0gY2hlY2sgOgoJCQkJCW9wZXJhdG9yID09PSAiIT0iID8gcmVzdWx0
ICE9PSBjaGVjayA6CgkJCQkJb3BlcmF0b3IgPT09ICJePSIgPyBjaGVjayAmJiByZXN1bHQuaW5k
ZXhPZiggY2hlY2sgKSA9PT0gMCA6CgkJCQkJb3BlcmF0b3IgPT09ICIqPSIgPyBjaGVjayAmJiBy
ZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDoKCQkJCQlvcGVyYXRvciA9PT0gIiQ9IiA/IGNo
ZWNrICYmIHJlc3VsdC5zbGljZSggLWNoZWNrLmxlbmd0aCApID09PSBjaGVjayA6CgkJCQkJb3Bl
cmF0b3IgPT09ICJ+PSIgPyAoICIgIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgIiAi
ICkgKyAiICIgKS5pbmRleE9mKCBjaGVjayApID4gLTEgOgoJCQkJCW9wZXJhdG9yID09PSAifD0i
ID8gcmVzdWx0ID09PSBjaGVjayB8fCByZXN1bHQuc2xpY2UoIDAsIGNoZWNrLmxlbmd0aCArIDEg
KSA9PT0gY2hlY2sgKyAiLSIgOgoJCQkJCWZhbHNlOwoJCQl9OwoJCX0sCgoJCSJDSElMRCI6IGZ1
bmN0aW9uKCB0eXBlLCB3aGF0LCBhcmd1bWVudCwgZmlyc3QsIGxhc3QgKSB7CgkJCXZhciBzaW1w
bGUgPSB0eXBlLnNsaWNlKCAwLCAzICkgIT09ICJudGgiLAoJCQkJZm9yd2FyZCA9IHR5cGUuc2xp
Y2UoIC00ICkgIT09ICJsYXN0IiwKCQkJCW9mVHlwZSA9IHdoYXQgPT09ICJvZi10eXBlIjsKCgkJ
CXJldHVybiBmaXJzdCA9PT0gMSAmJiBsYXN0ID09PSAwID8KCgkJCQkvLyBTaG9ydGN1dCBmb3Ig
Om50aC0qKG4pCgkJCQlmdW5jdGlvbiggZWxlbSApIHsKCQkJCQlyZXR1cm4gISFlbGVtLnBhcmVu
dE5vZGU7CgkJCQl9IDoKCgkJCQlmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkgewoJCQkJ
CXZhciBjYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsIG5vZGUsIG5vZGVJbmRleCwgc3Rh
cnQsCgkJCQkJCWRpciA9IHNpbXBsZSAhPT0gZm9yd2FyZCA/ICJuZXh0U2libGluZyIgOiAicHJl
dmlvdXNTaWJsaW5nIiwKCQkJCQkJcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlLAoJCQkJCQluYW1l
ID0gb2ZUeXBlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSwKCQkJCQkJdXNlQ2FjaGUg
PSAheG1sICYmICFvZlR5cGUsCgkJCQkJCWRpZmYgPSBmYWxzZTsKCgkJCQkJaWYgKCBwYXJlbnQg
KSB7CgoJCQkJCQkvLyA6KGZpcnN0fGxhc3R8b25seSktKGNoaWxkfG9mLXR5cGUpCgkJCQkJCWlm
ICggc2ltcGxlICkgewoJCQkJCQkJd2hpbGUgKCBkaXIgKSB7CgkJCQkJCQkJbm9kZSA9IGVsZW07
CgkJCQkJCQkJd2hpbGUgKCAobm9kZSA9IG5vZGVbIGRpciBdKSApIHsKCQkJCQkJCQkJaWYgKCBv
ZlR5cGUgPwoJCQkJCQkJCQkJbm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDoK
CQkJCQkJCQkJCW5vZGUubm9kZVR5cGUgPT09IDEgKSB7CgoJCQkJCQkJCQkJcmV0dXJuIGZhbHNl
OwoJCQkJCQkJCQl9CgkJCQkJCQkJfQoJCQkJCQkJCS8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6
b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKQoJCQkJCQkJCXN0YXJ0ID0gZGlyID0g
dHlwZSA9PT0gIm9ubHkiICYmICFzdGFydCAmJiAibmV4dFNpYmxpbmciOwoJCQkJCQkJfQoJCQkJ
CQkJcmV0dXJuIHRydWU7CgkJCQkJCX0KCgkJCQkJCXN0YXJ0ID0gWyBmb3J3YXJkID8gcGFyZW50
LmZpcnN0Q2hpbGQgOiBwYXJlbnQubGFzdENoaWxkIF07CgoJCQkJCQkvLyBub24teG1sIDpudGgt
Y2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YAoJCQkJCQlpZiAoIGZvcndh
cmQgJiYgdXNlQ2FjaGUgKSB7CgoJCQkJCQkJLy8gU2VlayBgZWxlbWAgZnJvbSBhIHByZXZpb3Vz
bHktY2FjaGVkIGluZGV4CgoJCQkJCQkJLy8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheQoJCQkJ
CQkJbm9kZSA9IHBhcmVudDsKCQkJCQkJCW91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwg
KG5vZGVbIGV4cGFuZG8gXSA9IHt9KTsKCgkJCQkJCQkvLyBTdXBwb3J0OiBJRSA8OSBvbmx5CgkJ
CQkJCQkvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcw
OSkKCQkJCQkJCXVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8CgkJ
CQkJCQkJKG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTsKCgkJCQkJCQljYWNoZSA9
IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107CgkJCQkJCQlub2RlSW5kZXggPSBjYWNoZVsgMCBd
ID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07CgkJCQkJCQlkaWZmID0gbm9kZUluZGV4ICYmIGNh
Y2hlWyAyIF07CgkJCQkJCQlub2RlID0gbm9kZUluZGV4ICYmIHBhcmVudC5jaGlsZE5vZGVzWyBu
b2RlSW5kZXggXTsKCgkJCQkJCQl3aGlsZSAoIChub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAm
JiBub2RlWyBkaXIgXSB8fAoKCQkJCQkJCQkvLyBGYWxsYmFjayB0byBzZWVraW5nIGBlbGVtYCBm
cm9tIHRoZSBzdGFydAoJCQkJCQkJCShkaWZmID0gbm9kZUluZGV4ID0gMCkgfHwgc3RhcnQucG9w
KCkpICkgewoKCQkJCQkJCQkvLyBXaGVuIGZvdW5kLCBjYWNoZSBpbmRleGVzIG9uIGBwYXJlbnRg
IGFuZCBicmVhawoJCQkJCQkJCWlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSAmJiArK2RpZmYgJiYg
bm9kZSA9PT0gZWxlbSApIHsKCQkJCQkJCQkJdW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVu
cywgbm9kZUluZGV4LCBkaWZmIF07CgkJCQkJCQkJCWJyZWFrOwoJCQkJCQkJCX0KCQkJCQkJCX0K
CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkvLyBVc2UgcHJldmlvdXNseS1jYWNoZWQgZWxlbWVudCBp
bmRleCBpZiBhdmFpbGFibGUKCQkJCQkJCWlmICggdXNlQ2FjaGUgKSB7CgkJCQkJCQkJLy8gLi4u
aW4gYSBnemlwLWZyaWVuZGx5IHdheQoJCQkJCQkJCW5vZGUgPSBlbGVtOwoJCQkJCQkJCW91dGVy
Q2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTsKCgkJCQkJ
CQkJLy8gU3VwcG9ydDogSUUgPDkgb25seQoJCQkJCQkJCS8vIERlZmVuZCBhZ2FpbnN0IGNsb25l
ZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KQoJCQkJCQkJCXVuaXF1ZUNhY2hlID0gb3V0
ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8CgkJCQkJCQkJCShvdXRlckNhY2hlWyBub2RlLnVu
aXF1ZUlEIF0gPSB7fSk7CgoJCQkJCQkJCWNhY2hlID0gdW5pcXVlQ2FjaGVbIHR5cGUgXSB8fCBb
XTsKCQkJCQkJCQlub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAx
IF07CgkJCQkJCQkJZGlmZiA9IG5vZGVJbmRleDsKCQkJCQkJCX0KCgkJCQkJCQkvLyB4bWwgOm50
aC1jaGlsZCguLi4pCgkJCQkJCQkvLyBvciA6bnRoLWxhc3QtY2hpbGQoLi4uKSBvciA6bnRoKC1s
YXN0KT8tb2YtdHlwZSguLi4pCgkJCQkJCQlpZiAoIGRpZmYgPT09IGZhbHNlICkgewoJCQkJCQkJ
CS8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0
YXJ0CgkJCQkJCQkJd2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsg
ZGlyIF0gfHwKCQkJCQkJCQkJKGRpZmYgPSBub2RlSW5kZXggPSAwKSB8fCBzdGFydC5wb3AoKSkg
KSB7CgoJCQkJCQkJCQlpZiAoICggb2ZUeXBlID8KCQkJCQkJCQkJCW5vZGUubm9kZU5hbWUudG9M
b3dlckNhc2UoKSA9PT0gbmFtZSA6CgkJCQkJCQkJCQlub2RlLm5vZGVUeXBlID09PSAxICkgJiYK
CQkJCQkJCQkJCSsrZGlmZiApIHsKCgkJCQkJCQkJCQkvLyBDYWNoZSB0aGUgaW5kZXggb2YgZWFj
aCBlbmNvdW50ZXJlZCBlbGVtZW50CgkJCQkJCQkJCQlpZiAoIHVzZUNhY2hlICkgewoJCQkJCQkJ
CQkJCW91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9
KTsKCgkJCQkJCQkJCQkJLy8gU3VwcG9ydDogSUUgPDkgb25seQoJCQkJCQkJCQkJCS8vIERlZmVu
ZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KQoJCQkJCQkJCQkJ
CXVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8CgkJCQkJCQkJCQkJ
CShvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7CgoJCQkJCQkJCQkJCXVuaXF1ZUNh
Y2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIGRpZmYgXTsKCQkJCQkJCQkJCX0KCgkJCQkJCQkJCQlp
ZiAoIG5vZGUgPT09IGVsZW0gKSB7CgkJCQkJCQkJCQkJYnJlYWs7CgkJCQkJCQkJCQl9CgkJCQkJ
CQkJCX0KCQkJCQkJCQl9CgkJCQkJCQl9CgkJCQkJCX0KCgkJCQkJCS8vIEluY29ycG9yYXRlIHRo
ZSBvZmZzZXQsIHRoZW4gY2hlY2sgYWdhaW5zdCBjeWNsZSBzaXplCgkJCQkJCWRpZmYgLT0gbGFz
dDsKCQkJCQkJcmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYm
IGRpZmYgLyBmaXJzdCA+PSAwICk7CgkJCQkJfQoJCQkJfTsKCQl9LAoKCQkiUFNFVURPIjogZnVu
Y3Rpb24oIHBzZXVkbywgYXJndW1lbnQgKSB7CgkJCS8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUg
Y2FzZS1pbnNlbnNpdGl2ZQoJCQkvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI3Bz
ZXVkby1jbGFzc2VzCgkJCS8vIFByaW9yaXRpemUgYnkgY2FzZSBzZW5zaXRpdml0eSBpbiBjYXNl
IGN1c3RvbSBwc2V1ZG9zIGFyZSBhZGRlZCB3aXRoIHVwcGVyY2FzZSBsZXR0ZXJzCgkJCS8vIFJl
bWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3MKCQkJdmFyIGFyZ3Ms
CgkJCQlmbiA9IEV4cHIucHNldWRvc1sgcHNldWRvIF0gfHwgRXhwci5zZXRGaWx0ZXJzWyBwc2V1
ZG8udG9Mb3dlckNhc2UoKSBdIHx8CgkJCQkJU2l6emxlLmVycm9yKCAidW5zdXBwb3J0ZWQgcHNl
dWRvOiAiICsgcHNldWRvICk7CgoJCQkvLyBUaGUgdXNlciBtYXkgdXNlIGNyZWF0ZVBzZXVkbyB0
byBpbmRpY2F0ZSB0aGF0CgkJCS8vIGFyZ3VtZW50cyBhcmUgbmVlZGVkIHRvIGNyZWF0ZSB0aGUg
ZmlsdGVyIGZ1bmN0aW9uCgkJCS8vIGp1c3QgYXMgU2l6emxlIGRvZXMKCQkJaWYgKCBmblsgZXhw
YW5kbyBdICkgewoJCQkJcmV0dXJuIGZuKCBhcmd1bWVudCApOwoJCQl9CgoJCQkvLyBCdXQgbWFp
bnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXMKCQkJaWYgKCBmbi5sZW5ndGggPiAxICkg
ewoJCQkJYXJncyA9IFsgcHNldWRvLCBwc2V1ZG8sICIiLCBhcmd1bWVudCBdOwoJCQkJcmV0dXJu
IEV4cHIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eSggcHNldWRvLnRvTG93ZXJDYXNlKCkgKSA/
CgkJCQkJbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkgewoJCQkJCQl2YXIg
aWR4LAoJCQkJCQkJbWF0Y2hlZCA9IGZuKCBzZWVkLCBhcmd1bWVudCApLAoJCQkJCQkJaSA9IG1h
dGNoZWQubGVuZ3RoOwoJCQkJCQl3aGlsZSAoIGktLSApIHsKCQkJCQkJCWlkeCA9IGluZGV4T2Yo
IHNlZWQsIG1hdGNoZWRbaV0gKTsKCQkJCQkJCXNlZWRbIGlkeCBdID0gISggbWF0Y2hlc1sgaWR4
IF0gPSBtYXRjaGVkW2ldICk7CgkJCQkJCX0KCQkJCQl9KSA6CgkJCQkJZnVuY3Rpb24oIGVsZW0g
KSB7CgkJCQkJCXJldHVybiBmbiggZWxlbSwgMCwgYXJncyApOwoJCQkJCX07CgkJCX0KCgkJCXJl
dHVybiBmbjsKCQl9Cgl9LAoKCXBzZXVkb3M6IHsKCQkvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBz
ZXVkb3MKCQkibm90IjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQkJLy8g
VHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGUKCQkJLy8gdG8gYXZvaWQgdHJlYXRp
bmcgbGVhZGluZyBhbmQgdHJhaWxpbmcKCQkJLy8gc3BhY2VzIGFzIGNvbWJpbmF0b3JzCgkJCXZh
ciBpbnB1dCA9IFtdLAoJCQkJcmVzdWx0cyA9IFtdLAoJCQkJbWF0Y2hlciA9IGNvbXBpbGUoIHNl
bGVjdG9yLnJlcGxhY2UoIHJ0cmltLCAiJDEiICkgKTsKCgkJCXJldHVybiBtYXRjaGVyWyBleHBh
bmRvIF0gPwoJCQkJbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzLCBjb250ZXh0
LCB4bWwgKSB7CgkJCQkJdmFyIGVsZW0sCgkJCQkJCXVubWF0Y2hlZCA9IG1hdGNoZXIoIHNlZWQs
IG51bGwsIHhtbCwgW10gKSwKCQkJCQkJaSA9IHNlZWQubGVuZ3RoOwoKCQkJCQkvLyBNYXRjaCBl
bGVtZW50cyB1bm1hdGNoZWQgYnkgYG1hdGNoZXJgCgkJCQkJd2hpbGUgKCBpLS0gKSB7CgkJCQkJ
CWlmICggKGVsZW0gPSB1bm1hdGNoZWRbaV0pICkgewoJCQkJCQkJc2VlZFtpXSA9ICEobWF0Y2hl
c1tpXSA9IGVsZW0pOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSkgOgoJCQkJZnVuY3Rpb24oIGVsZW0s
IGNvbnRleHQsIHhtbCApIHsKCQkJCQlpbnB1dFswXSA9IGVsZW07CgkJCQkJbWF0Y2hlciggaW5w
dXQsIG51bGwsIHhtbCwgcmVzdWx0cyApOwoJCQkJCS8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQg
KGlzc3VlICMyOTkpCgkJCQkJaW5wdXRbMF0gPSBudWxsOwoJCQkJCXJldHVybiAhcmVzdWx0cy5w
b3AoKTsKCQkJCX07CgkJfSksCgoJCSJoYXMiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVj
dG9yICkgewoJCQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQlyZXR1cm4gU2l6emxlKCBz
ZWxlY3RvciwgZWxlbSApLmxlbmd0aCA+IDA7CgkJCX07CgkJfSksCgoJCSJjb250YWlucyI6IG1h
cmtGdW5jdGlvbihmdW5jdGlvbiggdGV4dCApIHsKCQkJdGV4dCA9IHRleHQucmVwbGFjZSggcnVu
ZXNjYXBlLCBmdW5lc2NhcGUgKTsKCQkJcmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkgewoJCQkJcmV0
dXJuICggZWxlbS50ZXh0Q29udGVudCB8fCBlbGVtLmlubmVyVGV4dCB8fCBnZXRUZXh0KCBlbGVt
ICkgKS5pbmRleE9mKCB0ZXh0ICkgPiAtMTsKCQkJfTsKCQl9KSwKCgkJLy8gIldoZXRoZXIgYW4g
ZWxlbWVudCBpcyByZXByZXNlbnRlZCBieSBhIDpsYW5nKCkgc2VsZWN0b3IKCQkvLyBpcyBiYXNl
ZCBzb2xlbHkgb24gdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZQoJCS8vIGJlaW5nIGVxdWFs
IHRvIHRoZSBpZGVudGlmaWVyIEMsCgkJLy8gb3IgYmVnaW5uaW5nIHdpdGggdGhlIGlkZW50aWZp
ZXIgQyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSAiLSIuCgkJLy8gVGhlIG1hdGNoaW5nIG9mIEMg
YWdhaW5zdCB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlIGlzIHBlcmZvcm1lZCBjYXNlLWlu
c2Vuc2l0aXZlbHkuCgkJLy8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEg
dmFsaWQgbGFuZ3VhZ2UgbmFtZS4iCgkJLy8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3Jz
LyNsYW5nLXBzZXVkbwoJCSJsYW5nIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggbGFuZyApIHsK
CQkJLy8gbGFuZyB2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgaWRlbnRpZmllcgoJCQlpZiAoICFyaWRl
bnRpZmllci50ZXN0KGxhbmcgfHwgIiIpICkgewoJCQkJU2l6emxlLmVycm9yKCAidW5zdXBwb3J0
ZWQgbGFuZzogIiArIGxhbmcgKTsKCQkJfQoJCQlsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2Nh
cGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7CgkJCXJldHVybiBmdW5jdGlvbiggZWxlbSAp
IHsKCQkJCXZhciBlbGVtTGFuZzsKCQkJCWRvIHsKCQkJCQlpZiAoIChlbGVtTGFuZyA9IGRvY3Vt
ZW50SXNIVE1MID8KCQkJCQkJZWxlbS5sYW5nIDoKCQkJCQkJZWxlbS5nZXRBdHRyaWJ1dGUoInht
bDpsYW5nIikgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoImxhbmciKSkgKSB7CgoJCQkJCQllbGVtTGFu
ZyA9IGVsZW1MYW5nLnRvTG93ZXJDYXNlKCk7CgkJCQkJCXJldHVybiBlbGVtTGFuZyA9PT0gbGFu
ZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgIi0iICkgPT09IDA7CgkJCQkJfQoJCQkJfSB3
aGlsZSAoIChlbGVtID0gZWxlbS5wYXJlbnROb2RlKSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICk7
CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX07CgkJfSksCgoJCS8vIE1pc2NlbGxhbmVvdXMKCQkidGFy
Z2V0IjogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXZhciBoYXNoID0gd2luZG93LmxvY2F0aW9uICYm
IHdpbmRvdy5sb2NhdGlvbi5oYXNoOwoJCQlyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkg
PT09IGVsZW0uaWQ7CgkJfSwKCgkJInJvb3QiOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJu
IGVsZW0gPT09IGRvY0VsZW07CgkJfSwKCgkJImZvY3VzIjogZnVuY3Rpb24oIGVsZW0gKSB7CgkJ
CXJldHVybiBlbGVtID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmICghZG9jdW1lbnQuaGFz
Rm9jdXMgfHwgZG9jdW1lbnQuaGFzRm9jdXMoKSkgJiYgISEoZWxlbS50eXBlIHx8IGVsZW0uaHJl
ZiB8fCB+ZWxlbS50YWJJbmRleCk7CgkJfSwKCgkJLy8gQm9vbGVhbiBwcm9wZXJ0aWVzCgkJImVu
YWJsZWQiOiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZmFsc2UgKSwKCQkiZGlzYWJsZWQiOiBjcmVh
dGVEaXNhYmxlZFBzZXVkbyggdHJ1ZSApLAoKCQkiY2hlY2tlZCI6IGZ1bmN0aW9uKCBlbGVtICkg
ewoJCQkvLyBJbiBDU1MzLCA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIGJvdGggY2hlY2tlZCBhbmQg
c2VsZWN0ZWQgZWxlbWVudHMKCQkJLy8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3Nz
My1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWQKCQkJdmFyIG5vZGVOYW1lID0gZWxlbS5ub2Rl
TmFtZS50b0xvd2VyQ2FzZSgpOwoJCQlyZXR1cm4gKG5vZGVOYW1lID09PSAiaW5wdXQiICYmICEh
ZWxlbS5jaGVja2VkKSB8fCAobm9kZU5hbWUgPT09ICJvcHRpb24iICYmICEhZWxlbS5zZWxlY3Rl
ZCk7CgkJfSwKCgkJInNlbGVjdGVkIjogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCS8vIEFjY2Vzc2lu
ZyB0aGlzIHByb3BlcnR5IG1ha2VzIHNlbGVjdGVkLWJ5LWRlZmF1bHQKCQkJLy8gb3B0aW9ucyBp
biBTYWZhcmkgd29yayBwcm9wZXJseQoJCQlpZiAoIGVsZW0ucGFyZW50Tm9kZSApIHsKCQkJCWVs
ZW0ucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4OwoJCQl9CgoJCQlyZXR1cm4gZWxlbS5zZWxlY3Rl
ZCA9PT0gdHJ1ZTsKCQl9LAoKCQkvLyBDb250ZW50cwoJCSJlbXB0eSI6IGZ1bmN0aW9uKCBlbGVt
ICkgewoJCQkvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkbwoJ
CQkvLyA6ZW1wdHkgaXMgbmVnYXRlZCBieSBlbGVtZW50ICgxKSBvciBjb250ZW50IG5vZGVzICh0
ZXh0OiAzOyBjZGF0YTogNDsgZW50aXR5IHJlZjogNSksCgkJCS8vICAgYnV0IG5vdCBieSBvdGhl
cnMgKGNvbW1lbnQ6IDg7IHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb246IDc7IGV0Yy4pCgkJCS8vIG5v
ZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMg
Y2hpbGRyZW4KCQkJZm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVs
ZW0ubmV4dFNpYmxpbmcgKSB7CgkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkgewoJCQkJCXJl
dHVybiBmYWxzZTsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gdHJ1ZTsKCQl9LAoKCQkicGFyZW50Ijog
ZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiAhRXhwci5wc2V1ZG9zWyJlbXB0eSJdKCBlbGVt
ICk7CgkJfSwKCgkJLy8gRWxlbWVudC9pbnB1dCB0eXBlcwoJCSJoZWFkZXIiOiBmdW5jdGlvbigg
ZWxlbSApIHsKCQkJcmV0dXJuIHJoZWFkZXIudGVzdCggZWxlbS5ub2RlTmFtZSApOwoJCX0sCgoJ
CSJpbnB1dCI6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVt
Lm5vZGVOYW1lICk7CgkJfSwKCgkJImJ1dHRvbiI6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQl2YXIg
bmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQkJcmV0dXJuIG5hbWUgPT09ICJp
bnB1dCIgJiYgZWxlbS50eXBlID09PSAiYnV0dG9uIiB8fCBuYW1lID09PSAiYnV0dG9uIjsKCQl9
LAoKCQkidGV4dCI6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQl2YXIgYXR0cjsKCQkJcmV0dXJuIGVs
ZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gImlucHV0IiAmJgoJCQkJZWxlbS50eXBlID09
PSAidGV4dCIgJiYKCgkJCQkvLyBTdXBwb3J0OiBJRTw4CgkJCQkvLyBOZXcgSFRNTDUgYXR0cmli
dXRlIHZhbHVlcyAoZS5nLiwgInNlYXJjaCIpIGFwcGVhciB3aXRoIGVsZW0udHlwZSA9PT0gInRl
eHQiCgkJCQkoIChhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoInR5cGUiKSkgPT0gbnVsbCB8fCBh
dHRyLnRvTG93ZXJDYXNlKCkgPT09ICJ0ZXh0IiApOwoJCX0sCgoJCS8vIFBvc2l0aW9uLWluLWNv
bGxlY3Rpb24KCQkiZmlyc3QiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCkgewoJ
CQlyZXR1cm4gWyAwIF07CgkJfSksCgoJCSJsYXN0IjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhm
dW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7CgkJCXJldHVybiBbIGxlbmd0aCAtIDEg
XTsKCQl9KSwKCgkJImVxIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJ
bmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkgewoJCQlyZXR1cm4gWyBhcmd1bWVudCA8IDAgPyBh
cmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50IF07CgkJfSksCgoJCSJldmVuIjogY3JlYXRlUG9z
aXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7CgkJCXZhciBp
ID0gMDsKCQkJZm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7CgkJCQltYXRjaEluZGV4ZXMu
cHVzaCggaSApOwoJCQl9CgkJCXJldHVybiBtYXRjaEluZGV4ZXM7CgkJfSksCgoJCSJvZGQiOiBj
cmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHsK
CQkJdmFyIGkgPSAxOwoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHsKCQkJCW1hdGNo
SW5kZXhlcy5wdXNoKCBpICk7CgkJCX0KCQkJcmV0dXJuIG1hdGNoSW5kZXhlczsKCQl9KSwKCgkJ
Imx0IjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5n
dGgsIGFyZ3VtZW50ICkgewoJCQl2YXIgaSA9IGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVu
Z3RoIDogYXJndW1lbnQ7CgkJCWZvciAoIDsgLS1pID49IDA7ICkgewoJCQkJbWF0Y2hJbmRleGVz
LnB1c2goIGkgKTsKCQkJfQoJCQlyZXR1cm4gbWF0Y2hJbmRleGVzOwoJCX0pLAoKCQkiZ3QiOiBj
cmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJn
dW1lbnQgKSB7CgkJCXZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBh
cmd1bWVudDsKCQkJZm9yICggOyArK2kgPCBsZW5ndGg7ICkgewoJCQkJbWF0Y2hJbmRleGVzLnB1
c2goIGkgKTsKCQkJfQoJCQlyZXR1cm4gbWF0Y2hJbmRleGVzOwoJCX0pCgl9Cn07CgpFeHByLnBz
ZXVkb3NbIm50aCJdID0gRXhwci5wc2V1ZG9zWyJlcSJdOwoKLy8gQWRkIGJ1dHRvbi9pbnB1dCB0
eXBlIHBzZXVkb3MKZm9yICggaSBpbiB7IHJhZGlvOiB0cnVlLCBjaGVja2JveDogdHJ1ZSwgZmls
ZTogdHJ1ZSwgcGFzc3dvcmQ6IHRydWUsIGltYWdlOiB0cnVlIH0gKSB7CglFeHByLnBzZXVkb3Nb
IGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7Cn0KZm9yICggaSBpbiB7IHN1Ym1pdDogdHJ1
ZSwgcmVzZXQ6IHRydWUgfSApIHsKCUV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlQnV0dG9uUHNl
dWRvKCBpICk7Cn0KCi8vIEVhc3kgQVBJIGZvciBjcmVhdGluZyBuZXcgc2V0RmlsdGVycwpmdW5j
dGlvbiBzZXRGaWx0ZXJzKCkge30Kc2V0RmlsdGVycy5wcm90b3R5cGUgPSBFeHByLmZpbHRlcnMg
PSBFeHByLnBzZXVkb3M7CkV4cHIuc2V0RmlsdGVycyA9IG5ldyBzZXRGaWx0ZXJzKCk7Cgp0b2tl
bml6ZSA9IFNpenpsZS50b2tlbml6ZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgcGFyc2VPbmx5ICkg
ewoJdmFyIG1hdGNoZWQsIG1hdGNoLCB0b2tlbnMsIHR5cGUsCgkJc29GYXIsIGdyb3VwcywgcHJl
RmlsdGVycywKCQljYWNoZWQgPSB0b2tlbkNhY2hlWyBzZWxlY3RvciArICIgIiBdOwoKCWlmICgg
Y2FjaGVkICkgewoJCXJldHVybiBwYXJzZU9ubHkgPyAwIDogY2FjaGVkLnNsaWNlKCAwICk7Cgl9
CgoJc29GYXIgPSBzZWxlY3RvcjsKCWdyb3VwcyA9IFtdOwoJcHJlRmlsdGVycyA9IEV4cHIucHJl
RmlsdGVyOwoKCXdoaWxlICggc29GYXIgKSB7CgoJCS8vIENvbW1hIGFuZCBmaXJzdCBydW4KCQlp
ZiAoICFtYXRjaGVkIHx8IChtYXRjaCA9IHJjb21tYS5leGVjKCBzb0ZhciApKSApIHsKCQkJaWYg
KCBtYXRjaCApIHsKCQkJCS8vIERvbid0IGNvbnN1bWUgdHJhaWxpbmcgY29tbWFzIGFzIHZhbGlk
CgkJCQlzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaFswXS5sZW5ndGggKSB8fCBzb0ZhcjsKCQkJ
fQoJCQlncm91cHMucHVzaCggKHRva2VucyA9IFtdKSApOwoJCX0KCgkJbWF0Y2hlZCA9IGZhbHNl
OwoKCQkvLyBDb21iaW5hdG9ycwoJCWlmICggKG1hdGNoID0gcmNvbWJpbmF0b3JzLmV4ZWMoIHNv
RmFyICkpICkgewoJCQltYXRjaGVkID0gbWF0Y2guc2hpZnQoKTsKCQkJdG9rZW5zLnB1c2goewoJ
CQkJdmFsdWU6IG1hdGNoZWQsCgkJCQkvLyBDYXN0IGRlc2NlbmRhbnQgY29tYmluYXRvcnMgdG8g
c3BhY2UKCQkJCXR5cGU6IG1hdGNoWzBdLnJlcGxhY2UoIHJ0cmltLCAiICIgKQoJCQl9KTsKCQkJ
c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hlZC5sZW5ndGggKTsKCQl9CgoJCS8vIEZpbHRlcnMK
CQlmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkgewoJCQlpZiAoIChtYXRjaCA9IG1hdGNoRXhw
clsgdHlwZSBdLmV4ZWMoIHNvRmFyICkpICYmICghcHJlRmlsdGVyc1sgdHlwZSBdIHx8CgkJCQko
bWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkpKSApIHsKCQkJCW1hdGNoZWQgPSBt
YXRjaC5zaGlmdCgpOwoJCQkJdG9rZW5zLnB1c2goewoJCQkJCXZhbHVlOiBtYXRjaGVkLAoJCQkJ
CXR5cGU6IHR5cGUsCgkJCQkJbWF0Y2hlczogbWF0Y2gKCQkJCX0pOwoJCQkJc29GYXIgPSBzb0Zh
ci5zbGljZSggbWF0Y2hlZC5sZW5ndGggKTsKCQkJfQoJCX0KCgkJaWYgKCAhbWF0Y2hlZCApIHsK
CQkJYnJlYWs7CgkJfQoJfQoKCS8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4
Y2VzcwoJLy8gaWYgd2UncmUganVzdCBwYXJzaW5nCgkvLyBPdGhlcndpc2UsIHRocm93IGFuIGVy
cm9yIG9yIHJldHVybiB0b2tlbnMKCXJldHVybiBwYXJzZU9ubHkgPwoJCXNvRmFyLmxlbmd0aCA6
CgkJc29GYXIgPwoJCQlTaXp6bGUuZXJyb3IoIHNlbGVjdG9yICkgOgoJCQkvLyBDYWNoZSB0aGUg
dG9rZW5zCgkJCXRva2VuQ2FjaGUoIHNlbGVjdG9yLCBncm91cHMgKS5zbGljZSggMCApOwp9OwoK
ZnVuY3Rpb24gdG9TZWxlY3RvciggdG9rZW5zICkgewoJdmFyIGkgPSAwLAoJCWxlbiA9IHRva2Vu
cy5sZW5ndGgsCgkJc2VsZWN0b3IgPSAiIjsKCWZvciAoIDsgaSA8IGxlbjsgaSsrICkgewoJCXNl
bGVjdG9yICs9IHRva2Vuc1tpXS52YWx1ZTsKCX0KCXJldHVybiBzZWxlY3RvcjsKfQoKZnVuY3Rp
b24gYWRkQ29tYmluYXRvciggbWF0Y2hlciwgY29tYmluYXRvciwgYmFzZSApIHsKCXZhciBkaXIg
PSBjb21iaW5hdG9yLmRpciwKCQlza2lwID0gY29tYmluYXRvci5uZXh0LAoJCWtleSA9IHNraXAg
fHwgZGlyLAoJCWNoZWNrTm9uRWxlbWVudHMgPSBiYXNlICYmIGtleSA9PT0gInBhcmVudE5vZGUi
LAoJCWRvbmVOYW1lID0gZG9uZSsrOwoKCXJldHVybiBjb21iaW5hdG9yLmZpcnN0ID8KCQkvLyBD
aGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnQKCQlmdW5jdGlv
biggZWxlbSwgY29udGV4dCwgeG1sICkgewoJCQl3aGlsZSAoIChlbGVtID0gZWxlbVsgZGlyIF0p
ICkgewoJCQkJaWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7
CgkJCQkJcmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApOwoJCQkJfQoJCQl9CgkJ
CXJldHVybiBmYWxzZTsKCQl9IDoKCgkJLy8gQ2hlY2sgYWdhaW5zdCBhbGwgYW5jZXN0b3IvcHJl
Y2VkaW5nIGVsZW1lbnRzCgkJZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHsKCQkJdmFy
IG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSwKCQkJCW5ld0NhY2hlID0gWyBkaXJy
dW5zLCBkb25lTmFtZSBdOwoKCQkJLy8gV2UgY2FuJ3Qgc2V0IGFyYml0cmFyeSBkYXRhIG9uIFhN
TCBub2Rlcywgc28gdGhleSBkb24ndCBiZW5lZml0IGZyb20gY29tYmluYXRvciBjYWNoaW5nCgkJ
CWlmICggeG1sICkgewoJCQkJd2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHsKCQkJCQlp
ZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHsKCQkJCQkJaWYg
KCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHsKCQkJCQkJCXJldHVybiB0cnVlOwoJ
CQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJd2hpbGUgKCAoZWxlbSA9IGVsZW1b
IGRpciBdKSApIHsKCQkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVt
ZW50cyApIHsKCQkJCQkJb3V0ZXJDYWNoZSA9IGVsZW1bIGV4cGFuZG8gXSB8fCAoZWxlbVsgZXhw
YW5kbyBdID0ge30pOwoKCQkJCQkJLy8gU3VwcG9ydDogSUUgPDkgb25seQoJCQkJCQkvLyBEZWZl
bmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSkKCQkJCQkJdW5p
cXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHwgKG91dGVyQ2FjaGVbIGVs
ZW0udW5pcXVlSUQgXSA9IHt9KTsKCgkJCQkJCWlmICggc2tpcCAmJiBza2lwID09PSBlbGVtLm5v
ZGVOYW1lLnRvTG93ZXJDYXNlKCkgKSB7CgkJCQkJCQllbGVtID0gZWxlbVsgZGlyIF0gfHwgZWxl
bTsKCQkJCQkJfSBlbHNlIGlmICggKG9sZENhY2hlID0gdW5pcXVlQ2FjaGVbIGtleSBdKSAmJgoJ
CQkJCQkJb2xkQ2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBvbGRDYWNoZVsgMSBdID09PSBkb25l
TmFtZSApIHsKCgkJCQkJCQkvLyBBc3NpZ24gdG8gbmV3Q2FjaGUgc28gcmVzdWx0cyBiYWNrLXBy
b3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50cwoJCQkJCQkJcmV0dXJuIChuZXdDYWNoZVsgMiBd
ID0gb2xkQ2FjaGVbIDIgXSk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkvLyBSZXVzZSBuZXdjYWNo
ZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzCgkJCQkJCQl1
bmlxdWVDYWNoZVsga2V5IF0gPSBuZXdDYWNoZTsKCgkJCQkJCQkvLyBBIG1hdGNoIG1lYW5zIHdl
J3JlIGRvbmU7IGEgZmFpbCBtZWFucyB3ZSBoYXZlIHRvIGtlZXAgY2hlY2tpbmcKCQkJCQkJCWlm
ICggKG5ld0NhY2hlWyAyIF0gPSBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSkgKSB7CgkJ
CQkJCQkJcmV0dXJuIHRydWU7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQkJ
cmV0dXJuIGZhbHNlOwoJCX07Cn0KCmZ1bmN0aW9uIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyAp
IHsKCXJldHVybiBtYXRjaGVycy5sZW5ndGggPiAxID8KCQlmdW5jdGlvbiggZWxlbSwgY29udGV4
dCwgeG1sICkgewoJCQl2YXIgaSA9IG1hdGNoZXJzLmxlbmd0aDsKCQkJd2hpbGUgKCBpLS0gKSB7
CgkJCQlpZiAoICFtYXRjaGVyc1tpXSggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7CgkJCQkJcmV0
dXJuIGZhbHNlOwoJCQkJfQoJCQl9CgkJCXJldHVybiB0cnVlOwoJCX0gOgoJCW1hdGNoZXJzWzBd
Owp9CgpmdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3Vs
dHMgKSB7Cgl2YXIgaSA9IDAsCgkJbGVuID0gY29udGV4dHMubGVuZ3RoOwoJZm9yICggOyBpIDwg
bGVuOyBpKysgKSB7CgkJU2l6emxlKCBzZWxlY3RvciwgY29udGV4dHNbaV0sIHJlc3VsdHMgKTsK
CX0KCXJldHVybiByZXN1bHRzOwp9CgpmdW5jdGlvbiBjb25kZW5zZSggdW5tYXRjaGVkLCBtYXAs
IGZpbHRlciwgY29udGV4dCwgeG1sICkgewoJdmFyIGVsZW0sCgkJbmV3VW5tYXRjaGVkID0gW10s
CgkJaSA9IDAsCgkJbGVuID0gdW5tYXRjaGVkLmxlbmd0aCwKCQltYXBwZWQgPSBtYXAgIT0gbnVs
bDsKCglmb3IgKCA7IGkgPCBsZW47IGkrKyApIHsKCQlpZiAoIChlbGVtID0gdW5tYXRjaGVkW2ld
KSApIHsKCQkJaWYgKCAhZmlsdGVyIHx8IGZpbHRlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7
CgkJCQluZXdVbm1hdGNoZWQucHVzaCggZWxlbSApOwoJCQkJaWYgKCBtYXBwZWQgKSB7CgkJCQkJ
bWFwLnB1c2goIGkgKTsKCQkJCX0KCQkJfQoJCX0KCX0KCglyZXR1cm4gbmV3VW5tYXRjaGVkOwp9
CgpmdW5jdGlvbiBzZXRNYXRjaGVyKCBwcmVGaWx0ZXIsIHNlbGVjdG9yLCBtYXRjaGVyLCBwb3N0
RmlsdGVyLCBwb3N0RmluZGVyLCBwb3N0U2VsZWN0b3IgKSB7CglpZiAoIHBvc3RGaWx0ZXIgJiYg
IXBvc3RGaWx0ZXJbIGV4cGFuZG8gXSApIHsKCQlwb3N0RmlsdGVyID0gc2V0TWF0Y2hlciggcG9z
dEZpbHRlciApOwoJfQoJaWYgKCBwb3N0RmluZGVyICYmICFwb3N0RmluZGVyWyBleHBhbmRvIF0g
KSB7CgkJcG9zdEZpbmRlciA9IHNldE1hdGNoZXIoIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciAp
OwoJfQoJcmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4
dCwgeG1sICkgewoJCXZhciB0ZW1wLCBpLCBlbGVtLAoJCQlwcmVNYXAgPSBbXSwKCQkJcG9zdE1h
cCA9IFtdLAoJCQlwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLAoKCQkJLy8gR2V0IGluaXRp
YWwgZWxlbWVudHMgZnJvbSBzZWVkIG9yIGNvbnRleHQKCQkJZWxlbXMgPSBzZWVkIHx8IG11bHRp
cGxlQ29udGV4dHMoIHNlbGVjdG9yIHx8ICIqIiwgY29udGV4dC5ub2RlVHlwZSA/IFsgY29udGV4
dCBdIDogY29udGV4dCwgW10gKSwKCgkJCS8vIFByZWZpbHRlciB0byBnZXQgbWF0Y2hlciBpbnB1
dCwgcHJlc2VydmluZyBhIG1hcCBmb3Igc2VlZC1yZXN1bHRzIHN5bmNocm9uaXphdGlvbgoJCQlt
YXRjaGVySW4gPSBwcmVGaWx0ZXIgJiYgKCBzZWVkIHx8ICFzZWxlY3RvciApID8KCQkJCWNvbmRl
bnNlKCBlbGVtcywgcHJlTWFwLCBwcmVGaWx0ZXIsIGNvbnRleHQsIHhtbCApIDoKCQkJCWVsZW1z
LAoKCQkJbWF0Y2hlck91dCA9IG1hdGNoZXIgPwoJCQkJLy8gSWYgd2UgaGF2ZSBhIHBvc3RGaW5k
ZXIsIG9yIGZpbHRlcmVkIHNlZWQsIG9yIG5vbi1zZWVkIHBvc3RGaWx0ZXIgb3IgcHJlZXhpc3Rp
bmcgcmVzdWx0cywKCQkJCXBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhp
c3RpbmcgfHwgcG9zdEZpbHRlciApID8KCgkJCQkJLy8gLi4uaW50ZXJtZWRpYXRlIHByb2Nlc3Np
bmcgaXMgbmVjZXNzYXJ5CgkJCQkJW10gOgoKCQkJCQkvLyAuLi5vdGhlcndpc2UgdXNlIHJlc3Vs
dHMgZGlyZWN0bHkKCQkJCQlyZXN1bHRzIDoKCQkJCW1hdGNoZXJJbjsKCgkJLy8gRmluZCBwcmlt
YXJ5IG1hdGNoZXMKCQlpZiAoIG1hdGNoZXIgKSB7CgkJCW1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0
Y2hlck91dCwgY29udGV4dCwgeG1sICk7CgkJfQoKCQkvLyBBcHBseSBwb3N0RmlsdGVyCgkJaWYg
KCBwb3N0RmlsdGVyICkgewoJCQl0ZW1wID0gY29uZGVuc2UoIG1hdGNoZXJPdXQsIHBvc3RNYXAg
KTsKCQkJcG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApOwoKCQkJLy8gVW4tbWF0
Y2ggZmFpbGluZyBlbGVtZW50cyBieSBtb3ZpbmcgdGhlbSBiYWNrIHRvIG1hdGNoZXJJbgoJCQlp
ID0gdGVtcC5sZW5ndGg7CgkJCXdoaWxlICggaS0tICkgewoJCQkJaWYgKCAoZWxlbSA9IHRlbXBb
aV0pICkgewoJCQkJCW1hdGNoZXJPdXRbIHBvc3RNYXBbaV0gXSA9ICEobWF0Y2hlckluWyBwb3N0
TWFwW2ldIF0gPSBlbGVtKTsKCQkJCX0KCQkJfQoJCX0KCgkJaWYgKCBzZWVkICkgewoJCQlpZiAo
IHBvc3RGaW5kZXIgfHwgcHJlRmlsdGVyICkgewoJCQkJaWYgKCBwb3N0RmluZGVyICkgewoJCQkJ
CS8vIEdldCB0aGUgZmluYWwgbWF0Y2hlck91dCBieSBjb25kZW5zaW5nIHRoaXMgaW50ZXJtZWRp
YXRlIGludG8gcG9zdEZpbmRlciBjb250ZXh0cwoJCQkJCXRlbXAgPSBbXTsKCQkJCQlpID0gbWF0
Y2hlck91dC5sZW5ndGg7CgkJCQkJd2hpbGUgKCBpLS0gKSB7CgkJCQkJCWlmICggKGVsZW0gPSBt
YXRjaGVyT3V0W2ldKSApIHsKCQkJCQkJCS8vIFJlc3RvcmUgbWF0Y2hlckluIHNpbmNlIGVsZW0g
aXMgbm90IHlldCBhIGZpbmFsIG1hdGNoCgkJCQkJCQl0ZW1wLnB1c2goIChtYXRjaGVySW5baV0g
PSBlbGVtKSApOwoJCQkJCQl9CgkJCQkJfQoJCQkJCXBvc3RGaW5kZXIoIG51bGwsIChtYXRjaGVy
T3V0ID0gW10pLCB0ZW1wLCB4bWwgKTsKCQkJCX0KCgkJCQkvLyBNb3ZlIG1hdGNoZWQgZWxlbWVu
dHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZAoJCQkJaSA9
IG1hdGNoZXJPdXQubGVuZ3RoOwoJCQkJd2hpbGUgKCBpLS0gKSB7CgkJCQkJaWYgKCAoZWxlbSA9
IG1hdGNoZXJPdXRbaV0pICYmCgkJCQkJCSh0ZW1wID0gcG9zdEZpbmRlciA/IGluZGV4T2YoIHNl
ZWQsIGVsZW0gKSA6IHByZU1hcFtpXSkgPiAtMSApIHsKCgkJCQkJCXNlZWRbdGVtcF0gPSAhKHJl
c3VsdHNbdGVtcF0gPSBlbGVtKTsKCQkJCQl9CgkJCQl9CgkJCX0KCgkJLy8gQWRkIGVsZW1lbnRz
IHRvIHJlc3VsdHMsIHRocm91Z2ggcG9zdEZpbmRlciBpZiBkZWZpbmVkCgkJfSBlbHNlIHsKCQkJ
bWF0Y2hlck91dCA9IGNvbmRlbnNlKAoJCQkJbWF0Y2hlck91dCA9PT0gcmVzdWx0cyA/CgkJCQkJ
bWF0Y2hlck91dC5zcGxpY2UoIHByZWV4aXN0aW5nLCBtYXRjaGVyT3V0Lmxlbmd0aCApIDoKCQkJ
CQltYXRjaGVyT3V0CgkJCSk7CgkJCWlmICggcG9zdEZpbmRlciApIHsKCQkJCXBvc3RGaW5kZXIo
IG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApOwoJCQl9IGVsc2UgewoJCQkJcHVzaC5h
cHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApOwoJCQl9CgkJfQoJfSk7Cn0KCmZ1bmN0aW9uIG1h
dGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7Cgl2YXIgY2hlY2tDb250ZXh0LCBtYXRjaGVyLCBq
LAoJCWxlbiA9IHRva2Vucy5sZW5ndGgsCgkJbGVhZGluZ1JlbGF0aXZlID0gRXhwci5yZWxhdGl2
ZVsgdG9rZW5zWzBdLnR5cGUgXSwKCQlpbXBsaWNpdFJlbGF0aXZlID0gbGVhZGluZ1JlbGF0aXZl
IHx8IEV4cHIucmVsYXRpdmVbIiAiXSwKCQlpID0gbGVhZGluZ1JlbGF0aXZlID8gMSA6IDAsCgoJ
CS8vIFRoZSBmb3VuZGF0aW9uYWwgbWF0Y2hlciBlbnN1cmVzIHRoYXQgZWxlbWVudHMgYXJlIHJl
YWNoYWJsZSBmcm9tIHRvcC1sZXZlbCBjb250ZXh0KHMpCgkJbWF0Y2hDb250ZXh0ID0gYWRkQ29t
YmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtID09PSBjaGVja0NvbnRl
eHQ7CgkJfSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLAoJCW1hdGNoQW55Q29udGV4dCA9IGFk
ZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gaW5kZXhPZiggY2hlY2tD
b250ZXh0LCBlbGVtICkgPiAtMTsKCQl9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksCgkJbWF0
Y2hlcnMgPSBbIGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7CgkJCXZhciByZXQgPSAo
ICFsZWFkaW5nUmVsYXRpdmUgJiYgKCB4bWwgfHwgY29udGV4dCAhPT0gb3V0ZXJtb3N0Q29udGV4
dCApICkgfHwgKAoJCQkJKGNoZWNrQ29udGV4dCA9IGNvbnRleHQpLm5vZGVUeXBlID8KCQkJCQlt
YXRjaENvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApIDoKCQkJCQltYXRjaEFueUNvbnRleHQo
IGVsZW0sIGNvbnRleHQsIHhtbCApICk7CgkJCS8vIEF2b2lkIGhhbmdpbmcgb250byBlbGVtZW50
IChpc3N1ZSAjMjk5KQoJCQljaGVja0NvbnRleHQgPSBudWxsOwoJCQlyZXR1cm4gcmV0OwoJCX0g
XTsKCglmb3IgKCA7IGkgPCBsZW47IGkrKyApIHsKCQlpZiAoIChtYXRjaGVyID0gRXhwci5yZWxh
dGl2ZVsgdG9rZW5zW2ldLnR5cGUgXSkgKSB7CgkJCW1hdGNoZXJzID0gWyBhZGRDb21iaW5hdG9y
KGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLCBtYXRjaGVyKSBdOwoJCX0gZWxzZSB7CgkJCW1h
dGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zW2ldLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5z
W2ldLm1hdGNoZXMgKTsKCgkJCS8vIFJldHVybiBzcGVjaWFsIHVwb24gc2VlaW5nIGEgcG9zaXRp
b25hbCBtYXRjaGVyCgkJCWlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkgewoJCQkJLy8gRmluZCB0
aGUgbmV4dCByZWxhdGl2ZSBvcGVyYXRvciAoaWYgYW55KSBmb3IgcHJvcGVyIGhhbmRsaW5nCgkJ
CQlqID0gKytpOwoJCQkJZm9yICggOyBqIDwgbGVuOyBqKysgKSB7CgkJCQkJaWYgKCBFeHByLnJl
bGF0aXZlWyB0b2tlbnNbal0udHlwZSBdICkgewoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9CgkJ
CQlyZXR1cm4gc2V0TWF0Y2hlcigKCQkJCQlpID4gMSAmJiBlbGVtZW50TWF0Y2hlciggbWF0Y2hl
cnMgKSwKCQkJCQlpID4gMSAmJiB0b1NlbGVjdG9yKAoJCQkJCQkvLyBJZiB0aGUgcHJlY2VkaW5n
IHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFu
eS1lbGVtZW50IGAqYAoJCQkJCQl0b2tlbnMuc2xpY2UoIDAsIGkgLSAxICkuY29uY2F0KHsgdmFs
dWU6IHRva2Vuc1sgaSAtIDIgXS50eXBlID09PSAiICIgPyAiKiIgOiAiIiB9KQoJCQkJCSkucmVw
bGFjZSggcnRyaW0sICIkMSIgKSwKCQkJCQltYXRjaGVyLAoJCQkJCWkgPCBqICYmIG1hdGNoZXJG
cm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLAoJCQkJCWogPCBsZW4gJiYgbWF0Y2hl
ckZyb21Ub2tlbnMoICh0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSkgKSwKCQkJCQlqIDwgbGVu
ICYmIHRvU2VsZWN0b3IoIHRva2VucyApCgkJCQkpOwoJCQl9CgkJCW1hdGNoZXJzLnB1c2goIG1h
dGNoZXIgKTsKCQl9Cgl9CgoJcmV0dXJuIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApOwp9Cgpm
dW5jdGlvbiBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0
Y2hlcnMgKSB7Cgl2YXIgYnlTZXQgPSBzZXRNYXRjaGVycy5sZW5ndGggPiAwLAoJCWJ5RWxlbWVu
dCA9IGVsZW1lbnRNYXRjaGVycy5sZW5ndGggPiAwLAoJCXN1cGVyTWF0Y2hlciA9IGZ1bmN0aW9u
KCBzZWVkLCBjb250ZXh0LCB4bWwsIHJlc3VsdHMsIG91dGVybW9zdCApIHsKCQkJdmFyIGVsZW0s
IGosIG1hdGNoZXIsCgkJCQltYXRjaGVkQ291bnQgPSAwLAoJCQkJaSA9ICIwIiwKCQkJCXVubWF0
Y2hlZCA9IHNlZWQgJiYgW10sCgkJCQlzZXRNYXRjaGVkID0gW10sCgkJCQljb250ZXh0QmFja3Vw
ID0gb3V0ZXJtb3N0Q29udGV4dCwKCQkJCS8vIFdlIG11c3QgYWx3YXlzIGhhdmUgZWl0aGVyIHNl
ZWQgZWxlbWVudHMgb3Igb3V0ZXJtb3N0IGNvbnRleHQKCQkJCWVsZW1zID0gc2VlZCB8fCBieUVs
ZW1lbnQgJiYgRXhwci5maW5kWyJUQUciXSggIioiLCBvdXRlcm1vc3QgKSwKCQkJCS8vIFVzZSBp
bnRlZ2VyIGRpcnJ1bnMgaWZmIHRoaXMgaXMgdGhlIG91dGVybW9zdCBtYXRjaGVyCgkJCQlkaXJy
dW5zVW5pcXVlID0gKGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgu
cmFuZG9tKCkgfHwgMC4xKSwKCQkJCWxlbiA9IGVsZW1zLmxlbmd0aDsKCgkJCWlmICggb3V0ZXJt
b3N0ICkgewoJCQkJb3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT09IGRvY3VtZW50IHx8IGNv
bnRleHQgfHwgb3V0ZXJtb3N0OwoJCQl9CgoJCQkvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVt
ZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0cwoJCQkvLyBTdXBwb3J0OiBJRTw5LCBTYWZh
cmkKCQkJLy8gVG9sZXJhdGUgTm9kZUxpc3QgcHJvcGVydGllcyAoSUU6ICJsZW5ndGgiOyBTYWZh
cmk6IDxudW1iZXI+KSBtYXRjaGluZyBlbGVtZW50cyBieSBpZAoJCQlmb3IgKCA7IGkgIT09IGxl
biAmJiAoZWxlbSA9IGVsZW1zW2ldKSAhPSBudWxsOyBpKysgKSB7CgkJCQlpZiAoIGJ5RWxlbWVu
dCAmJiBlbGVtICkgewoJCQkJCWogPSAwOwoJCQkJCWlmICggIWNvbnRleHQgJiYgZWxlbS5vd25l
ckRvY3VtZW50ICE9PSBkb2N1bWVudCApIHsKCQkJCQkJc2V0RG9jdW1lbnQoIGVsZW0gKTsKCQkJ
CQkJeG1sID0gIWRvY3VtZW50SXNIVE1MOwoJCQkJCX0KCQkJCQl3aGlsZSAoIChtYXRjaGVyID0g
ZWxlbWVudE1hdGNoZXJzW2orK10pICkgewoJCQkJCQlpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRl
eHQgfHwgZG9jdW1lbnQsIHhtbCkgKSB7CgkJCQkJCQlyZXN1bHRzLnB1c2goIGVsZW0gKTsKCQkJ
CQkJCWJyZWFrOwoJCQkJCQl9CgkJCQkJfQoJCQkJCWlmICggb3V0ZXJtb3N0ICkgewoJCQkJCQlk
aXJydW5zID0gZGlycnVuc1VuaXF1ZTsKCQkJCQl9CgkJCQl9CgoJCQkJLy8gVHJhY2sgdW5tYXRj
aGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVycwoJCQkJaWYgKCBieVNldCApIHsKCQkJCQkvLyBU
aGV5IHdpbGwgaGF2ZSBnb25lIHRocm91Z2ggYWxsIHBvc3NpYmxlIG1hdGNoZXJzCgkJCQkJaWYg
KCAoZWxlbSA9ICFtYXRjaGVyICYmIGVsZW0pICkgewoJCQkJCQltYXRjaGVkQ291bnQtLTsKCQkJ
CQl9CgoJCQkJCS8vIExlbmd0aGVuIHRoZSBhcnJheSBmb3IgZXZlcnkgZWxlbWVudCwgbWF0Y2hl
ZCBvciBub3QKCQkJCQlpZiAoIHNlZWQgKSB7CgkJCQkJCXVubWF0Y2hlZC5wdXNoKCBlbGVtICk7
CgkJCQkJfQoJCQkJfQoJCQl9CgoJCQkvLyBgaWAgaXMgbm93IHRoZSBjb3VudCBvZiBlbGVtZW50
cyB2aXNpdGVkIGFib3ZlLCBhbmQgYWRkaW5nIGl0IHRvIGBtYXRjaGVkQ291bnRgCgkJCS8vIG1h
a2VzIHRoZSBsYXR0ZXIgbm9ubmVnYXRpdmUuCgkJCW1hdGNoZWRDb3VudCArPSBpOwoKCQkJLy8g
QXBwbHkgc2V0IGZpbHRlcnMgdG8gdW5tYXRjaGVkIGVsZW1lbnRzCgkJCS8vIE5PVEU6IFRoaXMg
Y2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwg
YG1hdGNoZWRDb3VudGAKCQkJLy8gZXF1YWxzIGBpYCksIHVubGVzcyB3ZSBkaWRuJ3QgdmlzaXQg
X2FueV8gZWxlbWVudHMgaW4gdGhlIGFib3ZlIGxvb3AgYmVjYXVzZSB3ZSBoYXZlCgkJCS8vIG5v
IGVsZW1lbnQgbWF0Y2hlcnMgYW5kIG5vIHNlZWQuCgkJCS8vIEluY3JlbWVudGluZyBhbiBpbml0
aWFsbHktc3RyaW5nICIwIiBgaWAgYWxsb3dzIGBpYCB0byByZW1haW4gYSBzdHJpbmcgb25seSBp
biB0aGF0CgkJCS8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgIjAwIiBgbWF0Y2hlZENv
dW50YCB0aGF0IGRpZmZlcnMgZnJvbSBgaWAgYnV0IGlzIGFsc28KCQkJLy8gbnVtZXJpY2FsbHkg
emVyby4KCQkJaWYgKCBieVNldCAmJiBpICE9PSBtYXRjaGVkQ291bnQgKSB7CgkJCQlqID0gMDsK
CQkJCXdoaWxlICggKG1hdGNoZXIgPSBzZXRNYXRjaGVyc1tqKytdKSApIHsKCQkJCQltYXRjaGVy
KCB1bm1hdGNoZWQsIHNldE1hdGNoZWQsIGNvbnRleHQsIHhtbCApOwoJCQkJfQoKCQkJCWlmICgg
c2VlZCApIHsKCQkJCQkvLyBSZWludGVncmF0ZSBlbGVtZW50IG1hdGNoZXMgdG8gZWxpbWluYXRl
IHRoZSBuZWVkIGZvciBzb3J0aW5nCgkJCQkJaWYgKCBtYXRjaGVkQ291bnQgPiAwICkgewoJCQkJ
CQl3aGlsZSAoIGktLSApIHsKCQkJCQkJCWlmICggISh1bm1hdGNoZWRbaV0gfHwgc2V0TWF0Y2hl
ZFtpXSkgKSB7CgkJCQkJCQkJc2V0TWF0Y2hlZFtpXSA9IHBvcC5jYWxsKCByZXN1bHRzICk7CgkJ
CQkJCQl9CgkJCQkJCX0KCQkJCQl9CgoJCQkJCS8vIERpc2NhcmQgaW5kZXggcGxhY2Vob2xkZXIg
dmFsdWVzIHRvIGdldCBvbmx5IGFjdHVhbCBtYXRjaGVzCgkJCQkJc2V0TWF0Y2hlZCA9IGNvbmRl
bnNlKCBzZXRNYXRjaGVkICk7CgkJCQl9CgoJCQkJLy8gQWRkIG1hdGNoZXMgdG8gcmVzdWx0cwoJ
CQkJcHVzaC5hcHBseSggcmVzdWx0cywgc2V0TWF0Y2hlZCApOwoKCQkJCS8vIFNlZWRsZXNzIHNl
dCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxh
dGUgc29ydGluZwoJCQkJaWYgKCBvdXRlcm1vc3QgJiYgIXNlZWQgJiYgc2V0TWF0Y2hlZC5sZW5n
dGggPiAwICYmCgkJCQkJKCBtYXRjaGVkQ291bnQgKyBzZXRNYXRjaGVycy5sZW5ndGggKSA+IDEg
KSB7CgoJCQkJCVNpenpsZS51bmlxdWVTb3J0KCByZXN1bHRzICk7CgkJCQl9CgkJCX0KCgkJCS8v
IE92ZXJyaWRlIG1hbmlwdWxhdGlvbiBvZiBnbG9iYWxzIGJ5IG5lc3RlZCBtYXRjaGVycwoJCQlp
ZiAoIG91dGVybW9zdCApIHsKCQkJCWRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlOwoJCQkJb3V0ZXJt
b3N0Q29udGV4dCA9IGNvbnRleHRCYWNrdXA7CgkJCX0KCgkJCXJldHVybiB1bm1hdGNoZWQ7CgkJ
fTsKCglyZXR1cm4gYnlTZXQgPwoJCW1hcmtGdW5jdGlvbiggc3VwZXJNYXRjaGVyICkgOgoJCXN1
cGVyTWF0Y2hlcjsKfQoKY29tcGlsZSA9IFNpenpsZS5jb21waWxlID0gZnVuY3Rpb24oIHNlbGVj
dG9yLCBtYXRjaCAvKiBJbnRlcm5hbCBVc2UgT25seSAqLyApIHsKCXZhciBpLAoJCXNldE1hdGNo
ZXJzID0gW10sCgkJZWxlbWVudE1hdGNoZXJzID0gW10sCgkJY2FjaGVkID0gY29tcGlsZXJDYWNo
ZVsgc2VsZWN0b3IgKyAiICIgXTsKCglpZiAoICFjYWNoZWQgKSB7CgkJLy8gR2VuZXJhdGUgYSBm
dW5jdGlvbiBvZiByZWN1cnNpdmUgZnVuY3Rpb25zIHRoYXQgY2FuIGJlIHVzZWQgdG8gY2hlY2sg
ZWFjaCBlbGVtZW50CgkJaWYgKCAhbWF0Y2ggKSB7CgkJCW1hdGNoID0gdG9rZW5pemUoIHNlbGVj
dG9yICk7CgkJfQoJCWkgPSBtYXRjaC5sZW5ndGg7CgkJd2hpbGUgKCBpLS0gKSB7CgkJCWNhY2hl
ZCA9IG1hdGNoZXJGcm9tVG9rZW5zKCBtYXRjaFtpXSApOwoJCQlpZiAoIGNhY2hlZFsgZXhwYW5k
byBdICkgewoJCQkJc2V0TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7CgkJCX0gZWxzZSB7CgkJCQll
bGVtZW50TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7CgkJCX0KCQl9CgoJCS8vIENhY2hlIHRoZSBj
b21waWxlZCBmdW5jdGlvbgoJCWNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoIHNlbGVjdG9yLCBtYXRj
aGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSApOwoK
CQkvLyBTYXZlIHNlbGVjdG9yIGFuZCB0b2tlbml6YXRpb24KCQljYWNoZWQuc2VsZWN0b3IgPSBz
ZWxlY3RvcjsKCX0KCXJldHVybiBjYWNoZWQ7Cn07CgovKioKICogQSBsb3ctbGV2ZWwgc2VsZWN0
aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZAogKiAgc2VsZWN0
b3IgZnVuY3Rpb25zCiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBBIHNlbGVj
dG9yIG9yIGEgcHJlLWNvbXBpbGVkCiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNp
enpsZS5jb21waWxlCiAqIEBwYXJhbSB7RWxlbWVudH0gY29udGV4dAogKiBAcGFyYW0ge0FycmF5
fSBbcmVzdWx0c10KICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRv
IG1hdGNoIGFnYWluc3QKICovCnNlbGVjdCA9IFNpenpsZS5zZWxlY3QgPSBmdW5jdGlvbiggc2Vs
ZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7Cgl2YXIgaSwgdG9rZW5zLCB0b2tlbiwg
dHlwZSwgZmluZCwKCQljb21waWxlZCA9IHR5cGVvZiBzZWxlY3RvciA9PT0gImZ1bmN0aW9uIiAm
JiBzZWxlY3RvciwKCQltYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoc2VsZWN0b3IgPSBjb21w
aWxlZC5zZWxlY3RvciB8fCBzZWxlY3RvcikgKTsKCglyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTsK
CgkvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxl
Y3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZAoJLy8gKHRoZSBsYXR0ZXIgb2Ygd2hpY2ggZ3Vh
cmFudGVlcyB1cyBjb250ZXh0KQoJaWYgKCBtYXRjaC5sZW5ndGggPT09IDEgKSB7CgoJCS8vIFJl
ZHVjZSBjb250ZXh0IGlmIHRoZSBsZWFkaW5nIGNvbXBvdW5kIHNlbGVjdG9yIGlzIGFuIElECgkJ
dG9rZW5zID0gbWF0Y2hbMF0gPSBtYXRjaFswXS5zbGljZSggMCApOwoJCWlmICggdG9rZW5zLmxl
bmd0aCA+IDIgJiYgKHRva2VuID0gdG9rZW5zWzBdKS50eXBlID09PSAiSUQiICYmCgkJCQljb250
ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmIEV4cHIucmVsYXRpdmVbIHRv
a2Vuc1sxXS50eXBlIF0gKSB7CgoJCQljb250ZXh0ID0gKCBFeHByLmZpbmRbIklEIl0oIHRva2Vu
Lm1hdGNoZXNbMF0ucmVwbGFjZShydW5lc2NhcGUsIGZ1bmVzY2FwZSksIGNvbnRleHQgKSB8fCBb
XSApWzBdOwoJCQlpZiAoICFjb250ZXh0ICkgewoJCQkJcmV0dXJuIHJlc3VsdHM7CgoJCQkvLyBQ
cmVjb21waWxlZCBtYXRjaGVycyB3aWxsIHN0aWxsIHZlcmlmeSBhbmNlc3RyeSwgc28gc3RlcCB1
cCBhIGxldmVsCgkJCX0gZWxzZSBpZiAoIGNvbXBpbGVkICkgewoJCQkJY29udGV4dCA9IGNvbnRl
eHQucGFyZW50Tm9kZTsKCQkJfQoKCQkJc2VsZWN0b3IgPSBzZWxlY3Rvci5zbGljZSggdG9rZW5z
LnNoaWZ0KCkudmFsdWUubGVuZ3RoICk7CgkJfQoKCQkvLyBGZXRjaCBhIHNlZWQgc2V0IGZvciBy
aWdodC10by1sZWZ0IG1hdGNoaW5nCgkJaSA9IG1hdGNoRXhwclsibmVlZHNDb250ZXh0Il0udGVz
dCggc2VsZWN0b3IgKSA/IDAgOiB0b2tlbnMubGVuZ3RoOwoJCXdoaWxlICggaS0tICkgewoJCQl0
b2tlbiA9IHRva2Vuc1tpXTsKCgkJCS8vIEFib3J0IGlmIHdlIGhpdCBhIGNvbWJpbmF0b3IKCQkJ
aWYgKCBFeHByLnJlbGF0aXZlWyAodHlwZSA9IHRva2VuLnR5cGUpIF0gKSB7CgkJCQlicmVhazsK
CQkJfQoJCQlpZiAoIChmaW5kID0gRXhwci5maW5kWyB0eXBlIF0pICkgewoJCQkJLy8gU2VhcmNo
LCBleHBhbmRpbmcgY29udGV4dCBmb3IgbGVhZGluZyBzaWJsaW5nIGNvbWJpbmF0b3JzCgkJCQlp
ZiAoIChzZWVkID0gZmluZCgKCQkJCQl0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UoIHJ1bmVzY2Fw
ZSwgZnVuZXNjYXBlICksCgkJCQkJcnNpYmxpbmcudGVzdCggdG9rZW5zWzBdLnR5cGUgKSAmJiB0
ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dAoJCQkJKSkgKSB7CgoJ
CQkJCS8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVy
biBlYXJseQoJCQkJCXRva2Vucy5zcGxpY2UoIGksIDEgKTsKCQkJCQlzZWxlY3RvciA9IHNlZWQu
bGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApOwoJCQkJCWlmICggIXNlbGVjdG9yICkgewoJ
CQkJCQlwdXNoLmFwcGx5KCByZXN1bHRzLCBzZWVkICk7CgkJCQkJCXJldHVybiByZXN1bHRzOwoJ
CQkJCX0KCgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJLy8gQ29tcGlsZSBhbmQgZXhl
Y3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkCgkvLyBQcm92
aWRlIGBtYXRjaGAgdG8gYXZvaWQgcmV0b2tlbml6YXRpb24gaWYgd2UgbW9kaWZpZWQgdGhlIHNl
bGVjdG9yIGFib3ZlCgkoIGNvbXBpbGVkIHx8IGNvbXBpbGUoIHNlbGVjdG9yLCBtYXRjaCApICko
CgkJc2VlZCwKCQljb250ZXh0LAoJCSFkb2N1bWVudElzSFRNTCwKCQlyZXN1bHRzLAoJCSFjb250
ZXh0IHx8IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQu
cGFyZW50Tm9kZSApIHx8IGNvbnRleHQKCSk7CglyZXR1cm4gcmVzdWx0czsKfTsKCi8vIE9uZS10
aW1lIGFzc2lnbm1lbnRzCgovLyBTb3J0IHN0YWJpbGl0eQpzdXBwb3J0LnNvcnRTdGFibGUgPSBl
eHBhbmRvLnNwbGl0KCIiKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKCIiKSA9PT0gZXhwYW5kbzsK
Ci8vIFN1cHBvcnQ6IENocm9tZSAxNC0zNSsKLy8gQWx3YXlzIGFzc3VtZSBkdXBsaWNhdGVzIGlm
IHRoZXkgYXJlbid0IHBhc3NlZCB0byB0aGUgY29tcGFyaXNvbiBmdW5jdGlvbgpzdXBwb3J0LmRl
dGVjdER1cGxpY2F0ZXMgPSAhIWhhc0R1cGxpY2F0ZTsKCi8vIEluaXRpYWxpemUgYWdhaW5zdCB0
aGUgZGVmYXVsdCBkb2N1bWVudApzZXREb2N1bWVudCgpOwoKLy8gU3VwcG9ydDogV2Via2l0PDUz
Ny4zMiAtIFNhZmFyaSA2LjAuMy9DaHJvbWUgMjUgKGZpeGVkIGluIENocm9tZSAyNykKLy8gRGV0
YWNoZWQgbm9kZXMgY29uZm91bmRpbmdseSBmb2xsb3cgKmVhY2ggb3RoZXIqCnN1cHBvcnQuc29y
dERldGFjaGVkID0gYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHsKCS8vIFNob3VsZCByZXR1cm4gMSwg
YnV0IHJldHVybnMgNCAoZm9sbG93aW5nKQoJcmV0dXJuIGVsLmNvbXBhcmVEb2N1bWVudFBvc2l0
aW9uKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJmaWVsZHNldCIpICkgJiAxOwp9KTsKCi8vIFN1
cHBvcnQ6IElFPDgKLy8gUHJldmVudCBhdHRyaWJ1dGUvcHJvcGVydHkgImludGVycG9sYXRpb24i
Ci8vIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzY0MjklMjhW
Uy44NSUyOS5hc3B4CmlmICggIWFzc2VydChmdW5jdGlvbiggZWwgKSB7CgllbC5pbm5lckhUTUwg
PSAiPGEgaHJlZj0nIyc+PC9hPiI7CglyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUo
ImhyZWYiKSA9PT0gIiMiIDsKfSkgKSB7CglhZGRIYW5kbGUoICJ0eXBlfGhyZWZ8aGVpZ2h0fHdp
ZHRoIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkgewoJCWlmICggIWlzWE1MICkgewoJ
CQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0g
InR5cGUiID8gMSA6IDIgKTsKCQl9Cgl9KTsKfQoKLy8gU3VwcG9ydDogSUU8OQovLyBVc2UgZGVm
YXVsdFZhbHVlIGluIHBsYWNlIG9mIGdldEF0dHJpYnV0ZSgidmFsdWUiKQppZiAoICFzdXBwb3J0
LmF0dHJpYnV0ZXMgfHwgIWFzc2VydChmdW5jdGlvbiggZWwgKSB7CgllbC5pbm5lckhUTUwgPSAi
PGlucHV0Lz4iOwoJZWwuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoICJ2YWx1ZSIsICIiICk7Cgly
ZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoICJ2YWx1ZSIgKSA9PT0gIiI7Cn0pICkg
ewoJYWRkSGFuZGxlKCAidmFsdWUiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7CgkJ
aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAiaW5wdXQiICkg
ewoJCQlyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7CgkJfQoJfSk7Cn0KCi8vIFN1cHBvcnQ6IElF
PDkKLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRy
aWJ1dGUgbGllcwppZiAoICFhc3NlcnQoZnVuY3Rpb24oIGVsICkgewoJcmV0dXJuIGVsLmdldEF0
dHJpYnV0ZSgiZGlzYWJsZWQiKSA9PSBudWxsOwp9KSApIHsKCWFkZEhhbmRsZSggYm9vbGVhbnMs
IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHsKCQl2YXIgdmFsOwoJCWlmICggIWlzWE1M
ICkgewoJCQlyZXR1cm4gZWxlbVsgbmFtZSBdID09PSB0cnVlID8gbmFtZS50b0xvd2VyQ2FzZSgp
IDoKCQkJCQkodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkpICYmIHZhbC5zcGVj
aWZpZWQgPwoJCQkJCXZhbC52YWx1ZSA6CgkJCQludWxsOwoJCX0KCX0pOwp9CgpyZXR1cm4gU2l6
emxlOwoKfSkoIHdpbmRvdyApOwoKCgpqUXVlcnkuZmluZCA9IFNpenpsZTsKalF1ZXJ5LmV4cHIg
PSBTaXp6bGUuc2VsZWN0b3JzOwoKLy8gRGVwcmVjYXRlZApqUXVlcnkuZXhwclsgIjoiIF0gPSBq
UXVlcnkuZXhwci5wc2V1ZG9zOwpqUXVlcnkudW5pcXVlU29ydCA9IGpRdWVyeS51bmlxdWUgPSBT
aXp6bGUudW5pcXVlU29ydDsKalF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDsKalF1ZXJ5Lmlz
WE1MRG9jID0gU2l6emxlLmlzWE1MOwpqUXVlcnkuY29udGFpbnMgPSBTaXp6bGUuY29udGFpbnM7
CmpRdWVyeS5lc2NhcGVTZWxlY3RvciA9IFNpenpsZS5lc2NhcGU7CgoKCgp2YXIgZGlyID0gZnVu
Y3Rpb24oIGVsZW0sIGRpciwgdW50aWwgKSB7Cgl2YXIgbWF0Y2hlZCA9IFtdLAoJCXRydW5jYXRl
ID0gdW50aWwgIT09IHVuZGVmaW5lZDsKCgl3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkg
JiYgZWxlbS5ub2RlVHlwZSAhPT0gOSApIHsKCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7
CgkJCWlmICggdHJ1bmNhdGUgJiYgalF1ZXJ5KCBlbGVtICkuaXMoIHVudGlsICkgKSB7CgkJCQli
cmVhazsKCQkJfQoJCQltYXRjaGVkLnB1c2goIGVsZW0gKTsKCQl9Cgl9CglyZXR1cm4gbWF0Y2hl
ZDsKfTsKCgp2YXIgc2libGluZ3MgPSBmdW5jdGlvbiggbiwgZWxlbSApIHsKCXZhciBtYXRjaGVk
ID0gW107CgoJZm9yICggOyBuOyBuID0gbi5uZXh0U2libGluZyApIHsKCQlpZiAoIG4ubm9kZVR5
cGUgPT09IDEgJiYgbiAhPT0gZWxlbSApIHsKCQkJbWF0Y2hlZC5wdXNoKCBuICk7CgkJfQoJfQoK
CXJldHVybiBtYXRjaGVkOwp9OwoKCnZhciBybmVlZHNDb250ZXh0ID0galF1ZXJ5LmV4cHIubWF0
Y2gubmVlZHNDb250ZXh0OwoKCgpmdW5jdGlvbiBub2RlTmFtZSggZWxlbSwgbmFtZSApIHsKCiAg
cmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBu
YW1lLnRvTG93ZXJDYXNlKCk7Cgp9Owp2YXIgcnNpbmdsZVRhZyA9ICggL148KFthLXpdW15cL1ww
PjpceDIwXHRcclxuXGZdKilbXHgyMFx0XHJcblxmXSpcLz8+KD86PFwvXDE+fCkkL2kgKTsKCgoK
dmFyIHJpc1NpbXBsZSA9IC9eLlteOiNcW1wuLF0qJC87CgovLyBJbXBsZW1lbnQgdGhlIGlkZW50
aWNhbCBmdW5jdGlvbmFsaXR5IGZvciBmaWx0ZXIgYW5kIG5vdApmdW5jdGlvbiB3aW5ub3coIGVs
ZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHsKCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHF1YWxp
ZmllciApICkgewoJCXJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVt
LCBpICkgewoJCQlyZXR1cm4gISFxdWFsaWZpZXIuY2FsbCggZWxlbSwgaSwgZWxlbSApICE9PSBu
b3Q7CgkJfSApOwoJfQoKCS8vIFNpbmdsZSBlbGVtZW50CglpZiAoIHF1YWxpZmllci5ub2RlVHlw
ZSApIHsKCQlyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHsK
CQkJcmV0dXJuICggZWxlbSA9PT0gcXVhbGlmaWVyICkgIT09IG5vdDsKCQl9ICk7Cgl9CgoJLy8g
QXJyYXlsaWtlIG9mIGVsZW1lbnRzIChqUXVlcnksIGFyZ3VtZW50cywgQXJyYXkpCglpZiAoIHR5
cGVvZiBxdWFsaWZpZXIgIT09ICJzdHJpbmciICkgewoJCXJldHVybiBqUXVlcnkuZ3JlcCggZWxl
bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gKCBpbmRleE9mLmNhbGwoIHF1YWxp
ZmllciwgZWxlbSApID4gLTEgKSAhPT0gbm90OwoJCX0gKTsKCX0KCgkvLyBTaW1wbGUgc2VsZWN0
b3IgdGhhdCBjYW4gYmUgZmlsdGVyZWQgZGlyZWN0bHksIHJlbW92aW5nIG5vbi1FbGVtZW50cwoJ
aWYgKCByaXNTaW1wbGUudGVzdCggcXVhbGlmaWVyICkgKSB7CgkJcmV0dXJuIGpRdWVyeS5maWx0
ZXIoIHF1YWxpZmllciwgZWxlbWVudHMsIG5vdCApOwoJfQoKCS8vIENvbXBsZXggc2VsZWN0b3Is
IGNvbXBhcmUgdGhlIHR3byBzZXRzLCByZW1vdmluZyBub24tRWxlbWVudHMKCXF1YWxpZmllciA9
IGpRdWVyeS5maWx0ZXIoIHF1YWxpZmllciwgZWxlbWVudHMgKTsKCXJldHVybiBqUXVlcnkuZ3Jl
cCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiAoIGluZGV4T2YuY2FsbCgg
cXVhbGlmaWVyLCBlbGVtICkgPiAtMSApICE9PSBub3QgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMTsK
CX0gKTsKfQoKalF1ZXJ5LmZpbHRlciA9IGZ1bmN0aW9uKCBleHByLCBlbGVtcywgbm90ICkgewoJ
dmFyIGVsZW0gPSBlbGVtc1sgMCBdOwoKCWlmICggbm90ICkgewoJCWV4cHIgPSAiOm5vdCgiICsg
ZXhwciArICIpIjsKCX0KCglpZiAoIGVsZW1zLmxlbmd0aCA9PT0gMSAmJiBlbGVtLm5vZGVUeXBl
ID09PSAxICkgewoJCXJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGVsZW0sIGV4
cHIgKSA/IFsgZWxlbSBdIDogW107Cgl9CgoJcmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXMoIGV4
cHIsIGpRdWVyeS5ncmVwKCBlbGVtcywgZnVuY3Rpb24oIGVsZW0gKSB7CgkJcmV0dXJuIGVsZW0u
bm9kZVR5cGUgPT09IDE7Cgl9ICkgKTsKfTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCWZpbmQ6IGZ1
bmN0aW9uKCBzZWxlY3RvciApIHsKCQl2YXIgaSwgcmV0LAoJCQlsZW4gPSB0aGlzLmxlbmd0aCwK
CQkJc2VsZiA9IHRoaXM7CgoJCWlmICggdHlwZW9mIHNlbGVjdG9yICE9PSAic3RyaW5nIiApIHsK
CQkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkoIHNlbGVjdG9yICkuZmlsdGVyKCBmdW5j
dGlvbigpIHsKCQkJCWZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7CgkJCQkJaWYgKCBqUXVl
cnkuY29udGFpbnMoIHNlbGZbIGkgXSwgdGhpcyApICkgewoJCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJ
CQl9CgkJCQl9CgkJCX0gKSApOwoJCX0KCgkJcmV0ID0gdGhpcy5wdXNoU3RhY2soIFtdICk7CgoJ
CWZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7CgkJCWpRdWVyeS5maW5kKCBzZWxlY3Rvciwg
c2VsZlsgaSBdLCByZXQgKTsKCQl9CgoJCXJldHVybiBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZVNv
cnQoIHJldCApIDogcmV0OwoJfSwKCWZpbHRlcjogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJl
dHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgZmFsc2Ug
KSApOwoJfSwKCW5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJldHVybiB0aGlzLnB1c2hT
dGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgdHJ1ZSApICk7Cgl9LAoJaXM6IGZ1
bmN0aW9uKCBzZWxlY3RvciApIHsKCQlyZXR1cm4gISF3aW5ub3coCgkJCXRoaXMsCgoJCQkvLyBJ
ZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hp
cCBpbiB0aGUgcmV0dXJuZWQgc2V0CgkJCS8vIHNvICQoInA6Zmlyc3QiKS5pcygicDpsYXN0Iikg
d29uJ3QgcmV0dXJuIHRydWUgZm9yIGEgZG9jIHdpdGggdHdvICJwIi4KCQkJdHlwZW9mIHNlbGVj
dG9yID09PSAic3RyaW5nIiAmJiBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICkgPwoJCQkJ
alF1ZXJ5KCBzZWxlY3RvciApIDoKCQkJCXNlbGVjdG9yIHx8IFtdLAoJCQlmYWxzZQoJCSkubGVu
Z3RoOwoJfQp9ICk7CgoKLy8gSW5pdGlhbGl6ZSBhIGpRdWVyeSBvYmplY3QKCgovLyBBIGNlbnRy
YWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudCkKdmFyIHJvb3RqUXVlcnks
CgoJLy8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3MKCS8vIFByaW9yaXRp
emUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICgjOTUyMSkK
CS8vIFN0cmljdCBIVE1MIHJlY29nbml0aW9uICgjMTEyOTA6IG11c3Qgc3RhcnQgd2l0aCA8KQoJ
Ly8gU2hvcnRjdXQgc2ltcGxlICNpZCBjYXNlIGZvciBzcGVlZAoJcnF1aWNrRXhwciA9IC9eKD86
XHMqKDxbXHdcV10rPilbXj5dKnwjKFtcdy1dKykpJC8sCgoJaW5pdCA9IGpRdWVyeS5mbi5pbml0
ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0LCByb290ICkgewoJCXZhciBtYXRjaCwgZWxl
bTsKCgkJLy8gSEFORExFOiAkKCIiKSwgJChudWxsKSwgJCh1bmRlZmluZWQpLCAkKGZhbHNlKQoJ
CWlmICggIXNlbGVjdG9yICkgewoJCQlyZXR1cm4gdGhpczsKCQl9CgoJCS8vIE1ldGhvZCBpbml0
KCkgYWNjZXB0cyBhbiBhbHRlcm5hdGUgcm9vdGpRdWVyeQoJCS8vIHNvIG1pZ3JhdGUgY2FuIHN1
cHBvcnQgalF1ZXJ5LnN1YiAoZ2gtMjEwMSkKCQlyb290ID0gcm9vdCB8fCByb290alF1ZXJ5OwoK
CQkvLyBIYW5kbGUgSFRNTCBzdHJpbmdzCgkJaWYgKCB0eXBlb2Ygc2VsZWN0b3IgPT09ICJzdHJp
bmciICkgewoJCQlpZiAoIHNlbGVjdG9yWyAwIF0gPT09ICI8IiAmJgoJCQkJc2VsZWN0b3JbIHNl
bGVjdG9yLmxlbmd0aCAtIDEgXSA9PT0gIj4iICYmCgkJCQlzZWxlY3Rvci5sZW5ndGggPj0gMyAp
IHsKCgkJCQkvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+
IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVjawoJCQkJbWF0Y2ggPSBbIG51bGwsIHNl
bGVjdG9yLCBudWxsIF07CgoJCQl9IGVsc2UgewoJCQkJbWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMo
IHNlbGVjdG9yICk7CgkJCX0KCgkJCS8vIE1hdGNoIGh0bWwgb3IgbWFrZSBzdXJlIG5vIGNvbnRl
eHQgaXMgc3BlY2lmaWVkIGZvciAjaWQKCQkJaWYgKCBtYXRjaCAmJiAoIG1hdGNoWyAxIF0gfHwg
IWNvbnRleHQgKSApIHsKCgkJCQkvLyBIQU5ETEU6ICQoaHRtbCkgLT4gJChhcnJheSkKCQkJCWlm
ICggbWF0Y2hbIDEgXSApIHsKCQkJCQljb250ZXh0ID0gY29udGV4dCBpbnN0YW5jZW9mIGpRdWVy
eSA/IGNvbnRleHRbIDAgXSA6IGNvbnRleHQ7CgoJCQkJCS8vIE9wdGlvbiB0byBydW4gc2NyaXB0
cyBpcyB0cnVlIGZvciBiYWNrLWNvbXBhdAoJCQkJCS8vIEludGVudGlvbmFsbHkgbGV0IHRoZSBl
cnJvciBiZSB0aHJvd24gaWYgcGFyc2VIVE1MIGlzIG5vdCBwcmVzZW50CgkJCQkJalF1ZXJ5Lm1l
cmdlKCB0aGlzLCBqUXVlcnkucGFyc2VIVE1MKAoJCQkJCQltYXRjaFsgMSBdLAoJCQkJCQljb250
ZXh0ICYmIGNvbnRleHQubm9kZVR5cGUgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4
dCA6IGRvY3VtZW50LAoJCQkJCQl0cnVlCgkJCQkJKSApOwoKCQkJCQkvLyBIQU5ETEU6ICQoaHRt
bCwgcHJvcHMpCgkJCQkJaWYgKCByc2luZ2xlVGFnLnRlc3QoIG1hdGNoWyAxIF0gKSAmJiBqUXVl
cnkuaXNQbGFpbk9iamVjdCggY29udGV4dCApICkgewoJCQkJCQlmb3IgKCBtYXRjaCBpbiBjb250
ZXh0ICkgewoKCQkJCQkJCS8vIFByb3BlcnRpZXMgb2YgY29udGV4dCBhcmUgY2FsbGVkIGFzIG1l
dGhvZHMgaWYgcG9zc2libGUKCQkJCQkJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHRoaXNbIG1h
dGNoIF0gKSApIHsKCQkJCQkJCQl0aGlzWyBtYXRjaCBdKCBjb250ZXh0WyBtYXRjaCBdICk7CgoJ
CQkJCQkJLy8gLi4uYW5kIG90aGVyd2lzZSBzZXQgYXMgYXR0cmlidXRlcwoJCQkJCQkJfSBlbHNl
IHsKCQkJCQkJCQl0aGlzLmF0dHIoIG1hdGNoLCBjb250ZXh0WyBtYXRjaCBdICk7CgkJCQkJCQl9
CgkJCQkJCX0KCQkJCQl9CgoJCQkJCXJldHVybiB0aGlzOwoKCQkJCS8vIEhBTkRMRTogJCgjaWQp
CgkJCQl9IGVsc2UgewoJCQkJCWVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggbWF0Y2hb
IDIgXSApOwoKCQkJCQlpZiAoIGVsZW0gKSB7CgoJCQkJCQkvLyBJbmplY3QgdGhlIGVsZW1lbnQg
ZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdAoJCQkJCQl0aGlzWyAwIF0gPSBlbGVtOwoJ
CQkJCQl0aGlzLmxlbmd0aCA9IDE7CgkJCQkJfQoJCQkJCXJldHVybiB0aGlzOwoJCQkJfQoKCQkJ
Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSkKCQkJfSBlbHNlIGlmICggIWNvbnRleHQgfHwgY29u
dGV4dC5qcXVlcnkgKSB7CgkJCQlyZXR1cm4gKCBjb250ZXh0IHx8IHJvb3QgKS5maW5kKCBzZWxl
Y3RvciApOwoKCQkJLy8gSEFORExFOiAkKGV4cHIsIGNvbnRleHQpCgkJCS8vICh3aGljaCBpcyBq
dXN0IGVxdWl2YWxlbnQgdG86ICQoY29udGV4dCkuZmluZChleHByKQoJCQl9IGVsc2UgewoJCQkJ
cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApOwoJCQl9
CgoJCS8vIEhBTkRMRTogJChET01FbGVtZW50KQoJCX0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVU
eXBlICkgewoJCQl0aGlzWyAwIF0gPSBzZWxlY3RvcjsKCQkJdGhpcy5sZW5ndGggPSAxOwoJCQly
ZXR1cm4gdGhpczsKCgkJLy8gSEFORExFOiAkKGZ1bmN0aW9uKQoJCS8vIFNob3J0Y3V0IGZvciBk
b2N1bWVudCByZWFkeQoJCX0gZWxzZSBpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBzZWxlY3RvciAp
ICkgewoJCQlyZXR1cm4gcm9vdC5yZWFkeSAhPT0gdW5kZWZpbmVkID8KCQkJCXJvb3QucmVhZHko
IHNlbGVjdG9yICkgOgoKCQkJCS8vIEV4ZWN1dGUgaW1tZWRpYXRlbHkgaWYgcmVhZHkgaXMgbm90
IHByZXNlbnQKCQkJCXNlbGVjdG9yKCBqUXVlcnkgKTsKCQl9CgoJCXJldHVybiBqUXVlcnkubWFr
ZUFycmF5KCBzZWxlY3RvciwgdGhpcyApOwoJfTsKCi8vIEdpdmUgdGhlIGluaXQgZnVuY3Rpb24g
dGhlIGpRdWVyeSBwcm90b3R5cGUgZm9yIGxhdGVyIGluc3RhbnRpYXRpb24KaW5pdC5wcm90b3R5
cGUgPSBqUXVlcnkuZm47CgovLyBJbml0aWFsaXplIGNlbnRyYWwgcmVmZXJlbmNlCnJvb3RqUXVl
cnkgPSBqUXVlcnkoIGRvY3VtZW50ICk7CgoKdmFyIHJwYXJlbnRzcHJldiA9IC9eKD86cGFyZW50
c3xwcmV2KD86VW50aWx8QWxsKSkvLAoKCS8vIE1ldGhvZHMgZ3VhcmFudGVlZCB0byBwcm9kdWNl
IGEgdW5pcXVlIHNldCB3aGVuIHN0YXJ0aW5nIGZyb20gYSB1bmlxdWUgc2V0CglndWFyYW50ZWVk
VW5pcXVlID0gewoJCWNoaWxkcmVuOiB0cnVlLAoJCWNvbnRlbnRzOiB0cnVlLAoJCW5leHQ6IHRy
dWUsCgkJcHJldjogdHJ1ZQoJfTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCWhhczogZnVuY3Rpb24o
IHRhcmdldCApIHsKCQl2YXIgdGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksCgkJCWwg
PSB0YXJnZXRzLmxlbmd0aDsKCgkJcmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHsKCQkJ
dmFyIGkgPSAwOwoJCQlmb3IgKCA7IGkgPCBsOyBpKysgKSB7CgkJCQlpZiAoIGpRdWVyeS5jb250
YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQl9CgkJ
CX0KCQl9ICk7Cgl9LAoKCWNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7
CgkJdmFyIGN1ciwKCQkJaSA9IDAsCgkJCWwgPSB0aGlzLmxlbmd0aCwKCQkJbWF0Y2hlZCA9IFtd
LAoJCQl0YXJnZXRzID0gdHlwZW9mIHNlbGVjdG9ycyAhPT0gInN0cmluZyIgJiYgalF1ZXJ5KCBz
ZWxlY3RvcnMgKTsKCgkJLy8gUG9zaXRpb25hbCBzZWxlY3RvcnMgbmV2ZXIgbWF0Y2gsIHNpbmNl
IHRoZXJlJ3Mgbm8gX3NlbGVjdGlvbl8gY29udGV4dAoJCWlmICggIXJuZWVkc0NvbnRleHQudGVz
dCggc2VsZWN0b3JzICkgKSB7CgkJCWZvciAoIDsgaSA8IGw7IGkrKyApIHsKCQkJCWZvciAoIGN1
ciA9IHRoaXNbIGkgXTsgY3VyICYmIGN1ciAhPT0gY29udGV4dDsgY3VyID0gY3VyLnBhcmVudE5v
ZGUgKSB7CgoJCQkJCS8vIEFsd2F5cyBza2lwIGRvY3VtZW50IGZyYWdtZW50cwoJCQkJCWlmICgg
Y3VyLm5vZGVUeXBlIDwgMTEgJiYgKCB0YXJnZXRzID8KCQkJCQkJdGFyZ2V0cy5pbmRleCggY3Vy
ICkgPiAtMSA6CgoJCQkJCQkvLyBEb24ndCBwYXNzIG5vbi1lbGVtZW50cyB0byBTaXp6bGUKCQkJ
CQkJY3VyLm5vZGVUeXBlID09PSAxICYmCgkJCQkJCQlqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0
b3IoIGN1ciwgc2VsZWN0b3JzICkgKSApIHsKCgkJCQkJCW1hdGNoZWQucHVzaCggY3VyICk7CgkJ
CQkJCWJyZWFrOwoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIHRoaXMucHVzaFN0YWNr
KCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0
Y2hlZCApOwoJfSwKCgkvLyBEZXRlcm1pbmUgdGhlIHBvc2l0aW9uIG9mIGFuIGVsZW1lbnQgd2l0
aGluIHRoZSBzZXQKCWluZGV4OiBmdW5jdGlvbiggZWxlbSApIHsKCgkJLy8gTm8gYXJndW1lbnQs
IHJldHVybiBpbmRleCBpbiBwYXJlbnQKCQlpZiAoICFlbGVtICkgewoJCQlyZXR1cm4gKCB0aGlz
WyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCku
bGVuZ3RoIDogLTE7CgkJfQoKCQkvLyBJbmRleCBpbiBzZWxlY3RvcgoJCWlmICggdHlwZW9mIGVs
ZW0gPT09ICJzdHJpbmciICkgewoJCQlyZXR1cm4gaW5kZXhPZi5jYWxsKCBqUXVlcnkoIGVsZW0g
KSwgdGhpc1sgMCBdICk7CgkJfQoKCQkvLyBMb2NhdGUgdGhlIHBvc2l0aW9uIG9mIHRoZSBkZXNp
cmVkIGVsZW1lbnQKCQlyZXR1cm4gaW5kZXhPZi5jYWxsKCB0aGlzLAoKCQkJLy8gSWYgaXQgcmVj
ZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkCgkJCWVsZW0u
anF1ZXJ5ID8gZWxlbVsgMCBdIDogZWxlbQoJCSk7Cgl9LAoKCWFkZDogZnVuY3Rpb24oIHNlbGVj
dG9yLCBjb250ZXh0ICkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjaygKCQkJalF1ZXJ5LnVuaXF1
ZVNvcnQoCgkJCQlqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNv
bnRleHQgKSApCgkJCSkKCQkpOwoJfSwKCglhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7
CgkJcmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID8KCQkJdGhpcy5wcmV2T2JqZWN0
IDogdGhpcy5wcmV2T2JqZWN0LmZpbHRlciggc2VsZWN0b3IgKQoJCSk7Cgl9Cn0gKTsKCmZ1bmN0
aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkgewoJd2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAm
JiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fQoJcmV0dXJuIGN1cjsKfQoKalF1ZXJ5LmVhY2goIHsK
CXBhcmVudDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJdmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9k
ZTsKCQlyZXR1cm4gcGFyZW50ICYmIHBhcmVudC5ub2RlVHlwZSAhPT0gMTEgPyBwYXJlbnQgOiBu
dWxsOwoJfSwKCXBhcmVudHM6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBkaXIoIGVsZW0s
ICJwYXJlbnROb2RlIiApOwoJfSwKCXBhcmVudHNVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVu
dGlsICkgewoJCXJldHVybiBkaXIoIGVsZW0sICJwYXJlbnROb2RlIiwgdW50aWwgKTsKCX0sCglu
ZXh0OiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4gc2libGluZyggZWxlbSwgIm5leHRTaWJs
aW5nIiApOwoJfSwKCXByZXY6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBzaWJsaW5nKCBl
bGVtLCAicHJldmlvdXNTaWJsaW5nIiApOwoJfSwKCW5leHRBbGw6IGZ1bmN0aW9uKCBlbGVtICkg
ewoJCXJldHVybiBkaXIoIGVsZW0sICJuZXh0U2libGluZyIgKTsKCX0sCglwcmV2QWxsOiBmdW5j
dGlvbiggZWxlbSApIHsKCQlyZXR1cm4gZGlyKCBlbGVtLCAicHJldmlvdXNTaWJsaW5nIiApOwoJ
fSwKCW5leHRVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkgewoJCXJldHVybiBkaXIo
IGVsZW0sICJuZXh0U2libGluZyIsIHVudGlsICk7Cgl9LAoJcHJldlVudGlsOiBmdW5jdGlvbigg
ZWxlbSwgaSwgdW50aWwgKSB7CgkJcmV0dXJuIGRpciggZWxlbSwgInByZXZpb3VzU2libGluZyIs
IHVudGlsICk7Cgl9LAoJc2libGluZ3M6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBzaWJs
aW5ncyggKCBlbGVtLnBhcmVudE5vZGUgfHwge30gKS5maXJzdENoaWxkLCBlbGVtICk7Cgl9LAoJ
Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBzaWJsaW5ncyggZWxlbS5maXJz
dENoaWxkICk7Cgl9LAoJY29udGVudHM6IGZ1bmN0aW9uKCBlbGVtICkgewogICAgICAgIGlmICgg
bm9kZU5hbWUoIGVsZW0sICJpZnJhbWUiICkgKSB7CiAgICAgICAgICAgIHJldHVybiBlbGVtLmNv
bnRlbnREb2N1bWVudDsKICAgICAgICB9CgogICAgICAgIC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBv
bmx5LCBpT1MgNyBvbmx5LCBBbmRyb2lkIEJyb3dzZXIgPD00LjMgb25seQogICAgICAgIC8vIFRy
ZWF0IHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFzIGEgcmVndWxhciBvbmUgaW4gYnJvd3NlcnMgdGhh
dAogICAgICAgIC8vIGRvbid0IHN1cHBvcnQgaXQuCiAgICAgICAgaWYgKCBub2RlTmFtZSggZWxl
bSwgInRlbXBsYXRlIiApICkgewogICAgICAgICAgICBlbGVtID0gZWxlbS5jb250ZW50IHx8IGVs
ZW07CiAgICAgICAgfQoKICAgICAgICByZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGls
ZE5vZGVzICk7Cgl9Cn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHsKCWpRdWVyeS5mblsgbmFtZSBd
ID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHsKCQl2YXIgbWF0Y2hlZCA9IGpRdWVyeS5t
YXAoIHRoaXMsIGZuLCB1bnRpbCApOwoKCQlpZiAoIG5hbWUuc2xpY2UoIC01ICkgIT09ICJVbnRp
bCIgKSB7CgkJCXNlbGVjdG9yID0gdW50aWw7CgkJfQoKCQlpZiAoIHNlbGVjdG9yICYmIHR5cGVv
ZiBzZWxlY3RvciA9PT0gInN0cmluZyIgKSB7CgkJCW1hdGNoZWQgPSBqUXVlcnkuZmlsdGVyKCBz
ZWxlY3RvciwgbWF0Y2hlZCApOwoJCX0KCgkJaWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7CgoJCQkv
LyBSZW1vdmUgZHVwbGljYXRlcwoJCQlpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7
CgkJCQlqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApOwoJCQl9CgoJCQkvLyBSZXZlcnNlIG9y
ZGVyIGZvciBwYXJlbnRzKiBhbmQgcHJldi1kZXJpdmF0aXZlcwoJCQlpZiAoIHJwYXJlbnRzcHJl
di50ZXN0KCBuYW1lICkgKSB7CgkJCQltYXRjaGVkLnJldmVyc2UoKTsKCQkJfQoJCX0KCgkJcmV0
dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkICk7Cgl9Owp9ICk7CnZhciBybm90aHRtbHdoaXRl
ID0gKCAvW15ceDIwXHRcclxuXGZdKy9nICk7CgoKCi8vIENvbnZlcnQgU3RyaW5nLWZvcm1hdHRl
ZCBvcHRpb25zIGludG8gT2JqZWN0LWZvcm1hdHRlZCBvbmVzCmZ1bmN0aW9uIGNyZWF0ZU9wdGlv
bnMoIG9wdGlvbnMgKSB7Cgl2YXIgb2JqZWN0ID0ge307CglqUXVlcnkuZWFjaCggb3B0aW9ucy5t
YXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdLCBmdW5jdGlvbiggXywgZmxhZyApIHsKCQlvYmpl
Y3RbIGZsYWcgXSA9IHRydWU7Cgl9ICk7CglyZXR1cm4gb2JqZWN0Owp9CgovKgogKiBDcmVhdGUg
YSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczoKICoKICoJb3B0
aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdp
bGwgY2hhbmdlIGhvdwogKgkJCXRoZSBjYWxsYmFjayBsaXN0IGJlaGF2ZXMgb3IgYSBtb3JlIHRy
YWRpdGlvbmFsIG9wdGlvbiBvYmplY3QKICoKICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qg
d2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmUKICogImZpcmVk
IiBtdWx0aXBsZSB0aW1lcy4KICoKICogUG9zc2libGUgb3B0aW9uczoKICoKICoJb25jZToJCQl3
aWxsIGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNlIChsaWtl
IGEgRGVmZXJyZWQpCiAqCiAqCW1lbW9yeToJCQl3aWxsIGtlZXAgdHJhY2sgb2YgcHJldmlvdXMg
dmFsdWVzIGFuZCB3aWxsIGNhbGwgYW55IGNhbGxiYWNrIGFkZGVkCiAqCQkJCQlhZnRlciB0aGUg
bGlzdCBoYXMgYmVlbiBmaXJlZCByaWdodCBhd2F5IHdpdGggdGhlIGxhdGVzdCAibWVtb3JpemVk
IgogKgkJCQkJdmFsdWVzIChsaWtlIGEgRGVmZXJyZWQpCiAqCiAqCXVuaXF1ZToJCQl3aWxsIGVu
c3VyZSBhIGNhbGxiYWNrIGNhbiBvbmx5IGJlIGFkZGVkIG9uY2UgKG5vIGR1cGxpY2F0ZSBpbiB0
aGUgbGlzdCkKICoKICoJc3RvcE9uRmFsc2U6CWludGVycnVwdCBjYWxsaW5ncyB3aGVuIGEgY2Fs
bGJhY2sgcmV0dXJucyBmYWxzZQogKgogKi8KalF1ZXJ5LkNhbGxiYWNrcyA9IGZ1bmN0aW9uKCBv
cHRpb25zICkgewoKCS8vIENvbnZlcnQgb3B0aW9ucyBmcm9tIFN0cmluZy1mb3JtYXR0ZWQgdG8g
T2JqZWN0LWZvcm1hdHRlZCBpZiBuZWVkZWQKCS8vICh3ZSBjaGVjayBpbiBjYWNoZSBmaXJzdCkK
CW9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgPwoJCWNyZWF0ZU9wdGlvbnMo
IG9wdGlvbnMgKSA6CgkJalF1ZXJ5LmV4dGVuZCgge30sIG9wdGlvbnMgKTsKCgl2YXIgLy8gRmxh
ZyB0byBrbm93IGlmIGxpc3QgaXMgY3VycmVudGx5IGZpcmluZwoJCWZpcmluZywKCgkJLy8gTGFz
dCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHMKCQltZW1vcnksCgoJCS8vIEZs
YWcgdG8ga25vdyBpZiBsaXN0IHdhcyBhbHJlYWR5IGZpcmVkCgkJZmlyZWQsCgoJCS8vIEZsYWcg
dG8gcHJldmVudCBmaXJpbmcKCQlsb2NrZWQsCgoJCS8vIEFjdHVhbCBjYWxsYmFjayBsaXN0CgkJ
bGlzdCA9IFtdLAoKCQkvLyBRdWV1ZSBvZiBleGVjdXRpb24gZGF0YSBmb3IgcmVwZWF0YWJsZSBs
aXN0cwoJCXF1ZXVlID0gW10sCgoJCS8vIEluZGV4IG9mIGN1cnJlbnRseSBmaXJpbmcgY2FsbGJh
Y2sgKG1vZGlmaWVkIGJ5IGFkZC9yZW1vdmUgYXMgbmVlZGVkKQoJCWZpcmluZ0luZGV4ID0gLTEs
CgoJCS8vIEZpcmUgY2FsbGJhY2tzCgkJZmlyZSA9IGZ1bmN0aW9uKCkgewoKCQkJLy8gRW5mb3Jj
ZSBzaW5nbGUtZmlyaW5nCgkJCWxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7CgoJCQkv
LyBFeGVjdXRlIGNhbGxiYWNrcyBmb3IgYWxsIHBlbmRpbmcgZXhlY3V0aW9ucywKCQkJLy8gcmVz
cGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlcwoJCQlmaXJl
ZCA9IGZpcmluZyA9IHRydWU7CgkJCWZvciAoIDsgcXVldWUubGVuZ3RoOyBmaXJpbmdJbmRleCA9
IC0xICkgewoJCQkJbWVtb3J5ID0gcXVldWUuc2hpZnQoKTsKCQkJCXdoaWxlICggKytmaXJpbmdJ
bmRleCA8IGxpc3QubGVuZ3RoICkgewoKCQkJCQkvLyBSdW4gY2FsbGJhY2sgYW5kIGNoZWNrIGZv
ciBlYXJseSB0ZXJtaW5hdGlvbgoJCQkJCWlmICggbGlzdFsgZmlyaW5nSW5kZXggXS5hcHBseSgg
bWVtb3J5WyAwIF0sIG1lbW9yeVsgMSBdICkgPT09IGZhbHNlICYmCgkJCQkJCW9wdGlvbnMuc3Rv
cE9uRmFsc2UgKSB7CgoJCQkJCQkvLyBKdW1wIHRvIGVuZCBhbmQgZm9yZ2V0IHRoZSBkYXRhIHNv
IC5hZGQgZG9lc24ndCByZS1maXJlCgkJCQkJCWZpcmluZ0luZGV4ID0gbGlzdC5sZW5ndGg7CgkJ
CQkJCW1lbW9yeSA9IGZhbHNlOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gRm9yZ2V0IHRoZSBk
YXRhIGlmIHdlJ3JlIGRvbmUgd2l0aCBpdAoJCQlpZiAoICFvcHRpb25zLm1lbW9yeSApIHsKCQkJ
CW1lbW9yeSA9IGZhbHNlOwoJCQl9CgoJCQlmaXJpbmcgPSBmYWxzZTsKCgkJCS8vIENsZWFuIHVw
IGlmIHdlJ3JlIGRvbmUgZmlyaW5nIGZvciBnb29kCgkJCWlmICggbG9ja2VkICkgewoKCQkJCS8v
IEtlZXAgYW4gZW1wdHkgbGlzdCBpZiB3ZSBoYXZlIGRhdGEgZm9yIGZ1dHVyZSBhZGQgY2FsbHMK
CQkJCWlmICggbWVtb3J5ICkgewoJCQkJCWxpc3QgPSBbXTsKCgkJCQkvLyBPdGhlcndpc2UsIHRo
aXMgb2JqZWN0IGlzIHNwZW50CgkJCQl9IGVsc2UgewoJCQkJCWxpc3QgPSAiIjsKCQkJCX0KCQkJ
fQoJCX0sCgoJCS8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0CgkJc2VsZiA9IHsKCgkJCS8vIEFk
ZCBhIGNhbGxiYWNrIG9yIGEgY29sbGVjdGlvbiBvZiBjYWxsYmFja3MgdG8gdGhlIGxpc3QKCQkJ
YWRkOiBmdW5jdGlvbigpIHsKCQkJCWlmICggbGlzdCApIHsKCgkJCQkJLy8gSWYgd2UgaGF2ZSBt
ZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmcKCQkJCQlp
ZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkgewoJCQkJCQlmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3Ro
IC0gMTsKCQkJCQkJcXVldWUucHVzaCggbWVtb3J5ICk7CgkJCQkJfQoKCQkJCQkoIGZ1bmN0aW9u
IGFkZCggYXJncyApIHsKCQkJCQkJalF1ZXJ5LmVhY2goIGFyZ3MsIGZ1bmN0aW9uKCBfLCBhcmcg
KSB7CgkJCQkJCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBhcmcgKSApIHsKCQkJCQkJCQlpZiAo
ICFvcHRpb25zLnVuaXF1ZSB8fCAhc2VsZi5oYXMoIGFyZyApICkgewoJCQkJCQkJCQlsaXN0LnB1
c2goIGFyZyApOwoJCQkJCQkJCX0KCQkJCQkJCX0gZWxzZSBpZiAoIGFyZyAmJiBhcmcubGVuZ3Ro
ICYmIGpRdWVyeS50eXBlKCBhcmcgKSAhPT0gInN0cmluZyIgKSB7CgoJCQkJCQkJCS8vIEluc3Bl
Y3QgcmVjdXJzaXZlbHkKCQkJCQkJCQlhZGQoIGFyZyApOwoJCQkJCQkJfQoJCQkJCQl9ICk7CgkJ
CQkJfSApKCBhcmd1bWVudHMgKTsKCgkJCQkJaWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHsKCQkJ
CQkJZmlyZSgpOwoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJCQl9LAoKCQkJLy8gUmVt
b3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdAoJCQlyZW1vdmU6IGZ1bmN0aW9uKCkgewoJCQkJ
alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHsKCQkJCQl2YXIgaW5k
ZXg7CgkJCQkJd2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5k
ZXggKSApID4gLTEgKSB7CgkJCQkJCWxpc3Quc3BsaWNlKCBpbmRleCwgMSApOwoKCQkJCQkJLy8g
SGFuZGxlIGZpcmluZyBpbmRleGVzCgkJCQkJCWlmICggaW5kZXggPD0gZmlyaW5nSW5kZXggKSB7
CgkJCQkJCQlmaXJpbmdJbmRleC0tOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSApOwoJCQkJcmV0dXJu
IHRoaXM7CgkJCX0sCgoJCQkvLyBDaGVjayBpZiBhIGdpdmVuIGNhbGxiYWNrIGlzIGluIHRoZSBs
aXN0LgoJCQkvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90
IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC4KCQkJaGFzOiBmdW5jdGlvbiggZm4gKSB7CgkJ
CQlyZXR1cm4gZm4gPwoJCQkJCWpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOgoJCQkJ
CWxpc3QubGVuZ3RoID4gMDsKCQkJfSwKCgkJCS8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20g
dGhlIGxpc3QKCQkJZW1wdHk6IGZ1bmN0aW9uKCkgewoJCQkJaWYgKCBsaXN0ICkgewoJCQkJCWxp
c3QgPSBbXTsKCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJCQl9LAoKCQkJLy8gRGlzYWJsZSAuZmly
ZSBhbmQgLmFkZAoJCQkvLyBBYm9ydCBhbnkgY3VycmVudC9wZW5kaW5nIGV4ZWN1dGlvbnMKCQkJ
Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzCgkJCWRpc2FibGU6IGZ1bmN0aW9uKCkg
ewoJCQkJbG9ja2VkID0gcXVldWUgPSBbXTsKCQkJCWxpc3QgPSBtZW1vcnkgPSAiIjsKCQkJCXJl
dHVybiB0aGlzOwoJCQl9LAoJCQlkaXNhYmxlZDogZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gIWxp
c3Q7CgkJCX0sCgoJCQkvLyBEaXNhYmxlIC5maXJlCgkJCS8vIEFsc28gZGlzYWJsZSAuYWRkIHVu
bGVzcyB3ZSBoYXZlIG1lbW9yeSAoc2luY2UgaXQgd291bGQgaGF2ZSBubyBlZmZlY3QpCgkJCS8v
IEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnMKCQkJbG9jazogZnVuY3Rpb24oKSB7CgkJCQls
b2NrZWQgPSBxdWV1ZSA9IFtdOwoJCQkJaWYgKCAhbWVtb3J5ICYmICFmaXJpbmcgKSB7CgkJCQkJ
bGlzdCA9IG1lbW9yeSA9ICIiOwoJCQkJfQoJCQkJcmV0dXJuIHRoaXM7CgkJCX0sCgkJCWxvY2tl
ZDogZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gISFsb2NrZWQ7CgkJCX0sCgoJCQkvLyBDYWxsIGFs
bCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzCgkJCWZpcmVX
aXRoOiBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHsKCQkJCWlmICggIWxvY2tlZCApIHsKCQkJ
CQlhcmdzID0gYXJncyB8fCBbXTsKCQkJCQlhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8g
YXJncy5zbGljZSgpIDogYXJncyBdOwoJCQkJCXF1ZXVlLnB1c2goIGFyZ3MgKTsKCQkJCQlpZiAo
ICFmaXJpbmcgKSB7CgkJCQkJCWZpcmUoKTsKCQkJCQl9CgkJCQl9CgkJCQlyZXR1cm4gdGhpczsK
CQkJfSwKCgkJCS8vIENhbGwgYWxsIHRoZSBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gYXJndW1l
bnRzCgkJCWZpcmU6IGZ1bmN0aW9uKCkgewoJCQkJc2VsZi5maXJlV2l0aCggdGhpcywgYXJndW1l
bnRzICk7CgkJCQlyZXR1cm4gdGhpczsKCQkJfSwKCgkJCS8vIFRvIGtub3cgaWYgdGhlIGNhbGxi
YWNrcyBoYXZlIGFscmVhZHkgYmVlbiBjYWxsZWQgYXQgbGVhc3Qgb25jZQoJCQlmaXJlZDogZnVu
Y3Rpb24oKSB7CgkJCQlyZXR1cm4gISFmaXJlZDsKCQkJfQoJCX07CgoJcmV0dXJuIHNlbGY7Cn07
CgoKZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7CglyZXR1cm4gdjsKfQpmdW5jdGlvbiBUaHJvd2Vy
KCBleCApIHsKCXRocm93IGV4Owp9CgpmdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2
ZSwgcmVqZWN0LCBub1ZhbHVlICkgewoJdmFyIG1ldGhvZDsKCgl0cnkgewoKCQkvLyBDaGVjayBm
b3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9y
CgkJaWYgKCB2YWx1ZSAmJiBqUXVlcnkuaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS5wcm9t
aXNlICkgKSApIHsKCQkJbWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwo
IHJlamVjdCApOwoKCQkvLyBPdGhlciB0aGVuYWJsZXMKCQl9IGVsc2UgaWYgKCB2YWx1ZSAmJiBq
UXVlcnkuaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHsKCQkJbWV0aG9k
LmNhbGwoIHZhbHVlLCByZXNvbHZlLCByZWplY3QgKTsKCgkJLy8gT3RoZXIgbm9uLXRoZW5hYmxl
cwoJCX0gZWxzZSB7CgoJCQkvLyBDb250cm9sIGByZXNvbHZlYCBhcmd1bWVudHMgYnkgbGV0dGlu
ZyBBcnJheSNzbGljZSBjYXN0IGJvb2xlYW4gYG5vVmFsdWVgIHRvIGludGVnZXI6CgkJCS8vICog
ZmFsc2U6IFsgdmFsdWUgXS5zbGljZSggMCApID0+IHJlc29sdmUoIHZhbHVlICkKCQkJLy8gKiB0
cnVlOiBbIHZhbHVlIF0uc2xpY2UoIDEgKSA9PiByZXNvbHZlKCkKCQkJcmVzb2x2ZS5hcHBseSgg
dW5kZWZpbmVkLCBbIHZhbHVlIF0uc2xpY2UoIG5vVmFsdWUgKSApOwoJCX0KCgkvLyBGb3IgUHJv
bWlzZXMvQSssIGNvbnZlcnQgZXhjZXB0aW9ucyBpbnRvIHJlamVjdGlvbnMKCS8vIFNpbmNlIGpR
dWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJh
IGNoZWNrcyBhcHBlYXJpbmcgaW4KCS8vIERlZmVycmVkI3RoZW4gdG8gY29uZGl0aW9uYWxseSBz
dXBwcmVzcyByZWplY3Rpb24uCgl9IGNhdGNoICggdmFsdWUgKSB7CgoJCS8vIFN1cHBvcnQ6IEFu
ZHJvaWQgNC4wIG9ubHkKCQkvLyBTdHJpY3QgbW9kZSBmdW5jdGlvbnMgaW52b2tlZCB3aXRob3V0
IC5jYWxsLy5hcHBseSBnZXQgZ2xvYmFsLW9iamVjdCBjb250ZXh0CgkJcmVqZWN0LmFwcGx5KCB1
bmRlZmluZWQsIFsgdmFsdWUgXSApOwoJfQp9CgpqUXVlcnkuZXh0ZW5kKCB7CgoJRGVmZXJyZWQ6
IGZ1bmN0aW9uKCBmdW5jICkgewoJCXZhciB0dXBsZXMgPSBbCgoJCQkJLy8gYWN0aW9uLCBhZGQg
bGlzdGVuZXIsIGNhbGxiYWNrcywKCQkJCS8vIC4uLiAudGhlbiBoYW5kbGVycywgYXJndW1lbnQg
aW5kZXgsIFtmaW5hbCBzdGF0ZV0KCQkJCVsgIm5vdGlmeSIsICJwcm9ncmVzcyIsIGpRdWVyeS5D
YWxsYmFja3MoICJtZW1vcnkiICksCgkJCQkJalF1ZXJ5LkNhbGxiYWNrcyggIm1lbW9yeSIgKSwg
MiBdLAoJCQkJWyAicmVzb2x2ZSIsICJkb25lIiwgalF1ZXJ5LkNhbGxiYWNrcyggIm9uY2UgbWVt
b3J5IiApLAoJCQkJCWpRdWVyeS5DYWxsYmFja3MoICJvbmNlIG1lbW9yeSIgKSwgMCwgInJlc29s
dmVkIiBdLAoJCQkJWyAicmVqZWN0IiwgImZhaWwiLCBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBt
ZW1vcnkiICksCgkJCQkJalF1ZXJ5LkNhbGxiYWNrcyggIm9uY2UgbWVtb3J5IiApLCAxLCAicmVq
ZWN0ZWQiIF0KCQkJXSwKCQkJc3RhdGUgPSAicGVuZGluZyIsCgkJCXByb21pc2UgPSB7CgkJCQlz
dGF0ZTogZnVuY3Rpb24oKSB7CgkJCQkJcmV0dXJuIHN0YXRlOwoJCQkJfSwKCQkJCWFsd2F5czog
ZnVuY3Rpb24oKSB7CgkJCQkJZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1l
bnRzICk7CgkJCQkJcmV0dXJuIHRoaXM7CgkJCQl9LAoJCQkJImNhdGNoIjogZnVuY3Rpb24oIGZu
ICkgewoJCQkJCXJldHVybiBwcm9taXNlLnRoZW4oIG51bGwsIGZuICk7CgkJCQl9LAoKCQkJCS8v
IEtlZXAgcGlwZSBmb3IgYmFjay1jb21wYXQKCQkJCXBpcGU6IGZ1bmN0aW9uKCAvKiBmbkRvbmUs
IGZuRmFpbCwgZm5Qcm9ncmVzcyAqLyApIHsKCQkJCQl2YXIgZm5zID0gYXJndW1lbnRzOwoKCQkJ
CQlyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCBmdW5jdGlvbiggbmV3RGVmZXIgKSB7CgkJCQkJCWpR
dWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHsKCgkJCQkJCQkvLyBNYXAg
dHVwbGVzIChwcm9ncmVzcywgZG9uZSwgZmFpbCkgdG8gYXJndW1lbnRzIChkb25lLCBmYWlsLCBw
cm9ncmVzcykKCQkJCQkJCXZhciBmbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBmbnNbIHR1cGxlWyA0
IF0gXSApICYmIGZuc1sgdHVwbGVbIDQgXSBdOwoKCQkJCQkJCS8vIGRlZmVycmVkLnByb2dyZXNz
KGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLm5vdGlmeSB9KQoJCQkJ
CQkJLy8gZGVmZXJyZWQuZG9uZShmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdE
ZWZlci5yZXNvbHZlIH0pCgkJCQkJCQkvLyBkZWZlcnJlZC5mYWlsKGZ1bmN0aW9uKCkgeyBiaW5k
IHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlamVjdCB9KQoJCQkJCQkJZGVmZXJyZWRbIHR1cGxl
WyAxIF0gXSggZnVuY3Rpb24oKSB7CgkJCQkJCQkJdmFyIHJldHVybmVkID0gZm4gJiYgZm4uYXBw
bHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQkJCQkJCWlmICggcmV0dXJuZWQgJiYgalF1ZXJ5Lmlz
RnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHsKCQkJCQkJCQkJcmV0dXJuZWQucHJvbWlz
ZSgpCgkJCQkJCQkJCQkucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApCgkJCQkJCQkJCQkuZG9u
ZSggbmV3RGVmZXIucmVzb2x2ZSApCgkJCQkJCQkJCQkuZmFpbCggbmV3RGVmZXIucmVqZWN0ICk7
CgkJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkJbmV3RGVmZXJbIHR1cGxlWyAwIF0gKyAiV2l0aCIg
XSgKCQkJCQkJCQkJCXRoaXMsCgkJCQkJCQkJCQlmbiA/IFsgcmV0dXJuZWQgXSA6IGFyZ3VtZW50
cwoJCQkJCQkJCQkpOwoJCQkJCQkJCX0KCQkJCQkJCX0gKTsKCQkJCQkJfSApOwoJCQkJCQlmbnMg
PSBudWxsOwoJCQkJCX0gKS5wcm9taXNlKCk7CgkJCQl9LAoJCQkJdGhlbjogZnVuY3Rpb24oIG9u
RnVsZmlsbGVkLCBvblJlamVjdGVkLCBvblByb2dyZXNzICkgewoJCQkJCXZhciBtYXhEZXB0aCA9
IDA7CgkJCQkJZnVuY3Rpb24gcmVzb2x2ZSggZGVwdGgsIGRlZmVycmVkLCBoYW5kbGVyLCBzcGVj
aWFsICkgewoJCQkJCQlyZXR1cm4gZnVuY3Rpb24oKSB7CgkJCQkJCQl2YXIgdGhhdCA9IHRoaXMs
CgkJCQkJCQkJYXJncyA9IGFyZ3VtZW50cywKCQkJCQkJCQltaWdodFRocm93ID0gZnVuY3Rpb24o
KSB7CgkJCQkJCQkJCXZhciByZXR1cm5lZCwgdGhlbjsKCgkJCQkJCQkJCS8vIFN1cHBvcnQ6IFBy
b21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4zCgkJCQkJCQkJCS8vIGh0dHBzOi8vcHJvbWlzZXNh
cGx1cy5jb20vI3BvaW50LTU5CgkJCQkJCQkJCS8vIElnbm9yZSBkb3VibGUtcmVzb2x1dGlvbiBh
dHRlbXB0cwoJCQkJCQkJCQlpZiAoIGRlcHRoIDwgbWF4RGVwdGggKSB7CgkJCQkJCQkJCQlyZXR1
cm47CgkJCQkJCQkJCX0KCgkJCQkJCQkJCXJldHVybmVkID0gaGFuZGxlci5hcHBseSggdGhhdCwg
YXJncyApOwoKCQkJCQkJCQkJLy8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMQoJ
CQkJCQkJCQkvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC00OAoJCQkJCQkJCQlp
ZiAoIHJldHVybmVkID09PSBkZWZlcnJlZC5wcm9taXNlKCkgKSB7CgkJCQkJCQkJCQl0aHJvdyBu
ZXcgVHlwZUVycm9yKCAiVGhlbmFibGUgc2VsZi1yZXNvbHV0aW9uIiApOwoJCQkJCQkJCQl9CgoJ
CQkJCQkJCQkvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjUKCQkJ
CQkJCQkJLy8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNTQKCQkJCQkJCQkJLy8g
aHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNzUKCQkJCQkJCQkJLy8gUmV0cmlldmUg
YHRoZW5gIG9ubHkgb25jZQoJCQkJCQkJCQl0aGVuID0gcmV0dXJuZWQgJiYKCgkJCQkJCQkJCQkv
LyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy40CgkJCQkJCQkJCQkvLyBodHRwczov
L3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02NAoJCQkJCQkJCQkJLy8gT25seSBjaGVjayBvYmpl
Y3RzIGFuZCBmdW5jdGlvbnMgZm9yIHRoZW5hYmlsaXR5CgkJCQkJCQkJCQkoIHR5cGVvZiByZXR1
cm5lZCA9PT0gIm9iamVjdCIgfHwKCQkJCQkJCQkJCQl0eXBlb2YgcmV0dXJuZWQgPT09ICJmdW5j
dGlvbiIgKSAmJgoJCQkJCQkJCQkJcmV0dXJuZWQudGhlbjsKCgkJCQkJCQkJCS8vIEhhbmRsZSBh
IHJldHVybmVkIHRoZW5hYmxlCgkJCQkJCQkJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHRoZW4g
KSApIHsKCgkJCQkJCQkJCQkvLyBTcGVjaWFsIHByb2Nlc3NvcnMgKG5vdGlmeSkganVzdCB3YWl0
IGZvciByZXNvbHV0aW9uCgkJCQkJCQkJCQlpZiAoIHNwZWNpYWwgKSB7CgkJCQkJCQkJCQkJdGhl
bi5jYWxsKAoJCQkJCQkJCQkJCQlyZXR1cm5lZCwKCQkJCQkJCQkJCQkJcmVzb2x2ZSggbWF4RGVw
dGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLAoJCQkJCQkJCQkJCQlyZXNvbHZlKCBt
YXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKQoJCQkJCQkJCQkJCSk7CgoJCQkJ
CQkJCQkJLy8gTm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGFsc28gaG9vayBpbnRvIHByb2dy
ZXNzCgkJCQkJCQkJCQl9IGVsc2UgewoKCQkJCQkJCQkJCQkvLyAuLi5hbmQgZGlzcmVnYXJkIG9s
ZGVyIHJlc29sdXRpb24gdmFsdWVzCgkJCQkJCQkJCQkJbWF4RGVwdGgrKzsKCgkJCQkJCQkJCQkJ
dGhlbi5jYWxsKAoJCQkJCQkJCQkJCQlyZXR1cm5lZCwKCQkJCQkJCQkJCQkJcmVzb2x2ZSggbWF4
RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLAoJCQkJCQkJCQkJCQlyZXNvbHZl
KCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKSwKCQkJCQkJCQkJCQkJcmVz
b2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwKCQkJCQkJCQkJCQkJCWRlZmVycmVk
Lm5vdGlmeVdpdGggKQoJCQkJCQkJCQkJCSk7CgkJCQkJCQkJCQl9CgoJCQkJCQkJCQkvLyBIYW5k
bGUgYWxsIG90aGVyIHJldHVybmVkIHZhbHVlcwoJCQkJCQkJCQl9IGVsc2UgewoKCQkJCQkJCQkJ
CS8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHQKCQkJCQkJCQkJCS8v
IGFuZCBtdWx0aXBsZSB2YWx1ZXMgKG5vbi1zcGVjIGJlaGF2aW9yKQoJCQkJCQkJCQkJaWYgKCBo
YW5kbGVyICE9PSBJZGVudGl0eSApIHsKCQkJCQkJCQkJCQl0aGF0ID0gdW5kZWZpbmVkOwoJCQkJ
CQkJCQkJCWFyZ3MgPSBbIHJldHVybmVkIF07CgkJCQkJCQkJCQl9CgoJCQkJCQkJCQkJLy8gUHJv
Y2VzcyB0aGUgdmFsdWUocykKCQkJCQkJCQkJCS8vIERlZmF1bHQgcHJvY2VzcyBpcyByZXNvbHZl
CgkJCQkJCQkJCQkoIHNwZWNpYWwgfHwgZGVmZXJyZWQucmVzb2x2ZVdpdGggKSggdGhhdCwgYXJn
cyApOwoJCQkJCQkJCQl9CgkJCQkJCQkJfSwKCgkJCQkJCQkJLy8gT25seSBub3JtYWwgcHJvY2Vz
c29ycyAocmVzb2x2ZSkgY2F0Y2ggYW5kIHJlamVjdCBleGNlcHRpb25zCgkJCQkJCQkJcHJvY2Vz
cyA9IHNwZWNpYWwgPwoJCQkJCQkJCQltaWdodFRocm93IDoKCQkJCQkJCQkJZnVuY3Rpb24oKSB7
CgkJCQkJCQkJCQl0cnkgewoJCQkJCQkJCQkJCW1pZ2h0VGhyb3coKTsKCQkJCQkJCQkJCX0gY2F0
Y2ggKCBlICkgewoKCQkJCQkJCQkJCQlpZiAoIGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29r
ICkgewoJCQkJCQkJCQkJCQlqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayggZSwKCQkJCQkJ
CQkJCQkJCXByb2Nlc3Muc3RhY2tUcmFjZSApOwoJCQkJCQkJCQkJCX0KCgkJCQkJCQkJCQkJLy8g
U3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjQuMQoJCQkJCQkJCQkJCS8vIGh0
dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTYxCgkJCQkJCQkJCQkJLy8gSWdub3JlIHBv
c3QtcmVzb2x1dGlvbiBleGNlcHRpb25zCgkJCQkJCQkJCQkJaWYgKCBkZXB0aCArIDEgPj0gbWF4
RGVwdGggKSB7CgoJCQkJCQkJCQkJCQkvLyBPbmx5IHN1YnN0aXR1dGUgaGFuZGxlcnMgcGFzcyBv
biBjb250ZXh0CgkJCQkJCQkJCQkJCS8vIGFuZCBtdWx0aXBsZSB2YWx1ZXMgKG5vbi1zcGVjIGJl
aGF2aW9yKQoJCQkJCQkJCQkJCQlpZiAoIGhhbmRsZXIgIT09IFRocm93ZXIgKSB7CgkJCQkJCQkJ
CQkJCQl0aGF0ID0gdW5kZWZpbmVkOwoJCQkJCQkJCQkJCQkJYXJncyA9IFsgZSBdOwoJCQkJCQkJ
CQkJCQl9CgoJCQkJCQkJCQkJCQlkZWZlcnJlZC5yZWplY3RXaXRoKCB0aGF0LCBhcmdzICk7CgkJ
CQkJCQkJCQkJfQoJCQkJCQkJCQkJfQoJCQkJCQkJCQl9OwoKCQkJCQkJCS8vIFN1cHBvcnQ6IFBy
b21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4xCgkJCQkJCQkvLyBodHRwczovL3Byb21pc2VzYXBs
dXMuY29tLyNwb2ludC01NwoJCQkJCQkJLy8gUmUtcmVzb2x2ZSBwcm9taXNlcyBpbW1lZGlhdGVs
eSB0byBkb2RnZSBmYWxzZSByZWplY3Rpb24gZnJvbQoJCQkJCQkJLy8gc3Vic2VxdWVudCBlcnJv
cnMKCQkJCQkJCWlmICggZGVwdGggKSB7CgkJCQkJCQkJcHJvY2VzcygpOwoJCQkJCQkJfSBlbHNl
IHsKCgkJCQkJCQkJLy8gQ2FsbCBhbiBvcHRpb25hbCBob29rIHRvIHJlY29yZCB0aGUgc3RhY2ss
IGluIGNhc2Ugb2YgZXhjZXB0aW9uCgkJCQkJCQkJLy8gc2luY2UgaXQncyBvdGhlcndpc2UgbG9z
dCB3aGVuIGV4ZWN1dGlvbiBnb2VzIGFzeW5jCgkJCQkJCQkJaWYgKCBqUXVlcnkuRGVmZXJyZWQu
Z2V0U3RhY2tIb29rICkgewoJCQkJCQkJCQlwcm9jZXNzLnN0YWNrVHJhY2UgPSBqUXVlcnkuRGVm
ZXJyZWQuZ2V0U3RhY2tIb29rKCk7CgkJCQkJCQkJfQoJCQkJCQkJCXdpbmRvdy5zZXRUaW1lb3V0
KCBwcm9jZXNzICk7CgkJCQkJCQl9CgkJCQkJCX07CgkJCQkJfQoKCQkJCQlyZXR1cm4galF1ZXJ5
LkRlZmVycmVkKCBmdW5jdGlvbiggbmV3RGVmZXIgKSB7CgoJCQkJCQkvLyBwcm9ncmVzc19oYW5k
bGVycy5hZGQoIC4uLiApCgkJCQkJCXR1cGxlc1sgMCBdWyAzIF0uYWRkKAoJCQkJCQkJcmVzb2x2
ZSgKCQkJCQkJCQkwLAoJCQkJCQkJCW5ld0RlZmVyLAoJCQkJCQkJCWpRdWVyeS5pc0Z1bmN0aW9u
KCBvblByb2dyZXNzICkgPwoJCQkJCQkJCQlvblByb2dyZXNzIDoKCQkJCQkJCQkJSWRlbnRpdHks
CgkJCQkJCQkJbmV3RGVmZXIubm90aWZ5V2l0aAoJCQkJCQkJKQoJCQkJCQkpOwoKCQkJCQkJLy8g
ZnVsZmlsbGVkX2hhbmRsZXJzLmFkZCggLi4uICkKCQkJCQkJdHVwbGVzWyAxIF1bIDMgXS5hZGQo
CgkJCQkJCQlyZXNvbHZlKAoJCQkJCQkJCTAsCgkJCQkJCQkJbmV3RGVmZXIsCgkJCQkJCQkJalF1
ZXJ5LmlzRnVuY3Rpb24oIG9uRnVsZmlsbGVkICkgPwoJCQkJCQkJCQlvbkZ1bGZpbGxlZCA6CgkJ
CQkJCQkJCUlkZW50aXR5CgkJCQkJCQkpCgkJCQkJCSk7CgoJCQkJCQkvLyByZWplY3RlZF9oYW5k
bGVycy5hZGQoIC4uLiApCgkJCQkJCXR1cGxlc1sgMiBdWyAzIF0uYWRkKAoJCQkJCQkJcmVzb2x2
ZSgKCQkJCQkJCQkwLAoJCQkJCQkJCW5ld0RlZmVyLAoJCQkJCQkJCWpRdWVyeS5pc0Z1bmN0aW9u
KCBvblJlamVjdGVkICkgPwoJCQkJCQkJCQlvblJlamVjdGVkIDoKCQkJCQkJCQkJVGhyb3dlcgoJ
CQkJCQkJKQoJCQkJCQkpOwoJCQkJCX0gKS5wcm9taXNlKCk7CgkJCQl9LAoKCQkJCS8vIEdldCBh
IHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWQKCQkJCS8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhl
IHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3QKCQkJCXByb21pc2U6IGZ1bmN0
aW9uKCBvYmogKSB7CgkJCQkJcmV0dXJuIG9iaiAhPSBudWxsID8galF1ZXJ5LmV4dGVuZCggb2Jq
LCBwcm9taXNlICkgOiBwcm9taXNlOwoJCQkJfQoJCQl9LAoJCQlkZWZlcnJlZCA9IHt9OwoKCQkv
LyBBZGQgbGlzdC1zcGVjaWZpYyBtZXRob2RzCgkJalF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rp
b24oIGksIHR1cGxlICkgewoJCQl2YXIgbGlzdCA9IHR1cGxlWyAyIF0sCgkJCQlzdGF0ZVN0cmlu
ZyA9IHR1cGxlWyA1IF07CgoJCQkvLyBwcm9taXNlLnByb2dyZXNzID0gbGlzdC5hZGQKCQkJLy8g
cHJvbWlzZS5kb25lID0gbGlzdC5hZGQKCQkJLy8gcHJvbWlzZS5mYWlsID0gbGlzdC5hZGQKCQkJ
cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7CgoJCQkvLyBIYW5kbGUgc3RhdGUKCQkJ
aWYgKCBzdGF0ZVN0cmluZyApIHsKCQkJCWxpc3QuYWRkKAoJCQkJCWZ1bmN0aW9uKCkgewoKCQkJ
CQkJLy8gc3RhdGUgPSAicmVzb2x2ZWQiIChpLmUuLCBmdWxmaWxsZWQpCgkJCQkJCS8vIHN0YXRl
ID0gInJlamVjdGVkIgoJCQkJCQlzdGF0ZSA9IHN0YXRlU3RyaW5nOwoJCQkJCX0sCgoJCQkJCS8v
IHJlamVjdGVkX2NhbGxiYWNrcy5kaXNhYmxlCgkJCQkJLy8gZnVsZmlsbGVkX2NhbGxiYWNrcy5k
aXNhYmxlCgkJCQkJdHVwbGVzWyAzIC0gaSBdWyAyIF0uZGlzYWJsZSwKCgkJCQkJLy8gcHJvZ3Jl
c3NfY2FsbGJhY2tzLmxvY2sKCQkJCQl0dXBsZXNbIDAgXVsgMiBdLmxvY2sKCQkJCSk7CgkJCX0K
CgkJCS8vIHByb2dyZXNzX2hhbmRsZXJzLmZpcmUKCQkJLy8gZnVsZmlsbGVkX2hhbmRsZXJzLmZp
cmUKCQkJLy8gcmVqZWN0ZWRfaGFuZGxlcnMuZmlyZQoJCQlsaXN0LmFkZCggdHVwbGVbIDMgXS5m
aXJlICk7CgoJCQkvLyBkZWZlcnJlZC5ub3RpZnkgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQubm90
aWZ5V2l0aCguLi4pIH0KCQkJLy8gZGVmZXJyZWQucmVzb2x2ZSA9IGZ1bmN0aW9uKCkgeyBkZWZl
cnJlZC5yZXNvbHZlV2l0aCguLi4pIH0KCQkJLy8gZGVmZXJyZWQucmVqZWN0ID0gZnVuY3Rpb24o
KSB7IGRlZmVycmVkLnJlamVjdFdpdGgoLi4uKSB9CgkJCWRlZmVycmVkWyB0dXBsZVsgMCBdIF0g
PSBmdW5jdGlvbigpIHsKCQkJCWRlZmVycmVkWyB0dXBsZVsgMCBdICsgIldpdGgiIF0oIHRoaXMg
PT09IGRlZmVycmVkID8gdW5kZWZpbmVkIDogdGhpcywgYXJndW1lbnRzICk7CgkJCQlyZXR1cm4g
dGhpczsKCQkJfTsKCgkJCS8vIGRlZmVycmVkLm5vdGlmeVdpdGggPSBsaXN0LmZpcmVXaXRoCgkJ
CS8vIGRlZmVycmVkLnJlc29sdmVXaXRoID0gbGlzdC5maXJlV2l0aAoJCQkvLyBkZWZlcnJlZC5y
ZWplY3RXaXRoID0gbGlzdC5maXJlV2l0aAoJCQlkZWZlcnJlZFsgdHVwbGVbIDAgXSArICJXaXRo
IiBdID0gbGlzdC5maXJlV2l0aDsKCQl9ICk7CgoJCS8vIE1ha2UgdGhlIGRlZmVycmVkIGEgcHJv
bWlzZQoJCXByb21pc2UucHJvbWlzZSggZGVmZXJyZWQgKTsKCgkJLy8gQ2FsbCBnaXZlbiBmdW5j
IGlmIGFueQoJCWlmICggZnVuYyApIHsKCQkJZnVuYy5jYWxsKCBkZWZlcnJlZCwgZGVmZXJyZWQg
KTsKCQl9CgoJCS8vIEFsbCBkb25lIQoJCXJldHVybiBkZWZlcnJlZDsKCX0sCgoJLy8gRGVmZXJy
ZWQgaGVscGVyCgl3aGVuOiBmdW5jdGlvbiggc2luZ2xlVmFsdWUgKSB7CgkJdmFyCgoJCQkvLyBj
b3VudCBvZiB1bmNvbXBsZXRlZCBzdWJvcmRpbmF0ZXMKCQkJcmVtYWluaW5nID0gYXJndW1lbnRz
Lmxlbmd0aCwKCgkJCS8vIGNvdW50IG9mIHVucHJvY2Vzc2VkIGFyZ3VtZW50cwoJCQlpID0gcmVt
YWluaW5nLAoKCQkJLy8gc3Vib3JkaW5hdGUgZnVsZmlsbG1lbnQgZGF0YQoJCQlyZXNvbHZlQ29u
dGV4dHMgPSBBcnJheSggaSApLAoJCQlyZXNvbHZlVmFsdWVzID0gc2xpY2UuY2FsbCggYXJndW1l
bnRzICksCgoJCQkvLyB0aGUgbWFzdGVyIERlZmVycmVkCgkJCW1hc3RlciA9IGpRdWVyeS5EZWZl
cnJlZCgpLAoKCQkJLy8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeQoJCQl1cGRhdGVGdW5j
ID0gZnVuY3Rpb24oIGkgKSB7CgkJCQlyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkgewoJCQkJCXJl
c29sdmVDb250ZXh0c1sgaSBdID0gdGhpczsKCQkJCQlyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1
bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7CgkJCQkJ
aWYgKCAhKCAtLXJlbWFpbmluZyApICkgewoJCQkJCQltYXN0ZXIucmVzb2x2ZVdpdGgoIHJlc29s
dmVDb250ZXh0cywgcmVzb2x2ZVZhbHVlcyApOwoJCQkJCX0KCQkJCX07CgkJCX07CgoJCS8vIFNp
bmdsZS0gYW5kIGVtcHR5IGFyZ3VtZW50cyBhcmUgYWRvcHRlZCBsaWtlIFByb21pc2UucmVzb2x2
ZQoJCWlmICggcmVtYWluaW5nIDw9IDEgKSB7CgkJCWFkb3B0VmFsdWUoIHNpbmdsZVZhbHVlLCBt
YXN0ZXIuZG9uZSggdXBkYXRlRnVuYyggaSApICkucmVzb2x2ZSwgbWFzdGVyLnJlamVjdCwKCQkJ
CSFyZW1haW5pbmcgKTsKCgkJCS8vIFVzZSAudGhlbigpIHRvIHVud3JhcCBzZWNvbmRhcnkgdGhl
bmFibGVzIChjZi4gZ2gtMzAwMCkKCQkJaWYgKCBtYXN0ZXIuc3RhdGUoKSA9PT0gInBlbmRpbmci
IHx8CgkJCQlqUXVlcnkuaXNGdW5jdGlvbiggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIHJlc29sdmVW
YWx1ZXNbIGkgXS50aGVuICkgKSB7CgoJCQkJcmV0dXJuIG1hc3Rlci50aGVuKCk7CgkJCX0KCQl9
CgoJCS8vIE11bHRpcGxlIGFyZ3VtZW50cyBhcmUgYWdncmVnYXRlZCBsaWtlIFByb21pc2UuYWxs
IGFycmF5IGVsZW1lbnRzCgkJd2hpbGUgKCBpLS0gKSB7CgkJCWFkb3B0VmFsdWUoIHJlc29sdmVW
YWx1ZXNbIGkgXSwgdXBkYXRlRnVuYyggaSApLCBtYXN0ZXIucmVqZWN0ICk7CgkJfQoKCQlyZXR1
cm4gbWFzdGVyLnByb21pc2UoKTsKCX0KfSApOwoKCi8vIFRoZXNlIHVzdWFsbHkgaW5kaWNhdGUg
YSBwcm9ncmFtbWVyIG1pc3Rha2UgZHVyaW5nIGRldmVsb3BtZW50LAovLyB3YXJuIGFib3V0IHRo
ZW0gQVNBUCByYXRoZXIgdGhhbiBzd2FsbG93aW5nIHRoZW0gYnkgZGVmYXVsdC4KdmFyIHJlcnJv
ck5hbWVzID0gL14oRXZhbHxJbnRlcm5hbHxSYW5nZXxSZWZlcmVuY2V8U3ludGF4fFR5cGV8VVJJ
KUVycm9yJC87CgpqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayA9IGZ1bmN0aW9uKCBlcnJv
ciwgc3RhY2sgKSB7CgoJLy8gU3VwcG9ydDogSUUgOCAtIDkgb25seQoJLy8gQ29uc29sZSBleGlz
dHMgd2hlbiBkZXYgdG9vbHMgYXJlIG9wZW4sIHdoaWNoIGNhbiBoYXBwZW4gYXQgYW55IHRpbWUK
CWlmICggd2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUud2FybiAmJiBlcnJvciAmJiBy
ZXJyb3JOYW1lcy50ZXN0KCBlcnJvci5uYW1lICkgKSB7CgkJd2luZG93LmNvbnNvbGUud2Fybigg
ImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246ICIgKyBlcnJvci5tZXNzYWdlLCBlcnJvci5zdGFj
aywgc3RhY2sgKTsKCX0KfTsKCgoKCmpRdWVyeS5yZWFkeUV4Y2VwdGlvbiA9IGZ1bmN0aW9uKCBl
cnJvciApIHsKCXdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHsKCQl0aHJvdyBlcnJvcjsK
CX0gKTsKfTsKCgoKCi8vIFRoZSBkZWZlcnJlZCB1c2VkIG9uIERPTSByZWFkeQp2YXIgcmVhZHlM
aXN0ID0galF1ZXJ5LkRlZmVycmVkKCk7CgpqUXVlcnkuZm4ucmVhZHkgPSBmdW5jdGlvbiggZm4g
KSB7CgoJcmVhZHlMaXN0CgkJLnRoZW4oIGZuICkKCgkJLy8gV3JhcCBqUXVlcnkucmVhZHlFeGNl
cHRpb24gaW4gYSBmdW5jdGlvbiBzbyB0aGF0IHRoZSBsb29rdXAKCQkvLyBoYXBwZW5zIGF0IHRo
ZSB0aW1lIG9mIGVycm9yIGhhbmRsaW5nIGluc3RlYWQgb2YgY2FsbGJhY2sKCQkvLyByZWdpc3Ry
YXRpb24uCgkJLmNhdGNoKCBmdW5jdGlvbiggZXJyb3IgKSB7CgkJCWpRdWVyeS5yZWFkeUV4Y2Vw
dGlvbiggZXJyb3IgKTsKCQl9ICk7CgoJcmV0dXJuIHRoaXM7Cn07CgpqUXVlcnkuZXh0ZW5kKCB7
CgoJLy8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9j
Y3Vycy4KCWlzUmVhZHk6IGZhbHNlLAoKCS8vIEEgY291bnRlciB0byB0cmFjayBob3cgbWFueSBp
dGVtcyB0byB3YWl0IGZvciBiZWZvcmUKCS8vIHRoZSByZWFkeSBldmVudCBmaXJlcy4gU2VlICM2
NzgxCglyZWFkeVdhaXQ6IDEsCgoJLy8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeQoJcmVh
ZHk6IGZ1bmN0aW9uKCB3YWl0ICkgewoKCQkvLyBBYm9ydCBpZiB0aGVyZSBhcmUgcGVuZGluZyBo
b2xkcyBvciB3ZSdyZSBhbHJlYWR5IHJlYWR5CgkJaWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVl
cnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIFJl
bWVtYmVyIHRoYXQgdGhlIERPTSBpcyByZWFkeQoJCWpRdWVyeS5pc1JlYWR5ID0gdHJ1ZTsKCgkJ
Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0
IGlmIG5lZWQgYmUKCQlpZiAoIHdhaXQgIT09IHRydWUgJiYgLS1qUXVlcnkucmVhZHlXYWl0ID4g
MCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gSWYgdGhlcmUgYXJlIGZ1bmN0aW9ucyBib3VuZCwg
dG8gZXhlY3V0ZQoJCXJlYWR5TGlzdC5yZXNvbHZlV2l0aCggZG9jdW1lbnQsIFsgalF1ZXJ5IF0g
KTsKCX0KfSApOwoKalF1ZXJ5LnJlYWR5LnRoZW4gPSByZWFkeUxpc3QudGhlbjsKCi8vIFRoZSBy
ZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kCmZ1bmN0aW9uIGNvbXBs
ZXRlZCgpIHsKCWRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoICJET01Db250ZW50TG9hZGVk
IiwgY29tcGxldGVkICk7Cgl3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lciggImxvYWQiLCBjb21w
bGV0ZWQgKTsKCWpRdWVyeS5yZWFkeSgpOwp9CgovLyBDYXRjaCBjYXNlcyB3aGVyZSAkKGRvY3Vt
ZW50KS5yZWFkeSgpIGlzIGNhbGxlZAovLyBhZnRlciB0aGUgYnJvd3NlciBldmVudCBoYXMgYWxy
ZWFkeSBvY2N1cnJlZC4KLy8gU3VwcG9ydDogSUUgPD05IC0gMTAgb25seQovLyBPbGRlciBJRSBz
b21ldGltZXMgc2lnbmFscyAiaW50ZXJhY3RpdmUiIHRvbyBzb29uCmlmICggZG9jdW1lbnQucmVh
ZHlTdGF0ZSA9PT0gImNvbXBsZXRlIiB8fAoJKCBkb2N1bWVudC5yZWFkeVN0YXRlICE9PSAibG9h
ZGluZyIgJiYgIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCApICkgewoKCS8vIEhh
bmRsZSBpdCBhc3luY2hyb25vdXNseSB0byBhbGxvdyBzY3JpcHRzIHRoZSBvcHBvcnR1bml0eSB0
byBkZWxheSByZWFkeQoJd2luZG93LnNldFRpbWVvdXQoIGpRdWVyeS5yZWFkeSApOwoKfSBlbHNl
IHsKCgkvLyBVc2UgdGhlIGhhbmR5IGV2ZW50IGNhbGxiYWNrCglkb2N1bWVudC5hZGRFdmVudExp
c3RlbmVyKCAiRE9NQ29udGVudExvYWRlZCIsIGNvbXBsZXRlZCApOwoKCS8vIEEgZmFsbGJhY2sg
dG8gd2luZG93Lm9ubG9hZCwgdGhhdCB3aWxsIGFsd2F5cyB3b3JrCgl3aW5kb3cuYWRkRXZlbnRM
aXN0ZW5lciggImxvYWQiLCBjb21wbGV0ZWQgKTsKfQoKCgoKLy8gTXVsdGlmdW5jdGlvbmFsIG1l
dGhvZCB0byBnZXQgYW5kIHNldCB2YWx1ZXMgb2YgYSBjb2xsZWN0aW9uCi8vIFRoZSB2YWx1ZS9z
IGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvbgp2YXIgYWNjZXNz
ID0gZnVuY3Rpb24oIGVsZW1zLCBmbiwga2V5LCB2YWx1ZSwgY2hhaW5hYmxlLCBlbXB0eUdldCwg
cmF3ICkgewoJdmFyIGkgPSAwLAoJCWxlbiA9IGVsZW1zLmxlbmd0aCwKCQlidWxrID0ga2V5ID09
IG51bGw7CgoJLy8gU2V0cyBtYW55IHZhbHVlcwoJaWYgKCBqUXVlcnkudHlwZSgga2V5ICkgPT09
ICJvYmplY3QiICkgewoJCWNoYWluYWJsZSA9IHRydWU7CgkJZm9yICggaSBpbiBrZXkgKSB7CgkJ
CWFjY2VzcyggZWxlbXMsIGZuLCBpLCBrZXlbIGkgXSwgdHJ1ZSwgZW1wdHlHZXQsIHJhdyApOwoJ
CX0KCgkvLyBTZXRzIG9uZSB2YWx1ZQoJfSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCAp
IHsKCQljaGFpbmFibGUgPSB0cnVlOwoKCQlpZiAoICFqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUg
KSApIHsKCQkJcmF3ID0gdHJ1ZTsKCQl9CgoJCWlmICggYnVsayApIHsKCgkJCS8vIEJ1bGsgb3Bl
cmF0aW9ucyBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldAoJCQlpZiAoIHJhdyApIHsKCQkJCWZu
LmNhbGwoIGVsZW1zLCB2YWx1ZSApOwoJCQkJZm4gPSBudWxsOwoKCQkJLy8gLi4uZXhjZXB0IHdo
ZW4gZXhlY3V0aW5nIGZ1bmN0aW9uIHZhbHVlcwoJCQl9IGVsc2UgewoJCQkJYnVsayA9IGZuOwoJ
CQkJZm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHsKCQkJCQlyZXR1cm4gYnVsay5j
YWxsKCBqUXVlcnkoIGVsZW0gKSwgdmFsdWUgKTsKCQkJCX07CgkJCX0KCQl9CgoJCWlmICggZm4g
KSB7CgkJCWZvciAoIDsgaSA8IGxlbjsgaSsrICkgewoJCQkJZm4oCgkJCQkJZWxlbXNbIGkgXSwg
a2V5LCByYXcgPwoJCQkJCXZhbHVlIDoKCQkJCQl2YWx1ZS5jYWxsKCBlbGVtc1sgaSBdLCBpLCBm
biggZWxlbXNbIGkgXSwga2V5ICkgKQoJCQkJKTsKCQkJfQoJCX0KCX0KCglpZiAoIGNoYWluYWJs
ZSApIHsKCQlyZXR1cm4gZWxlbXM7Cgl9CgoJLy8gR2V0cwoJaWYgKCBidWxrICkgewoJCXJldHVy
biBmbi5jYWxsKCBlbGVtcyApOwoJfQoKCXJldHVybiBsZW4gPyBmbiggZWxlbXNbIDAgXSwga2V5
ICkgOiBlbXB0eUdldDsKfTsKdmFyIGFjY2VwdERhdGEgPSBmdW5jdGlvbiggb3duZXIgKSB7CgoJ
Ly8gQWNjZXB0cyBvbmx5OgoJLy8gIC0gTm9kZQoJLy8gICAgLSBOb2RlLkVMRU1FTlRfTk9ERQoJ
Ly8gICAgLSBOb2RlLkRPQ1VNRU5UX05PREUKCS8vICAtIE9iamVjdAoJLy8gICAgLSBBbnkKCXJl
dHVybiBvd25lci5ub2RlVHlwZSA9PT0gMSB8fCBvd25lci5ub2RlVHlwZSA9PT0gOSB8fCAhKCAr
b3duZXIubm9kZVR5cGUgKTsKfTsKCgoKCmZ1bmN0aW9uIERhdGEoKSB7Cgl0aGlzLmV4cGFuZG8g
PSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7Cn0KCkRhdGEudWlkID0gMTsKCkRhdGEucHJv
dG90eXBlID0gewoKCWNhY2hlOiBmdW5jdGlvbiggb3duZXIgKSB7CgoJCS8vIENoZWNrIGlmIHRo
ZSBvd25lciBvYmplY3QgYWxyZWFkeSBoYXMgYSBjYWNoZQoJCXZhciB2YWx1ZSA9IG93bmVyWyB0
aGlzLmV4cGFuZG8gXTsKCgkJLy8gSWYgbm90LCBjcmVhdGUgb25lCgkJaWYgKCAhdmFsdWUgKSB7
CgkJCXZhbHVlID0ge307CgoJCQkvLyBXZSBjYW4gYWNjZXB0IGRhdGEgZm9yIG5vbi1lbGVtZW50
IG5vZGVzIGluIG1vZGVybiBicm93c2VycywKCQkJLy8gYnV0IHdlIHNob3VsZCBub3QsIHNlZSAj
ODMzNS4KCQkJLy8gQWx3YXlzIHJldHVybiBhbiBlbXB0eSBvYmplY3QuCgkJCWlmICggYWNjZXB0
RGF0YSggb3duZXIgKSApIHsKCgkJCQkvLyBJZiBpdCBpcyBhIG5vZGUgdW5saWtlbHkgdG8gYmUg
c3RyaW5naWZ5LWVkIG9yIGxvb3BlZCBvdmVyCgkJCQkvLyB1c2UgcGxhaW4gYXNzaWdubWVudAoJ
CQkJaWYgKCBvd25lci5ub2RlVHlwZSApIHsKCQkJCQlvd25lclsgdGhpcy5leHBhbmRvIF0gPSB2
YWx1ZTsKCgkJCQkvLyBPdGhlcndpc2Ugc2VjdXJlIGl0IGluIGEgbm9uLWVudW1lcmFibGUgcHJv
cGVydHkKCQkJCS8vIGNvbmZpZ3VyYWJsZSBtdXN0IGJlIHRydWUgdG8gYWxsb3cgdGhlIHByb3Bl
cnR5IHRvIGJlCgkJCQkvLyBkZWxldGVkIHdoZW4gZGF0YSBpcyByZW1vdmVkCgkJCQl9IGVsc2Ug
ewoJCQkJCU9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb3duZXIsIHRoaXMuZXhwYW5kbywgewoJCQkJ
CQl2YWx1ZTogdmFsdWUsCgkJCQkJCWNvbmZpZ3VyYWJsZTogdHJ1ZQoJCQkJCX0gKTsKCQkJCX0K
CQkJfQoJCX0KCgkJcmV0dXJuIHZhbHVlOwoJfSwKCXNldDogZnVuY3Rpb24oIG93bmVyLCBkYXRh
LCB2YWx1ZSApIHsKCQl2YXIgcHJvcCwKCQkJY2FjaGUgPSB0aGlzLmNhY2hlKCBvd25lciApOwoK
CQkvLyBIYW5kbGU6IFsgb3duZXIsIGtleSwgdmFsdWUgXSBhcmdzCgkJLy8gQWx3YXlzIHVzZSBj
YW1lbENhc2Uga2V5IChnaC0yMjU3KQoJCWlmICggdHlwZW9mIGRhdGEgPT09ICJzdHJpbmciICkg
ewoJCQljYWNoZVsgalF1ZXJ5LmNhbWVsQ2FzZSggZGF0YSApIF0gPSB2YWx1ZTsKCgkJLy8gSGFu
ZGxlOiBbIG93bmVyLCB7IHByb3BlcnRpZXMgfSBdIGFyZ3MKCQl9IGVsc2UgewoKCQkJLy8gQ29w
eSB0aGUgcHJvcGVydGllcyBvbmUtYnktb25lIHRvIHRoZSBjYWNoZSBvYmplY3QKCQkJZm9yICgg
cHJvcCBpbiBkYXRhICkgewoJCQkJY2FjaGVbIGpRdWVyeS5jYW1lbENhc2UoIHByb3AgKSBdID0g
ZGF0YVsgcHJvcCBdOwoJCQl9CgkJfQoJCXJldHVybiBjYWNoZTsKCX0sCglnZXQ6IGZ1bmN0aW9u
KCBvd25lciwga2V5ICkgewoJCXJldHVybiBrZXkgPT09IHVuZGVmaW5lZCA/CgkJCXRoaXMuY2Fj
aGUoIG93bmVyICkgOgoKCQkJLy8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KQoJ
CQlvd25lclsgdGhpcy5leHBhbmRvIF0gJiYgb3duZXJbIHRoaXMuZXhwYW5kbyBdWyBqUXVlcnku
Y2FtZWxDYXNlKCBrZXkgKSBdOwoJfSwKCWFjY2VzczogZnVuY3Rpb24oIG93bmVyLCBrZXksIHZh
bHVlICkgewoKCQkvLyBJbiBjYXNlcyB3aGVyZSBlaXRoZXI6CgkJLy8KCQkvLyAgIDEuIE5vIGtl
eSB3YXMgc3BlY2lmaWVkCgkJLy8gICAyLiBBIHN0cmluZyBrZXkgd2FzIHNwZWNpZmllZCwgYnV0
IG5vIHZhbHVlIHByb3ZpZGVkCgkJLy8KCQkvLyBUYWtlIHRoZSAicmVhZCIgcGF0aCBhbmQgYWxs
b3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lCgkJLy8gd2hpY2ggdmFsdWUgdG8gcmV0dXJu
LCByZXNwZWN0aXZlbHkgZWl0aGVyOgoJCS8vCgkJLy8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9i
amVjdAoJCS8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXkKCQkvLwoJCWlmICgga2V5
ID09PSB1bmRlZmluZWQgfHwKCQkJCSggKCBrZXkgJiYgdHlwZW9mIGtleSA9PT0gInN0cmluZyIg
KSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkgKSB7CgoJCQlyZXR1cm4gdGhpcy5nZXQoIG93bmVy
LCBrZXkgKTsKCQl9CgoJCS8vIFdoZW4gdGhlIGtleSBpcyBub3QgYSBzdHJpbmcsIG9yIGJvdGgg
YSBrZXkgYW5kIHZhbHVlCgkJLy8gYXJlIHNwZWNpZmllZCwgc2V0IG9yIGV4dGVuZCAoZXhpc3Rp
bmcgb2JqZWN0cykgd2l0aCBlaXRoZXI6CgkJLy8KCQkvLyAgIDEuIEFuIG9iamVjdCBvZiBwcm9w
ZXJ0aWVzCgkJLy8gICAyLiBBIGtleSBhbmQgdmFsdWUKCQkvLwoJCXRoaXMuc2V0KCBvd25lciwg
a2V5LCB2YWx1ZSApOwoKCQkvLyBTaW5jZSB0aGUgInNldCIgcGF0aCBjYW4gaGF2ZSB0d28gcG9z
c2libGUgZW50cnkgcG9pbnRzCgkJLy8gcmV0dXJuIHRoZSBleHBlY3RlZCBkYXRhIGJhc2VkIG9u
IHdoaWNoIHBhdGggd2FzIHRha2VuWypdCgkJcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgPyB2
YWx1ZSA6IGtleTsKCX0sCglyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkgewoJCXZhciBp
LAoJCQljYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTsKCgkJaWYgKCBjYWNoZSA9PT0gdW5k
ZWZpbmVkICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIGtleSAhPT0gdW5kZWZpbmVkICkgewoK
CQkJLy8gU3VwcG9ydCBhcnJheSBvciBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIGtleXMKCQkJ
aWYgKCBBcnJheS5pc0FycmF5KCBrZXkgKSApIHsKCgkJCQkvLyBJZiBrZXkgaXMgYW4gYXJyYXkg
b2Yga2V5cy4uLgoJCQkJLy8gV2UgYWx3YXlzIHNldCBjYW1lbENhc2Uga2V5cywgc28gcmVtb3Zl
IHRoYXQuCgkJCQlrZXkgPSBrZXkubWFwKCBqUXVlcnkuY2FtZWxDYXNlICk7CgkJCX0gZWxzZSB7
CgkJCQlrZXkgPSBqUXVlcnkuY2FtZWxDYXNlKCBrZXkgKTsKCgkJCQkvLyBJZiBhIGtleSB3aXRo
IHRoZSBzcGFjZXMgZXhpc3RzLCB1c2UgaXQuCgkJCQkvLyBPdGhlcndpc2UsIGNyZWF0ZSBhbiBh
cnJheSBieSBtYXRjaGluZyBub24td2hpdGVzcGFjZQoJCQkJa2V5ID0ga2V5IGluIGNhY2hlID8K
CQkJCQlbIGtleSBdIDoKCQkJCQkoIGtleS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdICk7
CgkJCX0KCgkJCWkgPSBrZXkubGVuZ3RoOwoKCQkJd2hpbGUgKCBpLS0gKSB7CgkJCQlkZWxldGUg
Y2FjaGVbIGtleVsgaSBdIF07CgkJCX0KCQl9CgoJCS8vIFJlbW92ZSB0aGUgZXhwYW5kbyBpZiB0
aGVyZSdzIG5vIG1vcmUgZGF0YQoJCWlmICgga2V5ID09PSB1bmRlZmluZWQgfHwgalF1ZXJ5Lmlz
RW1wdHlPYmplY3QoIGNhY2hlICkgKSB7CgoJCQkvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1
CgkJCS8vIFdlYmtpdCAmIEJsaW5rIHBlcmZvcm1hbmNlIHN1ZmZlcnMgd2hlbiBkZWxldGluZyBw
cm9wZXJ0aWVzCgkJCS8vIGZyb20gRE9NIG5vZGVzLCBzbyBzZXQgdG8gdW5kZWZpbmVkIGluc3Rl
YWQKCQkJLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRh
aWw/aWQ9Mzc4NjA3IChidWcgcmVzdHJpY3RlZCkKCQkJaWYgKCBvd25lci5ub2RlVHlwZSApIHsK
CQkJCW93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDsKCQkJfSBlbHNlIHsKCQkJCWRl
bGV0ZSBvd25lclsgdGhpcy5leHBhbmRvIF07CgkJCX0KCQl9Cgl9LAoJaGFzRGF0YTogZnVuY3Rp
b24oIG93bmVyICkgewoJCXZhciBjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTsKCQlyZXR1
cm4gY2FjaGUgIT09IHVuZGVmaW5lZCAmJiAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICk7
Cgl9Cn07CnZhciBkYXRhUHJpdiA9IG5ldyBEYXRhKCk7Cgp2YXIgZGF0YVVzZXIgPSBuZXcgRGF0
YSgpOwoKCgovLwlJbXBsZW1lbnRhdGlvbiBTdW1tYXJ5Ci8vCi8vCTEuIEVuZm9yY2UgQVBJIHN1
cmZhY2UgYW5kIHNlbWFudGljIGNvbXBhdGliaWxpdHkgd2l0aCAxLjkueCBicmFuY2gKLy8JMi4g
SW1wcm92ZSB0aGUgbW9kdWxlJ3MgbWFpbnRhaW5hYmlsaXR5IGJ5IHJlZHVjaW5nIHRoZSBzdG9y
YWdlCi8vCQlwYXRocyB0byBhIHNpbmdsZSBtZWNoYW5pc20uCi8vCTMuIFVzZSB0aGUgc2FtZSBz
aW5nbGUgbWVjaGFuaXNtIHRvIHN1cHBvcnQgInByaXZhdGUiIGFuZCAidXNlciIgZGF0YS4KLy8J
NC4gX05ldmVyXyBleHBvc2UgInByaXZhdGUiIGRhdGEgdG8gdXNlciBjb2RlIChUT0RPOiBEcm9w
IF9kYXRhLCBfcmVtb3ZlRGF0YSkKLy8JNS4gQXZvaWQgZXhwb3NpbmcgaW1wbGVtZW50YXRpb24g
ZGV0YWlscyBvbiB1c2VyIG9iamVjdHMgKGVnLiBleHBhbmRvIHByb3BlcnRpZXMpCi8vCTYuIFBy
b3ZpZGUgYSBjbGVhciBwYXRoIGZvciBpbXBsZW1lbnRhdGlvbiB1cGdyYWRlIHRvIFdlYWtNYXAg
aW4gMjAxNAoKdmFyIHJicmFjZSA9IC9eKD86XHtbXHdcV10qXH18XFtbXHdcV10qXF0pJC8sCgly
bXVsdGlEYXNoID0gL1tBLVpdL2c7CgpmdW5jdGlvbiBnZXREYXRhKCBkYXRhICkgewoJaWYgKCBk
YXRhID09PSAidHJ1ZSIgKSB7CgkJcmV0dXJuIHRydWU7Cgl9CgoJaWYgKCBkYXRhID09PSAiZmFs
c2UiICkgewoJCXJldHVybiBmYWxzZTsKCX0KCglpZiAoIGRhdGEgPT09ICJudWxsIiApIHsKCQly
ZXR1cm4gbnVsbDsKCX0KCgkvLyBPbmx5IGNvbnZlcnQgdG8gYSBudW1iZXIgaWYgaXQgZG9lc24n
dCBjaGFuZ2UgdGhlIHN0cmluZwoJaWYgKCBkYXRhID09PSArZGF0YSArICIiICkgewoJCXJldHVy
biArZGF0YTsKCX0KCglpZiAoIHJicmFjZS50ZXN0KCBkYXRhICkgKSB7CgkJcmV0dXJuIEpTT04u
cGFyc2UoIGRhdGEgKTsKCX0KCglyZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gZGF0YUF0dHIoIGVs
ZW0sIGtleSwgZGF0YSApIHsKCXZhciBuYW1lOwoKCS8vIElmIG5vdGhpbmcgd2FzIGZvdW5kIGlu
dGVybmFsbHksIHRyeSB0byBmZXRjaCBhbnkKCS8vIGRhdGEgZnJvbSB0aGUgSFRNTDUgZGF0YS0q
IGF0dHJpYnV0ZQoJaWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0g
MSApIHsKCQluYW1lID0gImRhdGEtIiArIGtleS5yZXBsYWNlKCBybXVsdGlEYXNoLCAiLSQmIiAp
LnRvTG93ZXJDYXNlKCk7CgkJZGF0YSA9IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7CgoJCWlm
ICggdHlwZW9mIGRhdGEgPT09ICJzdHJpbmciICkgewoJCQl0cnkgewoJCQkJZGF0YSA9IGdldERh
dGEoIGRhdGEgKTsKCQkJfSBjYXRjaCAoIGUgKSB7fQoKCQkJLy8gTWFrZSBzdXJlIHdlIHNldCB0
aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyCgkJCWRhdGFVc2VyLnNldCggZWxlbSwg
a2V5LCBkYXRhICk7CgkJfSBlbHNlIHsKCQkJZGF0YSA9IHVuZGVmaW5lZDsKCQl9Cgl9CglyZXR1
cm4gZGF0YTsKfQoKalF1ZXJ5LmV4dGVuZCggewoJaGFzRGF0YTogZnVuY3Rpb24oIGVsZW0gKSB7
CgkJcmV0dXJuIGRhdGFVc2VyLmhhc0RhdGEoIGVsZW0gKSB8fCBkYXRhUHJpdi5oYXNEYXRhKCBl
bGVtICk7Cgl9LAoKCWRhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkgewoJCXJldHVy
biBkYXRhVXNlci5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTsKCX0sCgoJcmVtb3ZlRGF0YTog
ZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7CgkJZGF0YVVzZXIucmVtb3ZlKCBlbGVtLCBuYW1lICk7
Cgl9LAoKCS8vIFRPRE86IE5vdyB0aGF0IGFsbCBjYWxscyB0byBfZGF0YSBhbmQgX3JlbW92ZURh
dGEgaGF2ZSBiZWVuIHJlcGxhY2VkCgkvLyB3aXRoIGRpcmVjdCBjYWxscyB0byBkYXRhUHJpdiBt
ZXRob2RzLCB0aGVzZSBjYW4gYmUgZGVwcmVjYXRlZC4KCV9kYXRhOiBmdW5jdGlvbiggZWxlbSwg
bmFtZSwgZGF0YSApIHsKCQlyZXR1cm4gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRh
ICk7Cgl9LAoKCV9yZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHsKCQlkYXRhUHJp
di5yZW1vdmUoIGVsZW0sIG5hbWUgKTsKCX0KfSApOwoKalF1ZXJ5LmZuLmV4dGVuZCggewoJZGF0
YTogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJdmFyIGksIG5hbWUsIGRhdGEsCgkJCWVsZW0g
PSB0aGlzWyAwIF0sCgkJCWF0dHJzID0gZWxlbSAmJiBlbGVtLmF0dHJpYnV0ZXM7CgoJCS8vIEdl
dHMgYWxsIHZhbHVlcwoJCWlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7CgkJCWlmICggdGhpcy5s
ZW5ndGggKSB7CgkJCQlkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtICk7CgoJCQkJaWYgKCBlbGVt
Lm5vZGVUeXBlID09PSAxICYmICFkYXRhUHJpdi5nZXQoIGVsZW0sICJoYXNEYXRhQXR0cnMiICkg
KSB7CgkJCQkJaSA9IGF0dHJzLmxlbmd0aDsKCQkJCQl3aGlsZSAoIGktLSApIHsKCgkJCQkJCS8v
IFN1cHBvcnQ6IElFIDExIG9ubHkKCQkJCQkJLy8gVGhlIGF0dHJzIGVsZW1lbnRzIGNhbiBiZSBu
dWxsICgjMTQ4OTQpCgkJCQkJCWlmICggYXR0cnNbIGkgXSApIHsKCQkJCQkJCW5hbWUgPSBhdHRy
c1sgaSBdLm5hbWU7CgkJCQkJCQlpZiAoIG5hbWUuaW5kZXhPZiggImRhdGEtIiApID09PSAwICkg
ewoJCQkJCQkJCW5hbWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lLnNsaWNlKCA1ICkgKTsKCQkJ
CQkJCQlkYXRhQXR0ciggZWxlbSwgbmFtZSwgZGF0YVsgbmFtZSBdICk7CgkJCQkJCQl9CgkJCQkJ
CX0KCQkJCQl9CgkJCQkJZGF0YVByaXYuc2V0KCBlbGVtLCAiaGFzRGF0YUF0dHJzIiwgdHJ1ZSAp
OwoJCQkJfQoJCQl9CgoJCQlyZXR1cm4gZGF0YTsKCQl9CgoJCS8vIFNldHMgbXVsdGlwbGUgdmFs
dWVzCgkJaWYgKCB0eXBlb2Yga2V5ID09PSAib2JqZWN0IiApIHsKCQkJcmV0dXJuIHRoaXMuZWFj
aCggZnVuY3Rpb24oKSB7CgkJCQlkYXRhVXNlci5zZXQoIHRoaXMsIGtleSApOwoJCQl9ICk7CgkJ
fQoKCQlyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7CgkJCXZhciBkYXRh
OwoKCQkJLy8gVGhlIGNhbGxpbmcgalF1ZXJ5IG9iamVjdCAoZWxlbWVudCBtYXRjaGVzKSBpcyBu
b3QgZW1wdHkKCQkJLy8gKGFuZCB0aGVyZWZvcmUgaGFzIGFuIGVsZW1lbnQgYXBwZWFycyBhdCB0
aGlzWyAwIF0pIGFuZCB0aGUKCQkJLy8gYHZhbHVlYCBwYXJhbWV0ZXIgd2FzIG5vdCB1bmRlZmlu
ZWQuIEFuIGVtcHR5IGpRdWVyeSBvYmplY3QKCQkJLy8gd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5l
ZGAgZm9yIGVsZW0gPSB0aGlzWyAwIF0gd2hpY2ggd2lsbAoJCQkvLyB0aHJvdyBhbiBleGNlcHRp
b24gaWYgYW4gYXR0ZW1wdCB0byByZWFkIGEgZGF0YSBjYWNoZSBpcyBtYWRlLgoJCQlpZiAoIGVs
ZW0gJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApIHsKCgkJCQkvLyBBdHRlbXB0IHRvIGdldCBkYXRh
IGZyb20gdGhlIGNhY2hlCgkJCQkvLyBUaGUga2V5IHdpbGwgYWx3YXlzIGJlIGNhbWVsQ2FzZWQg
aW4gRGF0YQoJCQkJZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSwga2V5ICk7CgkJCQlpZiAoIGRh
dGEgIT09IHVuZGVmaW5lZCApIHsKCQkJCQlyZXR1cm4gZGF0YTsKCQkJCX0KCgkJCQkvLyBBdHRl
bXB0IHRvICJkaXNjb3ZlciIgdGhlIGRhdGEgaW4KCQkJCS8vIEhUTUw1IGN1c3RvbSBkYXRhLSog
YXR0cnMKCQkJCWRhdGEgPSBkYXRhQXR0ciggZWxlbSwga2V5ICk7CgkJCQlpZiAoIGRhdGEgIT09
IHVuZGVmaW5lZCApIHsKCQkJCQlyZXR1cm4gZGF0YTsKCQkJCX0KCgkJCQkvLyBXZSB0cmllZCBy
ZWFsbHkgaGFyZCwgYnV0IHRoZSBkYXRhIGRvZXNuJ3QgZXhpc3QuCgkJCQlyZXR1cm47CgkJCX0K
CgkJCS8vIFNldCB0aGUgZGF0YS4uLgoJCQl0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoKCQkJCS8v
IFdlIGFsd2F5cyBzdG9yZSB0aGUgY2FtZWxDYXNlZCBrZXkKCQkJCWRhdGFVc2VyLnNldCggdGhp
cywga2V5LCB2YWx1ZSApOwoJCQl9ICk7CgkJfSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5n
dGggPiAxLCBudWxsLCB0cnVlICk7Cgl9LAoKCXJlbW92ZURhdGE6IGZ1bmN0aW9uKCBrZXkgKSB7
CgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWRhdGFVc2VyLnJlbW92ZSggdGhp
cywga2V5ICk7CgkJfSApOwoJfQp9ICk7CgoKalF1ZXJ5LmV4dGVuZCggewoJcXVldWU6IGZ1bmN0
aW9uKCBlbGVtLCB0eXBlLCBkYXRhICkgewoJCXZhciBxdWV1ZTsKCgkJaWYgKCBlbGVtICkgewoJ
CQl0eXBlID0gKCB0eXBlIHx8ICJmeCIgKSArICJxdWV1ZSI7CgkJCXF1ZXVlID0gZGF0YVByaXYu
Z2V0KCBlbGVtLCB0eXBlICk7CgoJCQkvLyBTcGVlZCB1cCBkZXF1ZXVlIGJ5IGdldHRpbmcgb3V0
IHF1aWNrbHkgaWYgdGhpcyBpcyBqdXN0IGEgbG9va3VwCgkJCWlmICggZGF0YSApIHsKCQkJCWlm
ICggIXF1ZXVlIHx8IEFycmF5LmlzQXJyYXkoIGRhdGEgKSApIHsKCQkJCQlxdWV1ZSA9IGRhdGFQ
cml2LmFjY2VzcyggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VBcnJheSggZGF0YSApICk7CgkJCQl9
IGVsc2UgewoJCQkJCXF1ZXVlLnB1c2goIGRhdGEgKTsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gcXVl
dWUgfHwgW107CgkJfQoJfSwKCglkZXF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHsKCQl0
eXBlID0gdHlwZSB8fCAiZngiOwoKCQl2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIGVsZW0sIHR5
cGUgKSwKCQkJc3RhcnRMZW5ndGggPSBxdWV1ZS5sZW5ndGgsCgkJCWZuID0gcXVldWUuc2hpZnQo
KSwKCQkJaG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIHR5cGUgKSwKCQkJbmV4dCA9
IGZ1bmN0aW9uKCkgewoJCQkJalF1ZXJ5LmRlcXVldWUoIGVsZW0sIHR5cGUgKTsKCQkJfTsKCgkJ
Ly8gSWYgdGhlIGZ4IHF1ZXVlIGlzIGRlcXVldWVkLCBhbHdheXMgcmVtb3ZlIHRoZSBwcm9ncmVz
cyBzZW50aW5lbAoJCWlmICggZm4gPT09ICJpbnByb2dyZXNzIiApIHsKCQkJZm4gPSBxdWV1ZS5z
aGlmdCgpOwoJCQlzdGFydExlbmd0aC0tOwoJCX0KCgkJaWYgKCBmbiApIHsKCgkJCS8vIEFkZCBh
IHByb2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVpbmcKCQkJ
Ly8gYXV0b21hdGljYWxseSBkZXF1ZXVlZAoJCQlpZiAoIHR5cGUgPT09ICJmeCIgKSB7CgkJCQlx
dWV1ZS51bnNoaWZ0KCAiaW5wcm9ncmVzcyIgKTsKCQkJfQoKCQkJLy8gQ2xlYXIgdXAgdGhlIGxh
c3QgcXVldWUgc3RvcCBmdW5jdGlvbgoJCQlkZWxldGUgaG9va3Muc3RvcDsKCQkJZm4uY2FsbCgg
ZWxlbSwgbmV4dCwgaG9va3MgKTsKCQl9CgoJCWlmICggIXN0YXJ0TGVuZ3RoICYmIGhvb2tzICkg
ewoJCQlob29rcy5lbXB0eS5maXJlKCk7CgkJfQoJfSwKCgkvLyBOb3QgcHVibGljIC0gZ2VuZXJh
dGUgYSBxdWV1ZUhvb2tzIG9iamVjdCwgb3IgcmV0dXJuIHRoZSBjdXJyZW50IG9uZQoJX3F1ZXVl
SG9va3M6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkgewoJCXZhciBrZXkgPSB0eXBlICsgInF1ZXVl
SG9va3MiOwoJCXJldHVybiBkYXRhUHJpdi5nZXQoIGVsZW0sIGtleSApIHx8IGRhdGFQcml2LmFj
Y2VzcyggZWxlbSwga2V5LCB7CgkJCWVtcHR5OiBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1v
cnkiICkuYWRkKCBmdW5jdGlvbigpIHsKCQkJCWRhdGFQcml2LnJlbW92ZSggZWxlbSwgWyB0eXBl
ICsgInF1ZXVlIiwga2V5IF0gKTsKCQkJfSApCgkJfSApOwoJfQp9ICk7CgpqUXVlcnkuZm4uZXh0
ZW5kKCB7CglxdWV1ZTogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7CgkJdmFyIHNldHRlciA9IDI7
CgoJCWlmICggdHlwZW9mIHR5cGUgIT09ICJzdHJpbmciICkgewoJCQlkYXRhID0gdHlwZTsKCQkJ
dHlwZSA9ICJmeCI7CgkJCXNldHRlci0tOwoJCX0KCgkJaWYgKCBhcmd1bWVudHMubGVuZ3RoIDwg
c2V0dGVyICkgewoJCQlyZXR1cm4galF1ZXJ5LnF1ZXVlKCB0aGlzWyAwIF0sIHR5cGUgKTsKCQl9
CgoJCXJldHVybiBkYXRhID09PSB1bmRlZmluZWQgPwoJCQl0aGlzIDoKCQkJdGhpcy5lYWNoKCBm
dW5jdGlvbigpIHsKCQkJCXZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgZGF0
YSApOwoKCQkJCS8vIEVuc3VyZSBhIGhvb2tzIGZvciB0aGlzIHF1ZXVlCgkJCQlqUXVlcnkuX3F1
ZXVlSG9va3MoIHRoaXMsIHR5cGUgKTsKCgkJCQlpZiAoIHR5cGUgPT09ICJmeCIgJiYgcXVldWVb
IDAgXSAhPT0gImlucHJvZ3Jlc3MiICkgewoJCQkJCWpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBl
ICk7CgkJCQl9CgkJCX0gKTsKCX0sCglkZXF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHsKCQlyZXR1
cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJalF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUg
KTsKCQl9ICk7Cgl9LAoJY2xlYXJRdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7CgkJcmV0dXJuIHRo
aXMucXVldWUoIHR5cGUgfHwgImZ4IiwgW10gKTsKCX0sCgoJLy8gR2V0IGEgcHJvbWlzZSByZXNv
bHZlZCB3aGVuIHF1ZXVlcyBvZiBhIGNlcnRhaW4gdHlwZQoJLy8gYXJlIGVtcHRpZWQgKGZ4IGlz
IHRoZSB0eXBlIGJ5IGRlZmF1bHQpCglwcm9taXNlOiBmdW5jdGlvbiggdHlwZSwgb2JqICkgewoJ
CXZhciB0bXAsCgkJCWNvdW50ID0gMSwKCQkJZGVmZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSwKCQkJ
ZWxlbWVudHMgPSB0aGlzLAoJCQlpID0gdGhpcy5sZW5ndGgsCgkJCXJlc29sdmUgPSBmdW5jdGlv
bigpIHsKCQkJCWlmICggISggLS1jb3VudCApICkgewoJCQkJCWRlZmVyLnJlc29sdmVXaXRoKCBl
bGVtZW50cywgWyBlbGVtZW50cyBdICk7CgkJCQl9CgkJCX07CgoJCWlmICggdHlwZW9mIHR5cGUg
IT09ICJzdHJpbmciICkgewoJCQlvYmogPSB0eXBlOwoJCQl0eXBlID0gdW5kZWZpbmVkOwoJCX0K
CQl0eXBlID0gdHlwZSB8fCAiZngiOwoKCQl3aGlsZSAoIGktLSApIHsKCQkJdG1wID0gZGF0YVBy
aXYuZ2V0KCBlbGVtZW50c1sgaSBdLCB0eXBlICsgInF1ZXVlSG9va3MiICk7CgkJCWlmICggdG1w
ICYmIHRtcC5lbXB0eSApIHsKCQkJCWNvdW50Kys7CgkJCQl0bXAuZW1wdHkuYWRkKCByZXNvbHZl
ICk7CgkJCX0KCQl9CgkJcmVzb2x2ZSgpOwoJCXJldHVybiBkZWZlci5wcm9taXNlKCBvYmogKTsK
CX0KfSApOwp2YXIgcG51bSA9ICggL1srLV0/KD86XGQqXC58KVxkKyg/OltlRV1bKy1dP1xkK3wp
LyApLnNvdXJjZTsKCnZhciByY3NzTnVtID0gbmV3IFJlZ0V4cCggIl4oPzooWystXSk9fCkoIiAr
IHBudW0gKyAiKShbYS16JV0qKSQiLCAiaSIgKTsKCgp2YXIgY3NzRXhwYW5kID0gWyAiVG9wIiwg
IlJpZ2h0IiwgIkJvdHRvbSIsICJMZWZ0IiBdOwoKdmFyIGlzSGlkZGVuV2l0aGluVHJlZSA9IGZ1
bmN0aW9uKCBlbGVtLCBlbCApIHsKCgkJLy8gaXNIaWRkZW5XaXRoaW5UcmVlIG1pZ2h0IGJlIGNh
bGxlZCBmcm9tIGpRdWVyeSNmaWx0ZXIgZnVuY3Rpb247CgkJLy8gaW4gdGhhdCBjYXNlLCBlbGVt
ZW50IHdpbGwgYmUgc2Vjb25kIGFyZ3VtZW50CgkJZWxlbSA9IGVsIHx8IGVsZW07CgoJCS8vIElu
bGluZSBzdHlsZSB0cnVtcHMgYWxsCgkJcmV0dXJuIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gIm5v
bmUiIHx8CgkJCWVsZW0uc3R5bGUuZGlzcGxheSA9PT0gIiIgJiYKCgkJCS8vIE90aGVyd2lzZSwg
Y2hlY2sgY29tcHV0ZWQgc3R5bGUKCQkJLy8gU3VwcG9ydDogRmlyZWZveCA8PTQzIC0gNDUKCQkJ
Ly8gRGlzY29ubmVjdGVkIGVsZW1lbnRzIGNhbiBoYXZlIGNvbXB1dGVkIGRpc3BsYXk6IG5vbmUs
IHNvIGZpcnN0IGNvbmZpcm0gdGhhdCBlbGVtIGlzCgkJCS8vIGluIHRoZSBkb2N1bWVudC4KCQkJ
alF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSAmJgoKCQkJalF1ZXJ5
LmNzcyggZWxlbSwgImRpc3BsYXkiICkgPT09ICJub25lIjsKCX07Cgp2YXIgc3dhcCA9IGZ1bmN0
aW9uKCBlbGVtLCBvcHRpb25zLCBjYWxsYmFjaywgYXJncyApIHsKCXZhciByZXQsIG5hbWUsCgkJ
b2xkID0ge307CgoJLy8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5l
dyBvbmVzCglmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7CgkJb2xkWyBuYW1lIF0gPSBlbGVtLnN0
eWxlWyBuYW1lIF07CgkJZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdOwoJfQoK
CXJldCA9IGNhbGxiYWNrLmFwcGx5KCBlbGVtLCBhcmdzIHx8IFtdICk7CgoJLy8gUmV2ZXJ0IHRo
ZSBvbGQgdmFsdWVzCglmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7CgkJZWxlbS5zdHlsZVsgbmFt
ZSBdID0gb2xkWyBuYW1lIF07Cgl9CgoJcmV0dXJuIHJldDsKfTsKCgoKCmZ1bmN0aW9uIGFkanVz
dENTUyggZWxlbSwgcHJvcCwgdmFsdWVQYXJ0cywgdHdlZW4gKSB7Cgl2YXIgYWRqdXN0ZWQsCgkJ
c2NhbGUgPSAxLAoJCW1heEl0ZXJhdGlvbnMgPSAyMCwKCQljdXJyZW50VmFsdWUgPSB0d2VlbiA/
CgkJCWZ1bmN0aW9uKCkgewoJCQkJcmV0dXJuIHR3ZWVuLmN1cigpOwoJCQl9IDoKCQkJZnVuY3Rp
b24oKSB7CgkJCQlyZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgcHJvcCwgIiIgKTsKCQkJfSwKCQlp
bml0aWFsID0gY3VycmVudFZhbHVlKCksCgkJdW5pdCA9IHZhbHVlUGFydHMgJiYgdmFsdWVQYXJ0
c1sgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gIiIgOiAicHgiICksCgoJCS8v
IFN0YXJ0aW5nIHZhbHVlIGNvbXB1dGF0aW9uIGlzIHJlcXVpcmVkIGZvciBwb3RlbnRpYWwgdW5p
dCBtaXNtYXRjaGVzCgkJaW5pdGlhbEluVW5pdCA9ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBd
IHx8IHVuaXQgIT09ICJweCIgJiYgK2luaXRpYWwgKSAmJgoJCQlyY3NzTnVtLmV4ZWMoIGpRdWVy
eS5jc3MoIGVsZW0sIHByb3AgKSApOwoKCWlmICggaW5pdGlhbEluVW5pdCAmJiBpbml0aWFsSW5V
bml0WyAzIF0gIT09IHVuaXQgKSB7CgoJCS8vIFRydXN0IHVuaXRzIHJlcG9ydGVkIGJ5IGpRdWVy
eS5jc3MKCQl1bml0ID0gdW5pdCB8fCBpbml0aWFsSW5Vbml0WyAzIF07CgoJCS8vIE1ha2Ugc3Vy
ZSB3ZSB1cGRhdGUgdGhlIHR3ZWVuIHByb3BlcnRpZXMgbGF0ZXIgb24KCQl2YWx1ZVBhcnRzID0g
dmFsdWVQYXJ0cyB8fCBbXTsKCgkJLy8gSXRlcmF0aXZlbHkgYXBwcm94aW1hdGUgZnJvbSBhIG5v
bnplcm8gc3RhcnRpbmcgcG9pbnQKCQlpbml0aWFsSW5Vbml0ID0gK2luaXRpYWwgfHwgMTsKCgkJ
ZG8gewoKCQkJLy8gSWYgcHJldmlvdXMgaXRlcmF0aW9uIHplcm9lZCBvdXQsIGRvdWJsZSB1bnRp
bCB3ZSBnZXQgKnNvbWV0aGluZyouCgkJCS8vIFVzZSBzdHJpbmcgZm9yIGRvdWJsaW5nIHNvIHdl
IGRvbid0IGFjY2lkZW50YWxseSBzZWUgc2NhbGUgYXMgdW5jaGFuZ2VkIGJlbG93CgkJCXNjYWxl
ID0gc2NhbGUgfHwgIi41IjsKCgkJCS8vIEFkanVzdCBhbmQgYXBwbHkKCQkJaW5pdGlhbEluVW5p
dCA9IGluaXRpYWxJblVuaXQgLyBzY2FsZTsKCQkJalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBp
bml0aWFsSW5Vbml0ICsgdW5pdCApOwoKCQkvLyBVcGRhdGUgc2NhbGUsIHRvbGVyYXRpbmcgemVy
byBvciBOYU4gZnJvbSB0d2Vlbi5jdXIoKQoJCS8vIEJyZWFrIHRoZSBsb29wIGlmIHNjYWxlIGlz
IHVuY2hhbmdlZCBvciBwZXJmZWN0LCBvciBpZiB3ZSd2ZSBqdXN0IGhhZCBlbm91Z2guCgkJfSB3
aGlsZSAoCgkJCXNjYWxlICE9PSAoIHNjYWxlID0gY3VycmVudFZhbHVlKCkgLyBpbml0aWFsICkg
JiYgc2NhbGUgIT09IDEgJiYgLS1tYXhJdGVyYXRpb25zCgkJKTsKCX0KCglpZiAoIHZhbHVlUGFy
dHMgKSB7CgkJaW5pdGlhbEluVW5pdCA9ICtpbml0aWFsSW5Vbml0IHx8ICtpbml0aWFsIHx8IDA7
CgoJCS8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZAoJCWFkanVz
dGVkID0gdmFsdWVQYXJ0c1sgMSBdID8KCQkJaW5pdGlhbEluVW5pdCArICggdmFsdWVQYXJ0c1sg
MSBdICsgMSApICogdmFsdWVQYXJ0c1sgMiBdIDoKCQkJK3ZhbHVlUGFydHNbIDIgXTsKCQlpZiAo
IHR3ZWVuICkgewoJCQl0d2Vlbi51bml0ID0gdW5pdDsKCQkJdHdlZW4uc3RhcnQgPSBpbml0aWFs
SW5Vbml0OwoJCQl0d2Vlbi5lbmQgPSBhZGp1c3RlZDsKCQl9Cgl9CglyZXR1cm4gYWRqdXN0ZWQ7
Cn0KCgp2YXIgZGVmYXVsdERpc3BsYXlNYXAgPSB7fTsKCmZ1bmN0aW9uIGdldERlZmF1bHREaXNw
bGF5KCBlbGVtICkgewoJdmFyIHRlbXAsCgkJZG9jID0gZWxlbS5vd25lckRvY3VtZW50LAoJCW5v
ZGVOYW1lID0gZWxlbS5ub2RlTmFtZSwKCQlkaXNwbGF5ID0gZGVmYXVsdERpc3BsYXlNYXBbIG5v
ZGVOYW1lIF07CgoJaWYgKCBkaXNwbGF5ICkgewoJCXJldHVybiBkaXNwbGF5OwoJfQoKCXRlbXAg
PSBkb2MuYm9keS5hcHBlbmRDaGlsZCggZG9jLmNyZWF0ZUVsZW1lbnQoIG5vZGVOYW1lICkgKTsK
CWRpc3BsYXkgPSBqUXVlcnkuY3NzKCB0ZW1wLCAiZGlzcGxheSIgKTsKCgl0ZW1wLnBhcmVudE5v
ZGUucmVtb3ZlQ2hpbGQoIHRlbXAgKTsKCglpZiAoIGRpc3BsYXkgPT09ICJub25lIiApIHsKCQlk
aXNwbGF5ID0gImJsb2NrIjsKCX0KCWRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdID0gZGlz
cGxheTsKCglyZXR1cm4gZGlzcGxheTsKfQoKZnVuY3Rpb24gc2hvd0hpZGUoIGVsZW1lbnRzLCBz
aG93ICkgewoJdmFyIGRpc3BsYXksIGVsZW0sCgkJdmFsdWVzID0gW10sCgkJaW5kZXggPSAwLAoJ
CWxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aDsKCgkvLyBEZXRlcm1pbmUgbmV3IGRpc3BsYXkgdmFs
dWUgZm9yIGVsZW1lbnRzIHRoYXQgbmVlZCB0byBjaGFuZ2UKCWZvciAoIDsgaW5kZXggPCBsZW5n
dGg7IGluZGV4KysgKSB7CgkJZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdOwoJCWlmICggIWVsZW0u
c3R5bGUgKSB7CgkJCWNvbnRpbnVlOwoJCX0KCgkJZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxh
eTsKCQlpZiAoIHNob3cgKSB7CgoJCQkvLyBTaW5jZSB3ZSBmb3JjZSB2aXNpYmlsaXR5IHVwb24g
Y2FzY2FkZS1oaWRkZW4gZWxlbWVudHMsIGFuIGltbWVkaWF0ZSAoYW5kIHNsb3cpCgkJCS8vIGNo
ZWNrIGlzIHJlcXVpcmVkIGluIHRoaXMgZmlyc3QgbG9vcCB1bmxlc3Mgd2UgaGF2ZSBhIG5vbmVt
cHR5IGRpc3BsYXkgdmFsdWUgKGVpdGhlcgoJCQkvLyBpbmxpbmUgb3IgYWJvdXQtdG8tYmUtcmVz
dG9yZWQpCgkJCWlmICggZGlzcGxheSA9PT0gIm5vbmUiICkgewoJCQkJdmFsdWVzWyBpbmRleCBd
ID0gZGF0YVByaXYuZ2V0KCBlbGVtLCAiZGlzcGxheSIgKSB8fCBudWxsOwoJCQkJaWYgKCAhdmFs
dWVzWyBpbmRleCBdICkgewoJCQkJCWVsZW0uc3R5bGUuZGlzcGxheSA9ICIiOwoJCQkJfQoJCQl9
CgkJCWlmICggZWxlbS5zdHlsZS5kaXNwbGF5ID09PSAiIiAmJiBpc0hpZGRlbldpdGhpblRyZWUo
IGVsZW0gKSApIHsKCQkJCXZhbHVlc1sgaW5kZXggXSA9IGdldERlZmF1bHREaXNwbGF5KCBlbGVt
ICk7CgkJCX0KCQl9IGVsc2UgewoJCQlpZiAoIGRpc3BsYXkgIT09ICJub25lIiApIHsKCQkJCXZh
bHVlc1sgaW5kZXggXSA9ICJub25lIjsKCgkJCQkvLyBSZW1lbWJlciB3aGF0IHdlJ3JlIG92ZXJ3
cml0aW5nCgkJCQlkYXRhUHJpdi5zZXQoIGVsZW0sICJkaXNwbGF5IiwgZGlzcGxheSApOwoJCQl9
CgkJfQoJfQoKCS8vIFNldCB0aGUgZGlzcGxheSBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQg
bG9vcCB0byBhdm9pZCBjb25zdGFudCByZWZsb3cKCWZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBs
ZW5ndGg7IGluZGV4KysgKSB7CgkJaWYgKCB2YWx1ZXNbIGluZGV4IF0gIT0gbnVsbCApIHsKCQkJ
ZWxlbWVudHNbIGluZGV4IF0uc3R5bGUuZGlzcGxheSA9IHZhbHVlc1sgaW5kZXggXTsKCQl9Cgl9
CgoJcmV0dXJuIGVsZW1lbnRzOwp9CgpqUXVlcnkuZm4uZXh0ZW5kKCB7CglzaG93OiBmdW5jdGlv
bigpIHsKCQlyZXR1cm4gc2hvd0hpZGUoIHRoaXMsIHRydWUgKTsKCX0sCgloaWRlOiBmdW5jdGlv
bigpIHsKCQlyZXR1cm4gc2hvd0hpZGUoIHRoaXMgKTsKCX0sCgl0b2dnbGU6IGZ1bmN0aW9uKCBz
dGF0ZSApIHsKCQlpZiAoIHR5cGVvZiBzdGF0ZSA9PT0gImJvb2xlYW4iICkgewoJCQlyZXR1cm4g
c3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpOwoJCX0KCgkJcmV0dXJuIHRoaXMuZWFj
aCggZnVuY3Rpb24oKSB7CgkJCWlmICggaXNIaWRkZW5XaXRoaW5UcmVlKCB0aGlzICkgKSB7CgkJ
CQlqUXVlcnkoIHRoaXMgKS5zaG93KCk7CgkJCX0gZWxzZSB7CgkJCQlqUXVlcnkoIHRoaXMgKS5o
aWRlKCk7CgkJCX0KCQl9ICk7Cgl9Cn0gKTsKdmFyIHJjaGVja2FibGVUeXBlID0gKCAvXig/OmNo
ZWNrYm94fHJhZGlvKSQvaSApOwoKdmFyIHJ0YWdOYW1lID0gKCAvPChbYS16XVteXC9cMD5ceDIw
XHRcclxuXGZdKykvaSApOwoKdmFyIHJzY3JpcHRUeXBlID0gKCAvXiR8XC8oPzpqYXZhfGVjbWEp
c2NyaXB0L2kgKTsKCgoKLy8gV2UgaGF2ZSB0byBjbG9zZSB0aGVzZSB0YWdzIHRvIHN1cHBvcnQg
WEhUTUwgKCMxMzIwMCkKdmFyIHdyYXBNYXAgPSB7CgoJLy8gU3VwcG9ydDogSUUgPD05IG9ubHkK
CW9wdGlvbjogWyAxLCAiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPiIsICI8L3NlbGVjdD4i
IF0sCgoJLy8gWEhUTUwgcGFyc2VycyBkbyBub3QgbWFnaWNhbGx5IGluc2VydCBlbGVtZW50cyBp
biB0aGUKCS8vIHNhbWUgd2F5IHRoYXQgdGFnIHNvdXAgcGFyc2VycyBkby4gU28gd2UgY2Fubm90
IHNob3J0ZW4KCS8vIHRoaXMgYnkgb21pdHRpbmcgPHRib2R5PiBvciBvdGhlciByZXF1aXJlZCBl
bGVtZW50cy4KCXRoZWFkOiBbIDEsICI8dGFibGU+IiwgIjwvdGFibGU+IiBdLAoJY29sOiBbIDIs
ICI8dGFibGU+PGNvbGdyb3VwPiIsICI8L2NvbGdyb3VwPjwvdGFibGU+IiBdLAoJdHI6IFsgMiwg
Ijx0YWJsZT48dGJvZHk+IiwgIjwvdGJvZHk+PC90YWJsZT4iIF0sCgl0ZDogWyAzLCAiPHRhYmxl
Pjx0Ym9keT48dHI+IiwgIjwvdHI+PC90Ym9keT48L3RhYmxlPiIgXSwKCglfZGVmYXVsdDogWyAw
LCAiIiwgIiIgXQp9OwoKLy8gU3VwcG9ydDogSUUgPD05IG9ubHkKd3JhcE1hcC5vcHRncm91cCA9
IHdyYXBNYXAub3B0aW9uOwoKd3JhcE1hcC50Ym9keSA9IHdyYXBNYXAudGZvb3QgPSB3cmFwTWFw
LmNvbGdyb3VwID0gd3JhcE1hcC5jYXB0aW9uID0gd3JhcE1hcC50aGVhZDsKd3JhcE1hcC50aCA9
IHdyYXBNYXAudGQ7CgoKZnVuY3Rpb24gZ2V0QWxsKCBjb250ZXh0LCB0YWcgKSB7CgoJLy8gU3Vw
cG9ydDogSUUgPD05IC0gMTEgb25seQoJLy8gVXNlIHR5cGVvZiB0byBhdm9pZCB6ZXJvLWFyZ3Vt
ZW50IG1ldGhvZCBpbnZvY2F0aW9uIG9uIGhvc3Qgb2JqZWN0cyAoIzE1MTUxKQoJdmFyIHJldDsK
CglpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSAidW5kZWZpbmVk
IiApIHsKCQlyZXQgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgfHwgIioiICk7
CgoJfSBlbHNlIGlmICggdHlwZW9mIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCAhPT0gInVuZGVm
aW5lZCIgKSB7CgkJcmV0ID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgIioiICk7
CgoJfSBlbHNlIHsKCQlyZXQgPSBbXTsKCX0KCglpZiAoIHRhZyA9PT0gdW5kZWZpbmVkIHx8IHRh
ZyAmJiBub2RlTmFtZSggY29udGV4dCwgdGFnICkgKSB7CgkJcmV0dXJuIGpRdWVyeS5tZXJnZSgg
WyBjb250ZXh0IF0sIHJldCApOwoJfQoKCXJldHVybiByZXQ7Cn0KCgovLyBNYXJrIHNjcmlwdHMg
YXMgaGF2aW5nIGFscmVhZHkgYmVlbiBldmFsdWF0ZWQKZnVuY3Rpb24gc2V0R2xvYmFsRXZhbCgg
ZWxlbXMsIHJlZkVsZW1lbnRzICkgewoJdmFyIGkgPSAwLAoJCWwgPSBlbGVtcy5sZW5ndGg7CgoJ
Zm9yICggOyBpIDwgbDsgaSsrICkgewoJCWRhdGFQcml2LnNldCgKCQkJZWxlbXNbIGkgXSwKCQkJ
Imdsb2JhbEV2YWwiLAoJCQkhcmVmRWxlbWVudHMgfHwgZGF0YVByaXYuZ2V0KCByZWZFbGVtZW50
c1sgaSBdLCAiZ2xvYmFsRXZhbCIgKQoJCSk7Cgl9Cn0KCgp2YXIgcmh0bWwgPSAvPHwmIz9cdys7
LzsKCmZ1bmN0aW9uIGJ1aWxkRnJhZ21lbnQoIGVsZW1zLCBjb250ZXh0LCBzY3JpcHRzLCBzZWxl
Y3Rpb24sIGlnbm9yZWQgKSB7Cgl2YXIgZWxlbSwgdG1wLCB0YWcsIHdyYXAsIGNvbnRhaW5zLCBq
LAoJCWZyYWdtZW50ID0gY29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksCgkJbm9kZXMg
PSBbXSwKCQlpID0gMCwKCQlsID0gZWxlbXMubGVuZ3RoOwoKCWZvciAoIDsgaSA8IGw7IGkrKyAp
IHsKCQllbGVtID0gZWxlbXNbIGkgXTsKCgkJaWYgKCBlbGVtIHx8IGVsZW0gPT09IDAgKSB7CgoJ
CQkvLyBBZGQgbm9kZXMgZGlyZWN0bHkKCQkJaWYgKCBqUXVlcnkudHlwZSggZWxlbSApID09PSAi
b2JqZWN0IiApIHsKCgkJCQkvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21K
UyAxIG9ubHkKCQkJCS8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVu
dCBXZWJLaXQKCQkJCWpRdWVyeS5tZXJnZSggbm9kZXMsIGVsZW0ubm9kZVR5cGUgPyBbIGVsZW0g
XSA6IGVsZW0gKTsKCgkJCS8vIENvbnZlcnQgbm9uLWh0bWwgaW50byBhIHRleHQgbm9kZQoJCQl9
IGVsc2UgaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkgewoJCQkJbm9kZXMucHVzaCggY29udGV4
dC5jcmVhdGVUZXh0Tm9kZSggZWxlbSApICk7CgoJCQkvLyBDb252ZXJ0IGh0bWwgaW50byBET00g
bm9kZXMKCQkJfSBlbHNlIHsKCQkJCXRtcCA9IHRtcCB8fCBmcmFnbWVudC5hcHBlbmRDaGlsZCgg
Y29udGV4dC5jcmVhdGVFbGVtZW50KCAiZGl2IiApICk7CgoJCQkJLy8gRGVzZXJpYWxpemUgYSBz
dGFuZGFyZCByZXByZXNlbnRhdGlvbgoJCQkJdGFnID0gKCBydGFnTmFtZS5leGVjKCBlbGVtICkg
fHwgWyAiIiwgIiIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTsKCQkJCXdyYXAgPSB3cmFwTWFwWyB0
YWcgXSB8fCB3cmFwTWFwLl9kZWZhdWx0OwoJCQkJdG1wLmlubmVySFRNTCA9IHdyYXBbIDEgXSAr
IGpRdWVyeS5odG1sUHJlZmlsdGVyKCBlbGVtICkgKyB3cmFwWyAyIF07CgoJCQkJLy8gRGVzY2Vu
ZCB0aHJvdWdoIHdyYXBwZXJzIHRvIHRoZSByaWdodCBjb250ZW50CgkJCQlqID0gd3JhcFsgMCBd
OwoJCQkJd2hpbGUgKCBqLS0gKSB7CgkJCQkJdG1wID0gdG1wLmxhc3RDaGlsZDsKCQkJCX0KCgkJ
CQkvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHkKCQkJCS8v
IHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXQKCQkJCWpR
dWVyeS5tZXJnZSggbm9kZXMsIHRtcC5jaGlsZE5vZGVzICk7CgoJCQkJLy8gUmVtZW1iZXIgdGhl
IHRvcC1sZXZlbCBjb250YWluZXIKCQkJCXRtcCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7CgoJCQkJ
Ly8gRW5zdXJlIHRoZSBjcmVhdGVkIG5vZGVzIGFyZSBvcnBoYW5lZCAoIzEyMzkyKQoJCQkJdG1w
LnRleHRDb250ZW50ID0gIiI7CgkJCX0KCQl9Cgl9CgoJLy8gUmVtb3ZlIHdyYXBwZXIgZnJvbSBm
cmFnbWVudAoJZnJhZ21lbnQudGV4dENvbnRlbnQgPSAiIjsKCglpID0gMDsKCXdoaWxlICggKCBl
bGVtID0gbm9kZXNbIGkrKyBdICkgKSB7CgoJCS8vIFNraXAgZWxlbWVudHMgYWxyZWFkeSBpbiB0
aGUgY29udGV4dCBjb2xsZWN0aW9uICh0cmFjLTQwODcpCgkJaWYgKCBzZWxlY3Rpb24gJiYgalF1
ZXJ5LmluQXJyYXkoIGVsZW0sIHNlbGVjdGlvbiApID4gLTEgKSB7CgkJCWlmICggaWdub3JlZCAp
IHsKCQkJCWlnbm9yZWQucHVzaCggZWxlbSApOwoJCQl9CgkJCWNvbnRpbnVlOwoJCX0KCgkJY29u
dGFpbnMgPSBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApOwoKCQkv
LyBBcHBlbmQgdG8gZnJhZ21lbnQKCQl0bXAgPSBnZXRBbGwoIGZyYWdtZW50LmFwcGVuZENoaWxk
KCBlbGVtICksICJzY3JpcHQiICk7CgoJCS8vIFByZXNlcnZlIHNjcmlwdCBldmFsdWF0aW9uIGhp
c3RvcnkKCQlpZiAoIGNvbnRhaW5zICkgewoJCQlzZXRHbG9iYWxFdmFsKCB0bXAgKTsKCQl9CgoJ
CS8vIENhcHR1cmUgZXhlY3V0YWJsZXMKCQlpZiAoIHNjcmlwdHMgKSB7CgkJCWogPSAwOwoJCQl3
aGlsZSAoICggZWxlbSA9IHRtcFsgaisrIF0gKSApIHsKCQkJCWlmICggcnNjcmlwdFR5cGUudGVz
dCggZWxlbS50eXBlIHx8ICIiICkgKSB7CgkJCQkJc2NyaXB0cy5wdXNoKCBlbGVtICk7CgkJCQl9
CgkJCX0KCQl9Cgl9CgoJcmV0dXJuIGZyYWdtZW50Owp9CgoKKCBmdW5jdGlvbigpIHsKCXZhciBm
cmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSwKCQlkaXYgPSBmcmFn
bWVudC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImRpdiIgKSApLAoJCWlu
cHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImlucHV0IiApOwoKCS8vIFN1cHBvcnQ6IEFu
ZHJvaWQgNC4wIC0gNC4zIG9ubHkKCS8vIENoZWNrIHN0YXRlIGxvc3QgaWYgdGhlIG5hbWUgaXMg
c2V0ICgjMTEyMTcpCgkvLyBTdXBwb3J0OiBXaW5kb3dzIFdlYiBBcHBzIChXV0EpCgkvLyBgbmFt
ZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSkKCWlu
cHV0LnNldEF0dHJpYnV0ZSggInR5cGUiLCAicmFkaW8iICk7CglpbnB1dC5zZXRBdHRyaWJ1dGUo
ICJjaGVja2VkIiwgImNoZWNrZWQiICk7CglpbnB1dC5zZXRBdHRyaWJ1dGUoICJuYW1lIiwgInQi
ICk7CgoJZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApOwoKCS8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00
LjEgb25seQoJLy8gT2xkZXIgV2ViS2l0IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3Jy
ZWN0bHkgaW4gZnJhZ21lbnRzCglzdXBwb3J0LmNoZWNrQ2xvbmUgPSBkaXYuY2xvbmVOb2RlKCB0
cnVlICkuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmNoZWNrZWQ7CgoJLy8gU3VwcG9ydDog
SUUgPD0xMSBvbmx5CgkvLyBNYWtlIHN1cmUgdGV4dGFyZWEgKGFuZCBjaGVja2JveCkgZGVmYXVs
dFZhbHVlIGlzIHByb3Blcmx5IGNsb25lZAoJZGl2LmlubmVySFRNTCA9ICI8dGV4dGFyZWE+eDwv
dGV4dGFyZWE+IjsKCXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgPSAhIWRpdi5jbG9uZU5vZGUoIHRy
dWUgKS5sYXN0Q2hpbGQuZGVmYXVsdFZhbHVlOwp9ICkoKTsKdmFyIGRvY3VtZW50RWxlbWVudCA9
IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDsKCgoKdmFyCglya2V5RXZlbnQgPSAvXmtleS8sCgly
bW91c2VFdmVudCA9IC9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudXxkcmFnfGRyb3ApfGNs
aWNrLywKCXJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XC4oLispfCkvOwoKZnVuY3Rpb24g
cmV0dXJuVHJ1ZSgpIHsKCXJldHVybiB0cnVlOwp9CgpmdW5jdGlvbiByZXR1cm5GYWxzZSgpIHsK
CXJldHVybiBmYWxzZTsKfQoKLy8gU3VwcG9ydDogSUUgPD05IG9ubHkKLy8gU2VlICMxMzM5MyBm
b3IgbW9yZSBpbmZvCmZ1bmN0aW9uIHNhZmVBY3RpdmVFbGVtZW50KCkgewoJdHJ5IHsKCQlyZXR1
cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDsKCX0gY2F0Y2ggKCBlcnIgKSB7IH0KfQoKZnVuY3Rp
b24gb24oIGVsZW0sIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIG9uZSApIHsKCXZhciBvcmln
Rm4sIHR5cGU7CgoJLy8gVHlwZXMgY2FuIGJlIGEgbWFwIG9mIHR5cGVzL2hhbmRsZXJzCglpZiAo
IHR5cGVvZiB0eXBlcyA9PT0gIm9iamVjdCIgKSB7CgoJCS8vICggdHlwZXMtT2JqZWN0LCBzZWxl
Y3RvciwgZGF0YSApCgkJaWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09ICJzdHJpbmciICkgewoKCQkJ
Ly8gKCB0eXBlcy1PYmplY3QsIGRhdGEgKQoJCQlkYXRhID0gZGF0YSB8fCBzZWxlY3RvcjsKCQkJ
c2VsZWN0b3IgPSB1bmRlZmluZWQ7CgkJfQoJCWZvciAoIHR5cGUgaW4gdHlwZXMgKSB7CgkJCW9u
KCBlbGVtLCB0eXBlLCBzZWxlY3RvciwgZGF0YSwgdHlwZXNbIHR5cGUgXSwgb25lICk7CgkJfQoJ
CXJldHVybiBlbGVtOwoJfQoKCWlmICggZGF0YSA9PSBudWxsICYmIGZuID09IG51bGwgKSB7CgoJ
CS8vICggdHlwZXMsIGZuICkKCQlmbiA9IHNlbGVjdG9yOwoJCWRhdGEgPSBzZWxlY3RvciA9IHVu
ZGVmaW5lZDsKCX0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7CgkJaWYgKCB0eXBlb2Ygc2VsZWN0
b3IgPT09ICJzdHJpbmciICkgewoKCQkJLy8gKCB0eXBlcywgc2VsZWN0b3IsIGZuICkKCQkJZm4g
PSBkYXRhOwoJCQlkYXRhID0gdW5kZWZpbmVkOwoJCX0gZWxzZSB7CgoJCQkvLyAoIHR5cGVzLCBk
YXRhLCBmbiApCgkJCWZuID0gZGF0YTsKCQkJZGF0YSA9IHNlbGVjdG9yOwoJCQlzZWxlY3RvciA9
IHVuZGVmaW5lZDsKCQl9Cgl9CglpZiAoIGZuID09PSBmYWxzZSApIHsKCQlmbiA9IHJldHVybkZh
bHNlOwoJfSBlbHNlIGlmICggIWZuICkgewoJCXJldHVybiBlbGVtOwoJfQoKCWlmICggb25lID09
PSAxICkgewoJCW9yaWdGbiA9IGZuOwoJCWZuID0gZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkJLy8g
Q2FuIHVzZSBhbiBlbXB0eSBzZXQsIHNpbmNlIGV2ZW50IGNvbnRhaW5zIHRoZSBpbmZvCgkJCWpR
dWVyeSgpLm9mZiggZXZlbnQgKTsKCQkJcmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1l
bnRzICk7CgkJfTsKCgkJLy8gVXNlIHNhbWUgZ3VpZCBzbyBjYWxsZXIgY2FuIHJlbW92ZSB1c2lu
ZyBvcmlnRm4KCQlmbi5ndWlkID0gb3JpZ0ZuLmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVy
eS5ndWlkKysgKTsKCX0KCXJldHVybiBlbGVtLmVhY2goIGZ1bmN0aW9uKCkgewoJCWpRdWVyeS5l
dmVudC5hZGQoIHRoaXMsIHR5cGVzLCBmbiwgZGF0YSwgc2VsZWN0b3IgKTsKCX0gKTsKfQoKLyoK
ICogSGVscGVyIGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZXZlbnRzIC0tIG5vdCBwYXJ0IG9mIHRo
ZSBwdWJsaWMgaW50ZXJmYWNlLgogKiBQcm9wcyB0byBEZWFuIEVkd2FyZHMnIGFkZEV2ZW50IGxp
YnJhcnkgZm9yIG1hbnkgb2YgdGhlIGlkZWFzLgogKi8KalF1ZXJ5LmV2ZW50ID0gewoKCWdsb2Jh
bDoge30sCgoJYWRkOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVj
dG9yICkgewoKCQl2YXIgaGFuZGxlT2JqSW4sIGV2ZW50SGFuZGxlLCB0bXAsCgkJCWV2ZW50cywg
dCwgaGFuZGxlT2JqLAoJCQlzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3Jp
Z1R5cGUsCgkJCWVsZW1EYXRhID0gZGF0YVByaXYuZ2V0KCBlbGVtICk7CgoJCS8vIERvbid0IGF0
dGFjaCBldmVudHMgdG8gbm9EYXRhIG9yIHRleHQvY29tbWVudCBub2RlcyAoYnV0IGFsbG93IHBs
YWluIG9iamVjdHMpCgkJaWYgKCAhZWxlbURhdGEgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIENh
bGxlciBjYW4gcGFzcyBpbiBhbiBvYmplY3Qgb2YgY3VzdG9tIGRhdGEgaW4gbGlldSBvZiB0aGUg
aGFuZGxlcgoJCWlmICggaGFuZGxlci5oYW5kbGVyICkgewoJCQloYW5kbGVPYmpJbiA9IGhhbmRs
ZXI7CgkJCWhhbmRsZXIgPSBoYW5kbGVPYmpJbi5oYW5kbGVyOwoJCQlzZWxlY3RvciA9IGhhbmRs
ZU9iakluLnNlbGVjdG9yOwoJCX0KCgkJLy8gRW5zdXJlIHRoYXQgaW52YWxpZCBzZWxlY3RvcnMg
dGhyb3cgZXhjZXB0aW9ucyBhdCBhdHRhY2ggdGltZQoJCS8vIEV2YWx1YXRlIGFnYWluc3QgZG9j
dW1lbnRFbGVtZW50IGluIGNhc2UgZWxlbSBpcyBhIG5vbi1lbGVtZW50IG5vZGUgKGUuZy4sIGRv
Y3VtZW50KQoJCWlmICggc2VsZWN0b3IgKSB7CgkJCWpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3Rv
ciggZG9jdW1lbnRFbGVtZW50LCBzZWxlY3RvciApOwoJCX0KCgkJLy8gTWFrZSBzdXJlIHRoYXQg
dGhlIGhhbmRsZXIgaGFzIGEgdW5pcXVlIElELCB1c2VkIHRvIGZpbmQvcmVtb3ZlIGl0IGxhdGVy
CgkJaWYgKCAhaGFuZGxlci5ndWlkICkgewoJCQloYW5kbGVyLmd1aWQgPSBqUXVlcnkuZ3VpZCsr
OwoJCX0KCgkJLy8gSW5pdCB0aGUgZWxlbWVudCdzIGV2ZW50IHN0cnVjdHVyZSBhbmQgbWFpbiBo
YW5kbGVyLCBpZiB0aGlzIGlzIHRoZSBmaXJzdAoJCWlmICggISggZXZlbnRzID0gZWxlbURhdGEu
ZXZlbnRzICkgKSB7CgkJCWV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyA9IHt9OwoJCX0KCQlpZiAo
ICEoIGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlICkgKSB7CgkJCWV2ZW50SGFuZGxlID0g
ZWxlbURhdGEuaGFuZGxlID0gZnVuY3Rpb24oIGUgKSB7CgoJCQkJLy8gRGlzY2FyZCB0aGUgc2Vj
b25kIGV2ZW50IG9mIGEgalF1ZXJ5LmV2ZW50LnRyaWdnZXIoKSBhbmQKCQkJCS8vIHdoZW4gYW4g
ZXZlbnQgaXMgY2FsbGVkIGFmdGVyIGEgcGFnZSBoYXMgdW5sb2FkZWQKCQkJCXJldHVybiB0eXBl
b2YgalF1ZXJ5ICE9PSAidW5kZWZpbmVkIiAmJiBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBl
LnR5cGUgPwoJCQkJCWpRdWVyeS5ldmVudC5kaXNwYXRjaC5hcHBseSggZWxlbSwgYXJndW1lbnRz
ICkgOiB1bmRlZmluZWQ7CgkJCX07CgkJfQoKCQkvLyBIYW5kbGUgbXVsdGlwbGUgZXZlbnRzIHNl
cGFyYXRlZCBieSBhIHNwYWNlCgkJdHlwZXMgPSAoIHR5cGVzIHx8ICIiICkubWF0Y2goIHJub3Ro
dG1sd2hpdGUgKSB8fCBbICIiIF07CgkJdCA9IHR5cGVzLmxlbmd0aDsKCQl3aGlsZSAoIHQtLSAp
IHsKCQkJdG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdOwoJCQl0
eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTsKCQkJbmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwg
IiIgKS5zcGxpdCggIi4iICkuc29ydCgpOwoKCQkJLy8gVGhlcmUgKm11c3QqIGJlIGEgdHlwZSwg
bm8gYXR0YWNoaW5nIG5hbWVzcGFjZS1vbmx5IGhhbmRsZXJzCgkJCWlmICggIXR5cGUgKSB7CgkJ
CQljb250aW51ZTsKCQkJfQoKCQkJLy8gSWYgZXZlbnQgY2hhbmdlcyBpdHMgdHlwZSwgdXNlIHRo
ZSBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzIGZvciB0aGUgY2hhbmdlZCB0eXBlCgkJCXNwZWNpYWwg
PSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9OwoKCQkJLy8gSWYgc2VsZWN0b3Ig
ZGVmaW5lZCwgZGV0ZXJtaW5lIHNwZWNpYWwgZXZlbnQgYXBpIHR5cGUsIG90aGVyd2lzZSBnaXZl
biB0eXBlCgkJCXR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVj
aWFsLmJpbmRUeXBlICkgfHwgdHlwZTsKCgkJCS8vIFVwZGF0ZSBzcGVjaWFsIGJhc2VkIG9uIG5l
d2x5IHJlc2V0IHR5cGUKCQkJc3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0g
fHwge307CgoJCQkvLyBoYW5kbGVPYmogaXMgcGFzc2VkIHRvIGFsbCBldmVudCBoYW5kbGVycwoJ
CQloYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7CgkJCQl0eXBlOiB0eXBlLAoJCQkJb3JpZ1R5
cGU6IG9yaWdUeXBlLAoJCQkJZGF0YTogZGF0YSwKCQkJCWhhbmRsZXI6IGhhbmRsZXIsCgkJCQln
dWlkOiBoYW5kbGVyLmd1aWQsCgkJCQlzZWxlY3Rvcjogc2VsZWN0b3IsCgkJCQluZWVkc0NvbnRl
eHQ6IHNlbGVjdG9yICYmIGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dC50ZXN0KCBzZWxl
Y3RvciApLAoJCQkJbmFtZXNwYWNlOiBuYW1lc3BhY2VzLmpvaW4oICIuIiApCgkJCX0sIGhhbmRs
ZU9iakluICk7CgoJCQkvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRo
ZSBmaXJzdAoJCQlpZiAoICEoIGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gKSApIHsKCQkJCWhh
bmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTsKCQkJCWhhbmRsZXJzLmRlbGVnYXRlQ291bnQg
PSAwOwoKCQkJCS8vIE9ubHkgdXNlIGFkZEV2ZW50TGlzdGVuZXIgaWYgdGhlIHNwZWNpYWwgZXZl
bnRzIGhhbmRsZXIgcmV0dXJucyBmYWxzZQoJCQkJaWYgKCAhc3BlY2lhbC5zZXR1cCB8fAoJCQkJ
CXNwZWNpYWwuc2V0dXAuY2FsbCggZWxlbSwgZGF0YSwgbmFtZXNwYWNlcywgZXZlbnRIYW5kbGUg
KSA9PT0gZmFsc2UgKSB7CgoJCQkJCWlmICggZWxlbS5hZGRFdmVudExpc3RlbmVyICkgewoJCQkJ
CQllbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7CgkJCQkJfQoJCQkJ
fQoJCQl9CgoJCQlpZiAoIHNwZWNpYWwuYWRkICkgewoJCQkJc3BlY2lhbC5hZGQuY2FsbCggZWxl
bSwgaGFuZGxlT2JqICk7CgoJCQkJaWYgKCAhaGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCApIHsKCQkJ
CQloYW5kbGVPYmouaGFuZGxlci5ndWlkID0gaGFuZGxlci5ndWlkOwoJCQkJfQoJCQl9CgoJCQkv
LyBBZGQgdG8gdGhlIGVsZW1lbnQncyBoYW5kbGVyIGxpc3QsIGRlbGVnYXRlcyBpbiBmcm9udAoJ
CQlpZiAoIHNlbGVjdG9yICkgewoJCQkJaGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0
ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApOwoJCQl9IGVsc2UgewoJCQkJaGFuZGxlcnMucHVzaCgg
aGFuZGxlT2JqICk7CgkJCX0KCgkJCS8vIEtlZXAgdHJhY2sgb2Ygd2hpY2ggZXZlbnRzIGhhdmUg
ZXZlciBiZWVuIHVzZWQsIGZvciBldmVudCBvcHRpbWl6YXRpb24KCQkJalF1ZXJ5LmV2ZW50Lmds
b2JhbFsgdHlwZSBdID0gdHJ1ZTsKCQl9CgoJfSwKCgkvLyBEZXRhY2ggYW4gZXZlbnQgb3Igc2V0
IG9mIGV2ZW50cyBmcm9tIGFuIGVsZW1lbnQKCXJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVz
LCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7CgoJCXZhciBqLCBvcmlnQ291bnQs
IHRtcCwKCQkJZXZlbnRzLCB0LCBoYW5kbGVPYmosCgkJCXNwZWNpYWwsIGhhbmRsZXJzLCB0eXBl
LCBuYW1lc3BhY2VzLCBvcmlnVHlwZSwKCQkJZWxlbURhdGEgPSBkYXRhUHJpdi5oYXNEYXRhKCBl
bGVtICkgJiYgZGF0YVByaXYuZ2V0KCBlbGVtICk7CgoJCWlmICggIWVsZW1EYXRhIHx8ICEoIGV2
ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBPbmNlIGZv
ciBlYWNoIHR5cGUubmFtZXNwYWNlIGluIHR5cGVzOyB0eXBlIG1heSBiZSBvbWl0dGVkCgkJdHlw
ZXMgPSAoIHR5cGVzIHx8ICIiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbICIiIF07CgkJ
dCA9IHR5cGVzLmxlbmd0aDsKCQl3aGlsZSAoIHQtLSApIHsKCQkJdG1wID0gcnR5cGVuYW1lc3Bh
Y2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdOwoJCQl0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEg
XTsKCQkJbmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgIiIgKS5zcGxpdCggIi4iICkuc29ydCgp
OwoKCQkJLy8gVW5iaW5kIGFsbCBldmVudHMgKG9uIHRoaXMgbmFtZXNwYWNlLCBpZiBwcm92aWRl
ZCkgZm9yIHRoZSBlbGVtZW50CgkJCWlmICggIXR5cGUgKSB7CgkJCQlmb3IgKCB0eXBlIGluIGV2
ZW50cyApIHsKCQkJCQlqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICsgdHlwZXNbIHQg
XSwgaGFuZGxlciwgc2VsZWN0b3IsIHRydWUgKTsKCQkJCX0KCQkJCWNvbnRpbnVlOwoJCQl9CgoJ
CQlzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTsKCQkJdHlwZSA9
ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8
fCB0eXBlOwoJCQloYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdIHx8IFtdOwoJCQl0bXAgPSB0bXBb
IDIgXSAmJgoJCQkJbmV3IFJlZ0V4cCggIihefFxcLikiICsgbmFtZXNwYWNlcy5qb2luKCAiXFwu
KD86LipcXC58KSIgKSArICIoXFwufCQpIiApOwoKCQkJLy8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50
cwoJCQlvcmlnQ291bnQgPSBqID0gaGFuZGxlcnMubGVuZ3RoOwoJCQl3aGlsZSAoIGotLSApIHsK
CQkJCWhhbmRsZU9iaiA9IGhhbmRsZXJzWyBqIF07CgoJCQkJaWYgKCAoIG1hcHBlZFR5cGVzIHx8
IG9yaWdUeXBlID09PSBoYW5kbGVPYmoub3JpZ1R5cGUgKSAmJgoJCQkJCSggIWhhbmRsZXIgfHwg
aGFuZGxlci5ndWlkID09PSBoYW5kbGVPYmouZ3VpZCApICYmCgkJCQkJKCAhdG1wIHx8IHRtcC50
ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSAmJgoJCQkJCSggIXNlbGVjdG9yIHx8IHNlbGVj
dG9yID09PSBoYW5kbGVPYmouc2VsZWN0b3IgfHwKCQkJCQkJc2VsZWN0b3IgPT09ICIqKiIgJiYg
aGFuZGxlT2JqLnNlbGVjdG9yICkgKSB7CgkJCQkJaGFuZGxlcnMuc3BsaWNlKCBqLCAxICk7CgoJ
CQkJCWlmICggaGFuZGxlT2JqLnNlbGVjdG9yICkgewoJCQkJCQloYW5kbGVycy5kZWxlZ2F0ZUNv
dW50LS07CgkJCQkJfQoJCQkJCWlmICggc3BlY2lhbC5yZW1vdmUgKSB7CgkJCQkJCXNwZWNpYWwu
cmVtb3ZlLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8g
UmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQg
bm8gbW9yZSBoYW5kbGVycyBleGlzdAoJCQkvLyAoYXZvaWRzIHBvdGVudGlhbCBmb3IgZW5kbGVz
cyByZWN1cnNpb24gZHVyaW5nIHJlbW92YWwgb2Ygc3BlY2lhbCBldmVudCBoYW5kbGVycykKCQkJ
aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHsKCQkJCWlmICggIXNwZWNpYWwu
dGVhcmRvd24gfHwKCQkJCQlzcGVjaWFsLnRlYXJkb3duLmNhbGwoIGVsZW0sIG5hbWVzcGFjZXMs
IGVsZW1EYXRhLmhhbmRsZSApID09PSBmYWxzZSApIHsKCgkJCQkJalF1ZXJ5LnJlbW92ZUV2ZW50
KCBlbGVtLCB0eXBlLCBlbGVtRGF0YS5oYW5kbGUgKTsKCQkJCX0KCgkJCQlkZWxldGUgZXZlbnRz
WyB0eXBlIF07CgkJCX0KCQl9CgoJCS8vIFJlbW92ZSBkYXRhIGFuZCB0aGUgZXhwYW5kbyBpZiBp
dCdzIG5vIGxvbmdlciB1c2VkCgkJaWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggZXZlbnRzICkg
KSB7CgkJCWRhdGFQcml2LnJlbW92ZSggZWxlbSwgImhhbmRsZSBldmVudHMiICk7CgkJfQoJfSwK
CglkaXNwYXRjaDogZnVuY3Rpb24oIG5hdGl2ZUV2ZW50ICkgewoKCQkvLyBNYWtlIGEgd3JpdGFi
bGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2ZSBldmVudCBvYmplY3QKCQl2YXIgZXZlbnQg
PSBqUXVlcnkuZXZlbnQuZml4KCBuYXRpdmVFdmVudCApOwoKCQl2YXIgaSwgaiwgcmV0LCBtYXRj
aGVkLCBoYW5kbGVPYmosIGhhbmRsZXJRdWV1ZSwKCQkJYXJncyA9IG5ldyBBcnJheSggYXJndW1l
bnRzLmxlbmd0aCApLAoJCQloYW5kbGVycyA9ICggZGF0YVByaXYuZ2V0KCB0aGlzLCAiZXZlbnRz
IiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSB8fCBbXSwKCQkJc3BlY2lhbCA9IGpRdWVyeS5ldmVu
dC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307CgoJCS8vIFVzZSB0aGUgZml4LWVkIGpRdWVy
eS5FdmVudCByYXRoZXIgdGhhbiB0aGUgKHJlYWQtb25seSkgbmF0aXZlIGV2ZW50CgkJYXJnc1sg
MCBdID0gZXZlbnQ7CgoJCWZvciAoIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrICkg
ewoJCQlhcmdzWyBpIF0gPSBhcmd1bWVudHNbIGkgXTsKCQl9CgoJCWV2ZW50LmRlbGVnYXRlVGFy
Z2V0ID0gdGhpczsKCgkJLy8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBl
ZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZAoJCWlmICggc3BlY2lhbC5wcmVEaXNw
YXRjaCAmJiBzcGVjaWFsLnByZURpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICkgPT09IGZhbHNl
ICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBEZXRlcm1pbmUgaGFuZGxlcnMKCQloYW5kbGVyUXVl
dWUgPSBqUXVlcnkuZXZlbnQuaGFuZGxlcnMuY2FsbCggdGhpcywgZXZlbnQsIGhhbmRsZXJzICk7
CgoJCS8vIFJ1biBkZWxlZ2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdh
dGlvbiBiZW5lYXRoIHVzCgkJaSA9IDA7CgkJd2hpbGUgKCAoIG1hdGNoZWQgPSBoYW5kbGVyUXVl
dWVbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7CgkJCWV2ZW50
LmN1cnJlbnRUYXJnZXQgPSBtYXRjaGVkLmVsZW07CgoJCQlqID0gMDsKCQkJd2hpbGUgKCAoIGhh
bmRsZU9iaiA9IG1hdGNoZWQuaGFuZGxlcnNbIGorKyBdICkgJiYKCQkJCSFldmVudC5pc0ltbWVk
aWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkgewoKCQkJCS8vIFRyaWdnZXJlZCBldmVudCBtdXN0
IGVpdGhlciAxKSBoYXZlIG5vIG5hbWVzcGFjZSwgb3IgMikgaGF2ZSBuYW1lc3BhY2UocykKCQkJ
CS8vIGEgc3Vic2V0IG9yIGVxdWFsIHRvIHRob3NlIGluIHRoZSBib3VuZCBldmVudCAoYm90aCBj
YW4gaGF2ZSBubyBuYW1lc3BhY2UpLgoJCQkJaWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBldmVu
dC5ybmFtZXNwYWNlLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApIHsKCgkJCQkJZXZlbnQu
aGFuZGxlT2JqID0gaGFuZGxlT2JqOwoJCQkJCWV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTsK
CgkJCQkJcmV0ID0gKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyBoYW5kbGVPYmoub3JpZ1R5cGUg
XSB8fCB7fSApLmhhbmRsZSB8fAoJCQkJCQloYW5kbGVPYmouaGFuZGxlciApLmFwcGx5KCBtYXRj
aGVkLmVsZW0sIGFyZ3MgKTsKCgkJCQkJaWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHsKCQkJCQkJ
aWYgKCAoIGV2ZW50LnJlc3VsdCA9IHJldCApID09PSBmYWxzZSApIHsKCQkJCQkJCWV2ZW50LnBy
ZXZlbnREZWZhdWx0KCk7CgkJCQkJCQlldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKCQkJCQkJfQoJ
CQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJLy8gQ2FsbCB0aGUgcG9zdERpc3BhdGNoIGhvb2sgZm9y
IHRoZSBtYXBwZWQgdHlwZQoJCWlmICggc3BlY2lhbC5wb3N0RGlzcGF0Y2ggKSB7CgkJCXNwZWNp
YWwucG9zdERpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICk7CgkJfQoKCQlyZXR1cm4gZXZlbnQu
cmVzdWx0OwoJfSwKCgloYW5kbGVyczogZnVuY3Rpb24oIGV2ZW50LCBoYW5kbGVycyApIHsKCQl2
YXIgaSwgaGFuZGxlT2JqLCBzZWwsIG1hdGNoZWRIYW5kbGVycywgbWF0Y2hlZFNlbGVjdG9ycywK
CQkJaGFuZGxlclF1ZXVlID0gW10sCgkJCWRlbGVnYXRlQ291bnQgPSBoYW5kbGVycy5kZWxlZ2F0
ZUNvdW50LAoJCQljdXIgPSBldmVudC50YXJnZXQ7CgoJCS8vIEZpbmQgZGVsZWdhdGUgaGFuZGxl
cnMKCQlpZiAoIGRlbGVnYXRlQ291bnQgJiYKCgkJCS8vIFN1cHBvcnQ6IElFIDw9OQoJCQkvLyBC
bGFjay1ob2xlIFNWRyA8dXNlPiBpbnN0YW5jZSB0cmVlcyAodHJhYy0xMzE4MCkKCQkJY3VyLm5v
ZGVUeXBlICYmCgoJCQkvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDIKCQkJLy8gU3VwcHJlc3Mgc3Bl
Yy12aW9sYXRpbmcgY2xpY2tzIGluZGljYXRpbmcgYSBub24tcHJpbWFyeSBwb2ludGVyIGJ1dHRv
biAodHJhYy0zODYxKQoJCQkvLyBodHRwczovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZl
bnRzLyNldmVudC10eXBlLWNsaWNrCgkJCS8vIFN1cHBvcnQ6IElFIDExIG9ubHkKCQkJLy8gLi4u
YnV0IG5vdCBhcnJvdyBrZXkgImNsaWNrcyIgb2YgcmFkaW8gaW5wdXRzLCB3aGljaCBjYW4gaGF2
ZSBgYnV0dG9uYCAtMSAoZ2gtMjM0MykKCQkJISggZXZlbnQudHlwZSA9PT0gImNsaWNrIiAmJiBl
dmVudC5idXR0b24gPj0gMSApICkgewoKCQkJZm9yICggOyBjdXIgIT09IHRoaXM7IGN1ciA9IGN1
ci5wYXJlbnROb2RlIHx8IHRoaXMgKSB7CgoJCQkJLy8gRG9uJ3QgY2hlY2sgbm9uLWVsZW1lbnRz
ICgjMTMyMDgpCgkJCQkvLyBEb24ndCBwcm9jZXNzIGNsaWNrcyBvbiBkaXNhYmxlZCBlbGVtZW50
cyAoIzY5MTEsICM4MTY1LCAjMTEzODIsICMxMTc2NCkKCQkJCWlmICggY3VyLm5vZGVUeXBlID09
PSAxICYmICEoIGV2ZW50LnR5cGUgPT09ICJjbGljayIgJiYgY3VyLmRpc2FibGVkID09PSB0cnVl
ICkgKSB7CgkJCQkJbWF0Y2hlZEhhbmRsZXJzID0gW107CgkJCQkJbWF0Y2hlZFNlbGVjdG9ycyA9
IHt9OwoJCQkJCWZvciAoIGkgPSAwOyBpIDwgZGVsZWdhdGVDb3VudDsgaSsrICkgewoJCQkJCQlo
YW5kbGVPYmogPSBoYW5kbGVyc1sgaSBdOwoKCQkJCQkJLy8gRG9uJ3QgY29uZmxpY3Qgd2l0aCBP
YmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKCMxMzIwMykKCQkJCQkJc2VsID0gaGFuZGxlT2Jq
LnNlbGVjdG9yICsgIiAiOwoKCQkJCQkJaWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSA9PT0g
dW5kZWZpbmVkICkgewoJCQkJCQkJbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPSBoYW5kbGVPYmou
bmVlZHNDb250ZXh0ID8KCQkJCQkJCQlqUXVlcnkoIHNlbCwgdGhpcyApLmluZGV4KCBjdXIgKSA+
IC0xIDoKCQkJCQkJCQlqUXVlcnkuZmluZCggc2VsLCB0aGlzLCBudWxsLCBbIGN1ciBdICkubGVu
Z3RoOwoJCQkJCQl9CgkJCQkJCWlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gKSB7CgkJCQkJ
CQltYXRjaGVkSGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7CgkJCQkJCX0KCQkJCQl9CgkJCQkJ
aWYgKCBtYXRjaGVkSGFuZGxlcnMubGVuZ3RoICkgewoJCQkJCQloYW5kbGVyUXVldWUucHVzaCgg
eyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBtYXRjaGVkSGFuZGxlcnMgfSApOwoJCQkJCX0KCQkJCX0K
CQkJfQoJCX0KCgkJLy8gQWRkIHRoZSByZW1haW5pbmcgKGRpcmVjdGx5LWJvdW5kKSBoYW5kbGVy
cwoJCWN1ciA9IHRoaXM7CgkJaWYgKCBkZWxlZ2F0ZUNvdW50IDwgaGFuZGxlcnMubGVuZ3RoICkg
ewoJCQloYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBoYW5kbGVycy5z
bGljZSggZGVsZWdhdGVDb3VudCApIH0gKTsKCQl9CgoJCXJldHVybiBoYW5kbGVyUXVldWU7Cgl9
LAoKCWFkZFByb3A6IGZ1bmN0aW9uKCBuYW1lLCBob29rICkgewoJCU9iamVjdC5kZWZpbmVQcm9w
ZXJ0eSggalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSwgbmFtZSwgewoJCQllbnVtZXJhYmxlOiB0cnVl
LAoJCQljb25maWd1cmFibGU6IHRydWUsCgoJCQlnZXQ6IGpRdWVyeS5pc0Z1bmN0aW9uKCBob29r
ICkgPwoJCQkJZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCB0aGlzLm9yaWdpbmFsRXZlbnQgKSB7CgkJ
CQkJCQlyZXR1cm4gaG9vayggdGhpcy5vcmlnaW5hbEV2ZW50ICk7CgkJCQkJfQoJCQkJfSA6CgkJ
CQlmdW5jdGlvbigpIHsKCQkJCQlpZiAoIHRoaXMub3JpZ2luYWxFdmVudCApIHsKCQkJCQkJCXJl
dHVybiB0aGlzLm9yaWdpbmFsRXZlbnRbIG5hbWUgXTsKCQkJCQl9CgkJCQl9LAoKCQkJc2V0OiBm
dW5jdGlvbiggdmFsdWUgKSB7CgkJCQlPYmplY3QuZGVmaW5lUHJvcGVydHkoIHRoaXMsIG5hbWUs
IHsKCQkJCQllbnVtZXJhYmxlOiB0cnVlLAoJCQkJCWNvbmZpZ3VyYWJsZTogdHJ1ZSwKCQkJCQl3
cml0YWJsZTogdHJ1ZSwKCQkJCQl2YWx1ZTogdmFsdWUKCQkJCX0gKTsKCQkJfQoJCX0gKTsKCX0s
CgoJZml4OiBmdW5jdGlvbiggb3JpZ2luYWxFdmVudCApIHsKCQlyZXR1cm4gb3JpZ2luYWxFdmVu
dFsgalF1ZXJ5LmV4cGFuZG8gXSA/CgkJCW9yaWdpbmFsRXZlbnQgOgoJCQluZXcgalF1ZXJ5LkV2
ZW50KCBvcmlnaW5hbEV2ZW50ICk7Cgl9LAoKCXNwZWNpYWw6IHsKCQlsb2FkOiB7CgoJCQkvLyBQ
cmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRv
dy5sb2FkCgkJCW5vQnViYmxlOiB0cnVlCgkJfSwKCQlmb2N1czogewoKCQkJLy8gRmlyZSBuYXRp
dmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0CgkJ
CXRyaWdnZXI6IGZ1bmN0aW9uKCkgewoJCQkJaWYgKCB0aGlzICE9PSBzYWZlQWN0aXZlRWxlbWVu
dCgpICYmIHRoaXMuZm9jdXMgKSB7CgkJCQkJdGhpcy5mb2N1cygpOwoJCQkJCXJldHVybiBmYWxz
ZTsKCQkJCX0KCQkJfSwKCQkJZGVsZWdhdGVUeXBlOiAiZm9jdXNpbiIKCQl9LAoJCWJsdXI6IHsK
CQkJdHJpZ2dlcjogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIHRoaXMgPT09IHNhZmVBY3RpdmVFbGVt
ZW50KCkgJiYgdGhpcy5ibHVyICkgewoJCQkJCXRoaXMuYmx1cigpOwoJCQkJCXJldHVybiBmYWxz
ZTsKCQkJCX0KCQkJfSwKCQkJZGVsZWdhdGVUeXBlOiAiZm9jdXNvdXQiCgkJfSwKCQljbGljazog
ewoKCQkJLy8gRm9yIGNoZWNrYm94LCBmaXJlIG5hdGl2ZSBldmVudCBzbyBjaGVja2VkIHN0YXRl
IHdpbGwgYmUgcmlnaHQKCQkJdHJpZ2dlcjogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIHRoaXMudHlw
ZSA9PT0gImNoZWNrYm94IiAmJiB0aGlzLmNsaWNrICYmIG5vZGVOYW1lKCB0aGlzLCAiaW5wdXQi
ICkgKSB7CgkJCQkJdGhpcy5jbGljaygpOwoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJfSwK
CgkJCS8vIEZvciBjcm9zcy1icm93c2VyIGNvbnNpc3RlbmN5LCBkb24ndCBmaXJlIG5hdGl2ZSAu
Y2xpY2soKSBvbiBsaW5rcwoJCQlfZGVmYXVsdDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJcmV0
dXJuIG5vZGVOYW1lKCBldmVudC50YXJnZXQsICJhIiApOwoJCQl9CgkJfSwKCgkJYmVmb3JldW5s
b2FkOiB7CgkJCXBvc3REaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkJCS8vIFN1cHBv
cnQ6IEZpcmVmb3ggMjArCgkJCQkvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVy
blZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuCgkJCQlpZiAoIGV2ZW50LnJlc3VsdCAhPT0gdW5kZWZp
bmVkICYmIGV2ZW50Lm9yaWdpbmFsRXZlbnQgKSB7CgkJCQkJZXZlbnQub3JpZ2luYWxFdmVudC5y
ZXR1cm5WYWx1ZSA9IGV2ZW50LnJlc3VsdDsKCQkJCX0KCQkJfQoJCX0KCX0KfTsKCmpRdWVyeS5y
ZW1vdmVFdmVudCA9IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBoYW5kbGUgKSB7CgoJLy8gVGhpcyAi
aWYiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0cwoJaWYgKCBlbGVtLnJlbW92ZUV2ZW50TGlz
dGVuZXIgKSB7CgkJZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBoYW5kbGUgKTsKCX0K
fTsKCmpRdWVyeS5FdmVudCA9IGZ1bmN0aW9uKCBzcmMsIHByb3BzICkgewoKCS8vIEFsbG93IGlu
c3RhbnRpYXRpb24gd2l0aG91dCB0aGUgJ25ldycga2V5d29yZAoJaWYgKCAhKCB0aGlzIGluc3Rh
bmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7CgkJcmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywg
cHJvcHMgKTsKCX0KCgkvLyBFdmVudCBvYmplY3QKCWlmICggc3JjICYmIHNyYy50eXBlICkgewoJ
CXRoaXMub3JpZ2luYWxFdmVudCA9IHNyYzsKCQl0aGlzLnR5cGUgPSBzcmMudHlwZTsKCgkJLy8g
RXZlbnRzIGJ1YmJsaW5nIHVwIHRoZSBkb2N1bWVudCBtYXkgaGF2ZSBiZWVuIG1hcmtlZCBhcyBw
cmV2ZW50ZWQKCQkvLyBieSBhIGhhbmRsZXIgbG93ZXIgZG93biB0aGUgdHJlZTsgcmVmbGVjdCB0
aGUgY29ycmVjdCB2YWx1ZS4KCQl0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9IHNyYy5kZWZhdWx0
UHJldmVudGVkIHx8CgkJCQlzcmMuZGVmYXVsdFByZXZlbnRlZCA9PT0gdW5kZWZpbmVkICYmCgoJ
CQkJLy8gU3VwcG9ydDogQW5kcm9pZCA8PTIuMyBvbmx5CgkJCQlzcmMucmV0dXJuVmFsdWUgPT09
IGZhbHNlID8KCQkJcmV0dXJuVHJ1ZSA6CgkJCXJldHVybkZhbHNlOwoKCQkvLyBDcmVhdGUgdGFy
Z2V0IHByb3BlcnRpZXMKCQkvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5CgkJLy8gVGFy
Z2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0MykKCQl0aGlzLnRhcmdl
dCA9ICggc3JjLnRhcmdldCAmJiBzcmMudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkgPwoJCQlzcmMu
dGFyZ2V0LnBhcmVudE5vZGUgOgoJCQlzcmMudGFyZ2V0OwoKCQl0aGlzLmN1cnJlbnRUYXJnZXQg
PSBzcmMuY3VycmVudFRhcmdldDsKCQl0aGlzLnJlbGF0ZWRUYXJnZXQgPSBzcmMucmVsYXRlZFRh
cmdldDsKCgkvLyBFdmVudCB0eXBlCgl9IGVsc2UgewoJCXRoaXMudHlwZSA9IHNyYzsKCX0KCgkv
LyBQdXQgZXhwbGljaXRseSBwcm92aWRlZCBwcm9wZXJ0aWVzIG9udG8gdGhlIGV2ZW50IG9iamVj
dAoJaWYgKCBwcm9wcyApIHsKCQlqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApOwoJfQoKCS8v
IENyZWF0ZSBhIHRpbWVzdGFtcCBpZiBpbmNvbWluZyBldmVudCBkb2Vzbid0IGhhdmUgb25lCgl0
aGlzLnRpbWVTdGFtcCA9IHNyYyAmJiBzcmMudGltZVN0YW1wIHx8IGpRdWVyeS5ub3coKTsKCgkv
LyBNYXJrIGl0IGFzIGZpeGVkCgl0aGlzWyBqUXVlcnkuZXhwYW5kbyBdID0gdHJ1ZTsKfTsKCi8v
IGpRdWVyeS5FdmVudCBpcyBiYXNlZCBvbiBET00zIEV2ZW50cyBhcyBzcGVjaWZpZWQgYnkgdGhl
IEVDTUFTY3JpcHQgTGFuZ3VhZ2UgQmluZGluZwovLyBodHRwczovL3d3dy53My5vcmcvVFIvMjAw
My9XRC1ET00tTGV2ZWwtMy1FdmVudHMtMjAwMzAzMzEvZWNtYS1zY3JpcHQtYmluZGluZy5odG1s
CmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7Cgljb25zdHJ1Y3RvcjogalF1ZXJ5LkV2ZW50LAoJ
aXNEZWZhdWx0UHJldmVudGVkOiByZXR1cm5GYWxzZSwKCWlzUHJvcGFnYXRpb25TdG9wcGVkOiBy
ZXR1cm5GYWxzZSwKCWlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSwK
CWlzU2ltdWxhdGVkOiBmYWxzZSwKCglwcmV2ZW50RGVmYXVsdDogZnVuY3Rpb24oKSB7CgkJdmFy
IGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7CgoJCXRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gcmV0
dXJuVHJ1ZTsKCgkJaWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkgewoJCQllLnByZXZlbnRE
ZWZhdWx0KCk7CgkJfQoJfSwKCXN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7CgkJdmFyIGUg
PSB0aGlzLm9yaWdpbmFsRXZlbnQ7CgoJCXRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1
cm5UcnVlOwoKCQlpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7CgkJCWUuc3RvcFByb3Bh
Z2F0aW9uKCk7CgkJfQoJfSwKCXN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7
CgkJdmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7CgoJCXRoaXMuaXNJbW1lZGlhdGVQcm9wYWdh
dGlvblN0b3BwZWQgPSByZXR1cm5UcnVlOwoKCQlpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQg
KSB7CgkJCWUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7CgkJfQoKCQl0aGlzLnN0b3BQcm9w
YWdhdGlvbigpOwoJfQp9OwoKLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNs
dWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHMKalF1ZXJ5LmVhY2go
IHsKCWFsdEtleTogdHJ1ZSwKCWJ1YmJsZXM6IHRydWUsCgljYW5jZWxhYmxlOiB0cnVlLAoJY2hh
bmdlZFRvdWNoZXM6IHRydWUsCgljdHJsS2V5OiB0cnVlLAoJZGV0YWlsOiB0cnVlLAoJZXZlbnRQ
aGFzZTogdHJ1ZSwKCW1ldGFLZXk6IHRydWUsCglwYWdlWDogdHJ1ZSwKCXBhZ2VZOiB0cnVlLAoJ
c2hpZnRLZXk6IHRydWUsCgl2aWV3OiB0cnVlLAoJImNoYXIiOiB0cnVlLAoJY2hhckNvZGU6IHRy
dWUsCglrZXk6IHRydWUsCglrZXlDb2RlOiB0cnVlLAoJYnV0dG9uOiB0cnVlLAoJYnV0dG9uczog
dHJ1ZSwKCWNsaWVudFg6IHRydWUsCgljbGllbnRZOiB0cnVlLAoJb2Zmc2V0WDogdHJ1ZSwKCW9m
ZnNldFk6IHRydWUsCglwb2ludGVySWQ6IHRydWUsCglwb2ludGVyVHlwZTogdHJ1ZSwKCXNjcmVl
blg6IHRydWUsCglzY3JlZW5ZOiB0cnVlLAoJdGFyZ2V0VG91Y2hlczogdHJ1ZSwKCXRvRWxlbWVu
dDogdHJ1ZSwKCXRvdWNoZXM6IHRydWUsCgoJd2hpY2g6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2
YXIgYnV0dG9uID0gZXZlbnQuYnV0dG9uOwoKCQkvLyBBZGQgd2hpY2ggZm9yIGtleSBldmVudHMK
CQlpZiAoIGV2ZW50LndoaWNoID09IG51bGwgJiYgcmtleUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUg
KSApIHsKCQkJcmV0dXJuIGV2ZW50LmNoYXJDb2RlICE9IG51bGwgPyBldmVudC5jaGFyQ29kZSA6
IGV2ZW50LmtleUNvZGU7CgkJfQoKCQkvLyBBZGQgd2hpY2ggZm9yIGNsaWNrOiAxID09PSBsZWZ0
OyAyID09PSBtaWRkbGU7IDMgPT09IHJpZ2h0CgkJaWYgKCAhZXZlbnQud2hpY2ggJiYgYnV0dG9u
ICE9PSB1bmRlZmluZWQgJiYgcm1vdXNlRXZlbnQudGVzdCggZXZlbnQudHlwZSApICkgewoJCQlp
ZiAoIGJ1dHRvbiAmIDEgKSB7CgkJCQlyZXR1cm4gMTsKCQkJfQoKCQkJaWYgKCBidXR0b24gJiAy
ICkgewoJCQkJcmV0dXJuIDM7CgkJCX0KCgkJCWlmICggYnV0dG9uICYgNCApIHsKCQkJCXJldHVy
biAyOwoJCQl9CgoJCQlyZXR1cm4gMDsKCQl9CgoJCXJldHVybiBldmVudC53aGljaDsKCX0KfSwg
alF1ZXJ5LmV2ZW50LmFkZFByb3AgKTsKCi8vIENyZWF0ZSBtb3VzZWVudGVyL2xlYXZlIGV2ZW50
cyB1c2luZyBtb3VzZW92ZXIvb3V0IGFuZCBldmVudC10aW1lIGNoZWNrcwovLyBzbyB0aGF0IGV2
ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LgovLyBEbyB0aGUgc2FtZSBmb3IgcG9pbnRl
cmVudGVyL3BvaW50ZXJsZWF2ZSBhbmQgcG9pbnRlcm92ZXIvcG9pbnRlcm91dAovLwovLyBTdXBw
b3J0OiBTYWZhcmkgNyBvbmx5Ci8vIFNhZmFyaSBzZW5kcyBtb3VzZWVudGVyIHRvbyBvZnRlbjsg
c2VlOgovLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFp
bD9pZD00NzAyNTgKLy8gZm9yIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgYnVnIChpdCBleGlzdGVk
IGluIG9sZGVyIENocm9tZSB2ZXJzaW9ucyBhcyB3ZWxsKS4KalF1ZXJ5LmVhY2goIHsKCW1vdXNl
ZW50ZXI6ICJtb3VzZW92ZXIiLAoJbW91c2VsZWF2ZTogIm1vdXNlb3V0IiwKCXBvaW50ZXJlbnRl
cjogInBvaW50ZXJvdmVyIiwKCXBvaW50ZXJsZWF2ZTogInBvaW50ZXJvdXQiCn0sIGZ1bmN0aW9u
KCBvcmlnLCBmaXggKSB7CglqUXVlcnkuZXZlbnQuc3BlY2lhbFsgb3JpZyBdID0gewoJCWRlbGVn
YXRlVHlwZTogZml4LAoJCWJpbmRUeXBlOiBmaXgsCgoJCWhhbmRsZTogZnVuY3Rpb24oIGV2ZW50
ICkgewoJCQl2YXIgcmV0LAoJCQkJdGFyZ2V0ID0gdGhpcywKCQkJCXJlbGF0ZWQgPSBldmVudC5y
ZWxhdGVkVGFyZ2V0LAoJCQkJaGFuZGxlT2JqID0gZXZlbnQuaGFuZGxlT2JqOwoKCQkJLy8gRm9y
IG1vdXNlZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUg
dGhlIHRhcmdldC4KCQkJLy8gTkI6IE5vIHJlbGF0ZWRUYXJnZXQgaWYgdGhlIG1vdXNlIGxlZnQv
ZW50ZXJlZCB0aGUgYnJvd3NlciB3aW5kb3cKCQkJaWYgKCAhcmVsYXRlZCB8fCAoIHJlbGF0ZWQg
IT09IHRhcmdldCAmJiAhalF1ZXJ5LmNvbnRhaW5zKCB0YXJnZXQsIHJlbGF0ZWQgKSApICkgewoJ
CQkJZXZlbnQudHlwZSA9IGhhbmRsZU9iai5vcmlnVHlwZTsKCQkJCXJldCA9IGhhbmRsZU9iai5o
YW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJCWV2ZW50LnR5cGUgPSBmaXg7CgkJ
CX0KCQkJcmV0dXJuIHJldDsKCQl9Cgl9Owp9ICk7CgpqUXVlcnkuZm4uZXh0ZW5kKCB7CgoJb246
IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkgewoJCXJldHVybiBvbiggdGhp
cywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApOwoJfSwKCW9uZTogZnVuY3Rpb24oIHR5cGVz
LCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7CgkJcmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0
b3IsIGRhdGEsIGZuLCAxICk7Cgl9LAoJb2ZmOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBm
biApIHsKCQl2YXIgaGFuZGxlT2JqLCB0eXBlOwoJCWlmICggdHlwZXMgJiYgdHlwZXMucHJldmVu
dERlZmF1bHQgJiYgdHlwZXMuaGFuZGxlT2JqICkgewoKCQkJLy8gKCBldmVudCApICBkaXNwYXRj
aGVkIGpRdWVyeS5FdmVudAoJCQloYW5kbGVPYmogPSB0eXBlcy5oYW5kbGVPYmo7CgkJCWpRdWVy
eSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoCgkJCQloYW5kbGVPYmoubmFtZXNwYWNlID8K
CQkJCQloYW5kbGVPYmoub3JpZ1R5cGUgKyAiLiIgKyBoYW5kbGVPYmoubmFtZXNwYWNlIDoKCQkJ
CQloYW5kbGVPYmoub3JpZ1R5cGUsCgkJCQloYW5kbGVPYmouc2VsZWN0b3IsCgkJCQloYW5kbGVP
YmouaGFuZGxlcgoJCQkpOwoJCQlyZXR1cm4gdGhpczsKCQl9CgkJaWYgKCB0eXBlb2YgdHlwZXMg
PT09ICJvYmplY3QiICkgewoKCQkJLy8gKCB0eXBlcy1vYmplY3QgWywgc2VsZWN0b3JdICkKCQkJ
Zm9yICggdHlwZSBpbiB0eXBlcyApIHsKCQkJCXRoaXMub2ZmKCB0eXBlLCBzZWxlY3RvciwgdHlw
ZXNbIHR5cGUgXSApOwoJCQl9CgkJCXJldHVybiB0aGlzOwoJCX0KCQlpZiAoIHNlbGVjdG9yID09
PSBmYWxzZSB8fCB0eXBlb2Ygc2VsZWN0b3IgPT09ICJmdW5jdGlvbiIgKSB7CgoJCQkvLyAoIHR5
cGVzIFssIGZuXSApCgkJCWZuID0gc2VsZWN0b3I7CgkJCXNlbGVjdG9yID0gdW5kZWZpbmVkOwoJ
CX0KCQlpZiAoIGZuID09PSBmYWxzZSApIHsKCQkJZm4gPSByZXR1cm5GYWxzZTsKCQl9CgkJcmV0
dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMs
IHR5cGVzLCBmbiwgc2VsZWN0b3IgKTsKCQl9ICk7Cgl9Cn0gKTsKCgp2YXIKCgkvKiBlc2xpbnQt
ZGlzYWJsZSBtYXgtbGVuICovCgoJLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQvZXNs
aW50L2lzc3Vlcy8zMjI5CglyeGh0bWxUYWcgPSAvPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGlt
Z3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbYS16XVteXC9cMD5ceDIwXHRcclxuXGZdKilbXj5d
KilcLz4vZ2ksCgoJLyogZXNsaW50LWVuYWJsZSAqLwoKCS8vIFN1cHBvcnQ6IElFIDw9MTAgLSAx
MSwgRWRnZSAxMiAtIDEzCgkvLyBJbiBJRS9FZGdlIHVzaW5nIHJlZ2V4IGdyb3VwcyBoZXJlIGNh
dXNlcyBzZXZlcmUgc2xvd2Rvd25zLgoJLy8gU2VlIGh0dHBzOi8vY29ubmVjdC5taWNyb3NvZnQu
Y29tL0lFL2ZlZWRiYWNrL2RldGFpbHMvMTczNjUxMi8KCXJub0lubmVyaHRtbCA9IC88c2NyaXB0
fDxzdHlsZXw8bGluay9pLAoKCS8vIGNoZWNrZWQ9ImNoZWNrZWQiIG9yIGNoZWNrZWQKCXJjaGVj
a2VkID0gL2NoZWNrZWRccyooPzpbXj1dfD1ccyouY2hlY2tlZC4pL2ksCglyc2NyaXB0VHlwZU1h
c2tlZCA9IC9edHJ1ZVwvKC4qKS8sCglyY2xlYW5TY3JpcHQgPSAvXlxzKjwhKD86XFtDREFUQVxb
fC0tKXwoPzpcXVxdfC0tKT5ccyokL2c7CgovLyBQcmVmZXIgYSB0Ym9keSBvdmVyIGl0cyBwYXJl
bnQgdGFibGUgZm9yIGNvbnRhaW5pbmcgbmV3IHJvd3MKZnVuY3Rpb24gbWFuaXB1bGF0aW9uVGFy
Z2V0KCBlbGVtLCBjb250ZW50ICkgewoJaWYgKCBub2RlTmFtZSggZWxlbSwgInRhYmxlIiApICYm
CgkJbm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQu
Zmlyc3RDaGlsZCwgInRyIiApICkgewoKCQlyZXR1cm4galF1ZXJ5KCAiPnRib2R5IiwgZWxlbSAp
WyAwIF0gfHwgZWxlbTsKCX0KCglyZXR1cm4gZWxlbTsKfQoKLy8gUmVwbGFjZS9yZXN0b3JlIHRo
ZSB0eXBlIGF0dHJpYnV0ZSBvZiBzY3JpcHQgZWxlbWVudHMgZm9yIHNhZmUgRE9NIG1hbmlwdWxh
dGlvbgpmdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkgewoJZWxlbS50eXBlID0gKCBlbGVt
LmdldEF0dHJpYnV0ZSggInR5cGUiICkgIT09IG51bGwgKSArICIvIiArIGVsZW0udHlwZTsKCXJl
dHVybiBlbGVtOwp9CmZ1bmN0aW9uIHJlc3RvcmVTY3JpcHQoIGVsZW0gKSB7Cgl2YXIgbWF0Y2gg
PSByc2NyaXB0VHlwZU1hc2tlZC5leGVjKCBlbGVtLnR5cGUgKTsKCglpZiAoIG1hdGNoICkgewoJ
CWVsZW0udHlwZSA9IG1hdGNoWyAxIF07Cgl9IGVsc2UgewoJCWVsZW0ucmVtb3ZlQXR0cmlidXRl
KCAidHlwZSIgKTsKCX0KCglyZXR1cm4gZWxlbTsKfQoKZnVuY3Rpb24gY2xvbmVDb3B5RXZlbnQo
IHNyYywgZGVzdCApIHsKCXZhciBpLCBsLCB0eXBlLCBwZGF0YU9sZCwgcGRhdGFDdXIsIHVkYXRh
T2xkLCB1ZGF0YUN1ciwgZXZlbnRzOwoKCWlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHsKCQly
ZXR1cm47Cgl9CgoJLy8gMS4gQ29weSBwcml2YXRlIGRhdGE6IGV2ZW50cywgaGFuZGxlcnMsIGV0
Yy4KCWlmICggZGF0YVByaXYuaGFzRGF0YSggc3JjICkgKSB7CgkJcGRhdGFPbGQgPSBkYXRhUHJp
di5hY2Nlc3MoIHNyYyApOwoJCXBkYXRhQ3VyID0gZGF0YVByaXYuc2V0KCBkZXN0LCBwZGF0YU9s
ZCApOwoJCWV2ZW50cyA9IHBkYXRhT2xkLmV2ZW50czsKCgkJaWYgKCBldmVudHMgKSB7CgkJCWRl
bGV0ZSBwZGF0YUN1ci5oYW5kbGU7CgkJCXBkYXRhQ3VyLmV2ZW50cyA9IHt9OwoKCQkJZm9yICgg
dHlwZSBpbiBldmVudHMgKSB7CgkJCQlmb3IgKCBpID0gMCwgbCA9IGV2ZW50c1sgdHlwZSBdLmxl
bmd0aDsgaSA8IGw7IGkrKyApIHsKCQkJCQlqUXVlcnkuZXZlbnQuYWRkKCBkZXN0LCB0eXBlLCBl
dmVudHNbIHR5cGUgXVsgaSBdICk7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJLy8gMi4gQ29weSB1c2Vy
IGRhdGEKCWlmICggZGF0YVVzZXIuaGFzRGF0YSggc3JjICkgKSB7CgkJdWRhdGFPbGQgPSBkYXRh
VXNlci5hY2Nlc3MoIHNyYyApOwoJCXVkYXRhQ3VyID0galF1ZXJ5LmV4dGVuZCgge30sIHVkYXRh
T2xkICk7CgoJCWRhdGFVc2VyLnNldCggZGVzdCwgdWRhdGFDdXIgKTsKCX0KfQoKLy8gRml4IElF
IGJ1Z3MsIHNlZSBzdXBwb3J0IHRlc3RzCmZ1bmN0aW9uIGZpeElucHV0KCBzcmMsIGRlc3QgKSB7
Cgl2YXIgbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7CgoJLy8gRmFpbHMg
dG8gcGVyc2lzdCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiBhIGNsb25lZCBjaGVja2JveCBvciByYWRp
byBidXR0b24uCglpZiAoIG5vZGVOYW1lID09PSAiaW5wdXQiICYmIHJjaGVja2FibGVUeXBlLnRl
c3QoIHNyYy50eXBlICkgKSB7CgkJZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7CgoJLy8gRmFp
bHMgdG8gcmV0dXJuIHRoZSBzZWxlY3RlZCBvcHRpb24gdG8gdGhlIGRlZmF1bHQgc2VsZWN0ZWQg
c3RhdGUgd2hlbiBjbG9uaW5nIG9wdGlvbnMKCX0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSAiaW5w
dXQiIHx8IG5vZGVOYW1lID09PSAidGV4dGFyZWEiICkgewoJCWRlc3QuZGVmYXVsdFZhbHVlID0g
c3JjLmRlZmF1bHRWYWx1ZTsKCX0KfQoKZnVuY3Rpb24gZG9tTWFuaXAoIGNvbGxlY3Rpb24sIGFy
Z3MsIGNhbGxiYWNrLCBpZ25vcmVkICkgewoKCS8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXMK
CWFyZ3MgPSBjb25jYXQuYXBwbHkoIFtdLCBhcmdzICk7CgoJdmFyIGZyYWdtZW50LCBmaXJzdCwg
c2NyaXB0cywgaGFzU2NyaXB0cywgbm9kZSwgZG9jLAoJCWkgPSAwLAoJCWwgPSBjb2xsZWN0aW9u
Lmxlbmd0aCwKCQlpTm9DbG9uZSA9IGwgLSAxLAoJCXZhbHVlID0gYXJnc1sgMCBdLAoJCWlzRnVu
Y3Rpb24gPSBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKTsKCgkvLyBXZSBjYW4ndCBjbG9uZU5v
ZGUgZnJhZ21lbnRzIHRoYXQgY29udGFpbiBjaGVja2VkLCBpbiBXZWJLaXQKCWlmICggaXNGdW5j
dGlvbiB8fAoJCQkoIGwgPiAxICYmIHR5cGVvZiB2YWx1ZSA9PT0gInN0cmluZyIgJiYKCQkJCSFz
dXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkgewoJCXJldHVy
biBjb2xsZWN0aW9uLmVhY2goIGZ1bmN0aW9uKCBpbmRleCApIHsKCQkJdmFyIHNlbGYgPSBjb2xs
ZWN0aW9uLmVxKCBpbmRleCApOwoJCQlpZiAoIGlzRnVuY3Rpb24gKSB7CgkJCQlhcmdzWyAwIF0g
PSB2YWx1ZS5jYWxsKCB0aGlzLCBpbmRleCwgc2VsZi5odG1sKCkgKTsKCQkJfQoJCQlkb21NYW5p
cCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTsKCQl9ICk7Cgl9CgoJaWYgKCBsICkg
ewoJCWZyYWdtZW50ID0gYnVpbGRGcmFnbWVudCggYXJncywgY29sbGVjdGlvblsgMCBdLm93bmVy
RG9jdW1lbnQsIGZhbHNlLCBjb2xsZWN0aW9uLCBpZ25vcmVkICk7CgkJZmlyc3QgPSBmcmFnbWVu
dC5maXJzdENoaWxkOwoKCQlpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkg
ewoJCQlmcmFnbWVudCA9IGZpcnN0OwoJCX0KCgkJLy8gUmVxdWlyZSBlaXRoZXIgbmV3IGNvbnRl
bnQgb3IgYW4gaW50ZXJlc3QgaW4gaWdub3JlZCBlbGVtZW50cyB0byBpbnZva2UgdGhlIGNhbGxi
YWNrCgkJaWYgKCBmaXJzdCB8fCBpZ25vcmVkICkgewoJCQlzY3JpcHRzID0galF1ZXJ5Lm1hcCgg
Z2V0QWxsKCBmcmFnbWVudCwgInNjcmlwdCIgKSwgZGlzYWJsZVNjcmlwdCApOwoJCQloYXNTY3Jp
cHRzID0gc2NyaXB0cy5sZW5ndGg7CgoJCQkvLyBVc2UgdGhlIG9yaWdpbmFsIGZyYWdtZW50IGZv
ciB0aGUgbGFzdCBpdGVtCgkJCS8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2Fu
IGVuZCB1cAoJCQkvLyBiZWluZyBlbXB0aWVkIGluY29ycmVjdGx5IGluIGNlcnRhaW4gc2l0dWF0
aW9ucyAoIzgwNzApLgoJCQlmb3IgKCA7IGkgPCBsOyBpKysgKSB7CgkJCQlub2RlID0gZnJhZ21l
bnQ7CgoJCQkJaWYgKCBpICE9PSBpTm9DbG9uZSApIHsKCQkJCQlub2RlID0galF1ZXJ5LmNsb25l
KCBub2RlLCB0cnVlLCB0cnVlICk7CgoJCQkJCS8vIEtlZXAgcmVmZXJlbmNlcyB0byBjbG9uZWQg
c2NyaXB0cyBmb3IgbGF0ZXIgcmVzdG9yYXRpb24KCQkJCQlpZiAoIGhhc1NjcmlwdHMgKSB7CgoJ
CQkJCQkvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHkKCQkJ
CQkJLy8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdAoJ
CQkJCQlqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgInNjcmlwdCIgKSApOwoJ
CQkJCX0KCQkJCX0KCgkJCQljYWxsYmFjay5jYWxsKCBjb2xsZWN0aW9uWyBpIF0sIG5vZGUsIGkg
KTsKCQkJfQoKCQkJaWYgKCBoYXNTY3JpcHRzICkgewoJCQkJZG9jID0gc2NyaXB0c1sgc2NyaXB0
cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDsKCgkJCQkvLyBSZWVuYWJsZSBzY3JpcHRzCgkJ
CQlqUXVlcnkubWFwKCBzY3JpcHRzLCByZXN0b3JlU2NyaXB0ICk7CgoJCQkJLy8gRXZhbHVhdGUg
ZXhlY3V0YWJsZSBzY3JpcHRzIG9uIGZpcnN0IGRvY3VtZW50IGluc2VydGlvbgoJCQkJZm9yICgg
aSA9IDA7IGkgPCBoYXNTY3JpcHRzOyBpKysgKSB7CgkJCQkJbm9kZSA9IHNjcmlwdHNbIGkgXTsK
CQkJCQlpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIG5vZGUudHlwZSB8fCAiIiApICYmCgkJCQkJCSFk
YXRhUHJpdi5hY2Nlc3MoIG5vZGUsICJnbG9iYWxFdmFsIiApICYmCgkJCQkJCWpRdWVyeS5jb250
YWlucyggZG9jLCBub2RlICkgKSB7CgoJCQkJCQlpZiAoIG5vZGUuc3JjICkgewoKCQkJCQkJCS8v
IE9wdGlvbmFsIEFKQVggZGVwZW5kZW5jeSwgYnV0IHdvbid0IHJ1biBzY3JpcHRzIGlmIG5vdCBw
cmVzZW50CgkJCQkJCQlpZiAoIGpRdWVyeS5fZXZhbFVybCApIHsKCQkJCQkJCQlqUXVlcnkuX2V2
YWxVcmwoIG5vZGUuc3JjICk7CgkJCQkJCQl9CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlET01FdmFs
KCBub2RlLnRleHRDb250ZW50LnJlcGxhY2UoIHJjbGVhblNjcmlwdCwgIiIgKSwgZG9jICk7CgkJ
CQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQl9Cgl9CgoJcmV0dXJuIGNvbGxlY3Rpb247Cn0KCmZ1
bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkgewoJdmFyIG5vZGUsCgkJ
bm9kZXMgPSBzZWxlY3RvciA/IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBlbGVtICkgOiBlbGVt
LAoJCWkgPSAwOwoKCWZvciAoIDsgKCBub2RlID0gbm9kZXNbIGkgXSApICE9IG51bGw7IGkrKyAp
IHsKCQlpZiAoICFrZWVwRGF0YSAmJiBub2RlLm5vZGVUeXBlID09PSAxICkgewoJCQlqUXVlcnku
Y2xlYW5EYXRhKCBnZXRBbGwoIG5vZGUgKSApOwoJCX0KCgkJaWYgKCBub2RlLnBhcmVudE5vZGUg
KSB7CgkJCWlmICgga2VlcERhdGEgJiYgalF1ZXJ5LmNvbnRhaW5zKCBub2RlLm93bmVyRG9jdW1l
bnQsIG5vZGUgKSApIHsKCQkJCXNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgInNjcmlwdCIg
KSApOwoJCQl9CgkJCW5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggbm9kZSApOwoJCX0KCX0K
CglyZXR1cm4gZWxlbTsKfQoKalF1ZXJ5LmV4dGVuZCggewoJaHRtbFByZWZpbHRlcjogZnVuY3Rp
b24oIGh0bWwgKSB7CgkJcmV0dXJuIGh0bWwucmVwbGFjZSggcnhodG1sVGFnLCAiPCQxPjwvJDI+
IiApOwoJfSwKCgljbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRh
QW5kRXZlbnRzICkgewoJCXZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLAoJCQlj
bG9uZSA9IGVsZW0uY2xvbmVOb2RlKCB0cnVlICksCgkJCWluUGFnZSA9IGpRdWVyeS5jb250YWlu
cyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICk7CgoJCS8vIEZpeCBJRSBjbG9uaW5nIGlzc3Vl
cwoJCWlmICggIXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgJiYgKCBlbGVtLm5vZGVUeXBlID09PSAx
IHx8IGVsZW0ubm9kZVR5cGUgPT09IDExICkgJiYKCQkJCSFqUXVlcnkuaXNYTUxEb2MoIGVsZW0g
KSApIHsKCgkJCS8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29u
czogaHR0cHM6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMgoJCQlkZXN0RWxlbWVudHMg
PSBnZXRBbGwoIGNsb25lICk7CgkJCXNyY0VsZW1lbnRzID0gZ2V0QWxsKCBlbGVtICk7CgoJCQlm
b3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHsKCQkJCWZp
eElucHV0KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApOwoJCQl9CgkJfQoK
CQkvLyBDb3B5IHRoZSBldmVudHMgZnJvbSB0aGUgb3JpZ2luYWwgdG8gdGhlIGNsb25lCgkJaWYg
KCBkYXRhQW5kRXZlbnRzICkgewoJCQlpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkgewoJCQkJc3Jj
RWxlbWVudHMgPSBzcmNFbGVtZW50cyB8fCBnZXRBbGwoIGVsZW0gKTsKCQkJCWRlc3RFbGVtZW50
cyA9IGRlc3RFbGVtZW50cyB8fCBnZXRBbGwoIGNsb25lICk7CgoJCQkJZm9yICggaSA9IDAsIGwg
PSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQkJY2xvbmVDb3B5RXZlbnQo
IHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7CgkJCQl9CgkJCX0gZWxzZSB7
CgkJCQljbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTsKCQkJfQoJCX0KCgkJLy8gUHJlc2Vy
dmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeQoJCWRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xv
bmUsICJzY3JpcHQiICk7CgkJaWYgKCBkZXN0RWxlbWVudHMubGVuZ3RoID4gMCApIHsKCQkJc2V0
R2xvYmFsRXZhbCggZGVzdEVsZW1lbnRzLCAhaW5QYWdlICYmIGdldEFsbCggZWxlbSwgInNjcmlw
dCIgKSApOwoJCX0KCgkJLy8gUmV0dXJuIHRoZSBjbG9uZWQgc2V0CgkJcmV0dXJuIGNsb25lOwoJ
fSwKCgljbGVhbkRhdGE6IGZ1bmN0aW9uKCBlbGVtcyApIHsKCQl2YXIgZGF0YSwgZWxlbSwgdHlw
ZSwKCQkJc3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsLAoJCQlpID0gMDsKCgkJZm9yICgg
OyAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT09IHVuZGVmaW5lZDsgaSsrICkgewoJCQlpZiAoIGFj
Y2VwdERhdGEoIGVsZW0gKSApIHsKCQkJCWlmICggKCBkYXRhID0gZWxlbVsgZGF0YVByaXYuZXhw
YW5kbyBdICkgKSB7CgkJCQkJaWYgKCBkYXRhLmV2ZW50cyApIHsKCQkJCQkJZm9yICggdHlwZSBp
biBkYXRhLmV2ZW50cyApIHsKCQkJCQkJCWlmICggc3BlY2lhbFsgdHlwZSBdICkgewoJCQkJCQkJ
CWpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKTsKCgkJCQkJCQkvLyBUaGlzIGlzIGEg
c2hvcnRjdXQgdG8gYXZvaWQgalF1ZXJ5LmV2ZW50LnJlbW92ZSdzIG92ZXJoZWFkCgkJCQkJCQl9
IGVsc2UgewoJCQkJCQkJCWpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5k
bGUgKTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCgkJCQkJLy8gU3VwcG9ydDogQ2hyb21lIDw9
MzUgLSA0NSsKCQkJCQkvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRl
LCBzZWUgRGF0YSNyZW1vdmUKCQkJCQllbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gPSB1bmRlZmlu
ZWQ7CgkJCQl9CgkJCQlpZiAoIGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSApIHsKCgkJCQkJLy8g
U3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NSsKCQkJCQkvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3Rl
YWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmUKCQkJCQllbGVtWyBkYXRhVXNlci5l
eHBhbmRvIF0gPSB1bmRlZmluZWQ7CgkJCQl9CgkJCX0KCQl9Cgl9Cn0gKTsKCmpRdWVyeS5mbi5l
eHRlbmQoIHsKCWRldGFjaDogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJldHVybiByZW1vdmUo
IHRoaXMsIHNlbGVjdG9yLCB0cnVlICk7Cgl9LAoKCXJlbW92ZTogZnVuY3Rpb24oIHNlbGVjdG9y
ICkgewoJCXJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yICk7Cgl9LAoKCXRleHQ6IGZ1bmN0
aW9uKCB2YWx1ZSApIHsKCQlyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7
CgkJCXJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID8KCQkJCWpRdWVyeS50ZXh0KCB0aGlzICkg
OgoJCQkJdGhpcy5lbXB0eSgpLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJCWlmICggdGhpcy5ub2Rl
VHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5
ICkgewoJCQkJCQl0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7CgkJCQkJfQoJCQkJfSApOwoJCX0s
IG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7Cgl9LAoKCWFwcGVuZDogZnVuY3Rpb24o
KSB7CgkJcmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkg
ewoJCQlpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwg
dGhpcy5ub2RlVHlwZSA9PT0gOSApIHsKCQkJCXZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJn
ZXQoIHRoaXMsIGVsZW0gKTsKCQkJCXRhcmdldC5hcHBlbmRDaGlsZCggZWxlbSApOwoJCQl9CgkJ
fSApOwoJfSwKCglwcmVwZW5kOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gZG9tTWFuaXAoIHRoaXMs
IGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7CgkJCWlmICggdGhpcy5ub2RlVHlwZSA9PT0g
MSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkgewoJCQkJ
dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApOwoJCQkJdGFyZ2V0
Lmluc2VydEJlZm9yZSggZWxlbSwgdGFyZ2V0LmZpcnN0Q2hpbGQgKTsKCQkJfQoJCX0gKTsKCX0s
CgoJYmVmb3JlOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50
cywgZnVuY3Rpb24oIGVsZW0gKSB7CgkJCWlmICggdGhpcy5wYXJlbnROb2RlICkgewoJCQkJdGhp
cy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcyApOwoJCQl9CgkJfSApOwoJfSwK
CglhZnRlcjogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMs
IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlpZiAoIHRoaXMucGFyZW50Tm9kZSApIHsKCQkJCXRoaXMu
cGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMubmV4dFNpYmxpbmcgKTsKCQkJfQoJ
CX0gKTsKCX0sCgoJZW1wdHk6IGZ1bmN0aW9uKCkgewoJCXZhciBlbGVtLAoJCQlpID0gMDsKCgkJ
Zm9yICggOyAoIGVsZW0gPSB0aGlzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7CgkJCWlmICggZWxl
bS5ub2RlVHlwZSA9PT0gMSApIHsKCgkJCQkvLyBQcmV2ZW50IG1lbW9yeSBsZWFrcwoJCQkJalF1
ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7CgoJCQkJLy8gUmVtb3ZlIGFu
eSByZW1haW5pbmcgbm9kZXMKCQkJCWVsZW0udGV4dENvbnRlbnQgPSAiIjsKCQkJfQoJCX0KCgkJ
cmV0dXJuIHRoaXM7Cgl9LAoKCWNsb25lOiBmdW5jdGlvbiggZGF0YUFuZEV2ZW50cywgZGVlcERh
dGFBbmRFdmVudHMgKSB7CgkJZGF0YUFuZEV2ZW50cyA9IGRhdGFBbmRFdmVudHMgPT0gbnVsbCA/
IGZhbHNlIDogZGF0YUFuZEV2ZW50czsKCQlkZWVwRGF0YUFuZEV2ZW50cyA9IGRlZXBEYXRhQW5k
RXZlbnRzID09IG51bGwgPyBkYXRhQW5kRXZlbnRzIDogZGVlcERhdGFBbmRFdmVudHM7CgoJCXJl
dHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7CgkJCXJldHVybiBqUXVlcnkuY2xvbmUoIHRoaXMs
IGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICk7CgkJfSApOwoJfSwKCglodG1sOiBm
dW5jdGlvbiggdmFsdWUgKSB7CgkJcmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVl
ICkgewoJCQl2YXIgZWxlbSA9IHRoaXNbIDAgXSB8fCB7fSwKCQkJCWkgPSAwLAoJCQkJbCA9IHRo
aXMubGVuZ3RoOwoKCQkJaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUg
PT09IDEgKSB7CgkJCQlyZXR1cm4gZWxlbS5pbm5lckhUTUw7CgkJCX0KCgkJCS8vIFNlZSBpZiB3
ZSBjYW4gdGFrZSBhIHNob3J0Y3V0IGFuZCBqdXN0IHVzZSBpbm5lckhUTUwKCQkJaWYgKCB0eXBl
b2YgdmFsdWUgPT09ICJzdHJpbmciICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJgoJ
CQkJIXdyYXBNYXBbICggcnRhZ05hbWUuZXhlYyggdmFsdWUgKSB8fCBbICIiLCAiIiBdIClbIDEg
XS50b0xvd2VyQ2FzZSgpIF0gKSB7CgoJCQkJdmFsdWUgPSBqUXVlcnkuaHRtbFByZWZpbHRlcigg
dmFsdWUgKTsKCgkJCQl0cnkgewoJCQkJCWZvciAoIDsgaSA8IGw7IGkrKyApIHsKCQkJCQkJZWxl
bSA9IHRoaXNbIGkgXSB8fCB7fTsKCgkJCQkJCS8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBw
cmV2ZW50IG1lbW9yeSBsZWFrcwoJCQkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7CgkJ
CQkJCQlqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTsKCQkJCQkJCWVs
ZW0uaW5uZXJIVE1MID0gdmFsdWU7CgkJCQkJCX0KCQkJCQl9CgoJCQkJCWVsZW0gPSAwOwoKCQkJ
CS8vIElmIHVzaW5nIGlubmVySFRNTCB0aHJvd3MgYW4gZXhjZXB0aW9uLCB1c2UgdGhlIGZhbGxi
YWNrIG1ldGhvZAoJCQkJfSBjYXRjaCAoIGUgKSB7fQoJCQl9CgoJCQlpZiAoIGVsZW0gKSB7CgkJ
CQl0aGlzLmVtcHR5KCkuYXBwZW5kKCB2YWx1ZSApOwoJCQl9CgkJfSwgbnVsbCwgdmFsdWUsIGFy
Z3VtZW50cy5sZW5ndGggKTsKCX0sCgoJcmVwbGFjZVdpdGg6IGZ1bmN0aW9uKCkgewoJCXZhciBp
Z25vcmVkID0gW107CgoJCS8vIE1ha2UgdGhlIGNoYW5nZXMsIHJlcGxhY2luZyBlYWNoIG5vbi1p
Z25vcmVkIGNvbnRleHQgZWxlbWVudCB3aXRoIHRoZSBuZXcgY29udGVudAoJCXJldHVybiBkb21N
YW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHsKCQkJdmFyIHBhcmVudCA9
IHRoaXMucGFyZW50Tm9kZTsKCgkJCWlmICggalF1ZXJ5LmluQXJyYXkoIHRoaXMsIGlnbm9yZWQg
KSA8IDAgKSB7CgkJCQlqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIHRoaXMgKSApOwoJCQkJaWYg
KCBwYXJlbnQgKSB7CgkJCQkJcGFyZW50LnJlcGxhY2VDaGlsZCggZWxlbSwgdGhpcyApOwoJCQkJ
fQoJCQl9CgoJCS8vIEZvcmNlIGNhbGxiYWNrIGludm9jYXRpb24KCQl9LCBpZ25vcmVkICk7Cgl9
Cn0gKTsKCmpRdWVyeS5lYWNoKCB7CglhcHBlbmRUbzogImFwcGVuZCIsCglwcmVwZW5kVG86ICJw
cmVwZW5kIiwKCWluc2VydEJlZm9yZTogImJlZm9yZSIsCglpbnNlcnRBZnRlcjogImFmdGVyIiwK
CXJlcGxhY2VBbGw6ICJyZXBsYWNlV2l0aCIKfSwgZnVuY3Rpb24oIG5hbWUsIG9yaWdpbmFsICkg
ewoJalF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJdmFyIGVsZW1z
LAoJCQlyZXQgPSBbXSwKCQkJaW5zZXJ0ID0galF1ZXJ5KCBzZWxlY3RvciApLAoJCQlsYXN0ID0g
aW5zZXJ0Lmxlbmd0aCAtIDEsCgkJCWkgPSAwOwoKCQlmb3IgKCA7IGkgPD0gbGFzdDsgaSsrICkg
ewoJCQllbGVtcyA9IGkgPT09IGxhc3QgPyB0aGlzIDogdGhpcy5jbG9uZSggdHJ1ZSApOwoJCQlq
UXVlcnkoIGluc2VydFsgaSBdIClbIG9yaWdpbmFsIF0oIGVsZW1zICk7CgoJCQkvLyBTdXBwb3J0
OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHkKCQkJLy8gLmdldCgpIGJlY2F1
c2UgcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdAoJCQlw
dXNoLmFwcGx5KCByZXQsIGVsZW1zLmdldCgpICk7CgkJfQoKCQlyZXR1cm4gdGhpcy5wdXNoU3Rh
Y2soIHJldCApOwoJfTsKfSApOwp2YXIgcm1hcmdpbiA9ICggL15tYXJnaW4vICk7Cgp2YXIgcm51
bW5vbnB4ID0gbmV3IFJlZ0V4cCggIl4oIiArIHBudW0gKyAiKSg/IXB4KVthLXolXSskIiwgImki
ICk7Cgp2YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24oIGVsZW0gKSB7CgoJCS8vIFN1cHBvcnQ6IElF
IDw9MTEgb25seSwgRmlyZWZveCA8PTMwICgjMTUwOTgsICMxNDE1MCkKCQkvLyBJRSB0aHJvd3Mg
b24gZWxlbWVudHMgY3JlYXRlZCBpbiBwb3B1cHMKCQkvLyBGRiBtZWFud2hpbGUgdGhyb3dzIG9u
IGZyYW1lIGVsZW1lbnRzIHRocm91Z2ggImRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUiCgkJ
dmFyIHZpZXcgPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7CgoJCWlmICggIXZpZXcg
fHwgIXZpZXcub3BlbmVyICkgewoJCQl2aWV3ID0gd2luZG93OwoJCX0KCgkJcmV0dXJuIHZpZXcu
Z2V0Q29tcHV0ZWRTdHlsZSggZWxlbSApOwoJfTsKCgoKKCBmdW5jdGlvbigpIHsKCgkvLyBFeGVj
dXRpbmcgYm90aCBwaXhlbFBvc2l0aW9uICYgYm94U2l6aW5nUmVsaWFibGUgdGVzdHMgcmVxdWly
ZSBvbmx5IG9uZSBsYXlvdXQKCS8vIHNvIHRoZXkncmUgZXhlY3V0ZWQgYXQgdGhlIHNhbWUgdGlt
ZSB0byBzYXZlIHRoZSBzZWNvbmQgY29tcHV0YXRpb24uCglmdW5jdGlvbiBjb21wdXRlU3R5bGVU
ZXN0cygpIHsKCgkJLy8gVGhpcyBpcyBhIHNpbmdsZXRvbiwgd2UgbmVlZCB0byBleGVjdXRlIGl0
IG9ubHkgb25jZQoJCWlmICggIWRpdiApIHsKCQkJcmV0dXJuOwoJCX0KCgkJZGl2LnN0eWxlLmNz
c1RleHQgPQoJCQkiYm94LXNpemluZzpib3JkZXItYm94OyIgKwoJCQkicG9zaXRpb246cmVsYXRp
dmU7ZGlzcGxheTpibG9jazsiICsKCQkJIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzox
cHg7IiArCgkJCSJ0b3A6MSU7d2lkdGg6NTAlIjsKCQlkaXYuaW5uZXJIVE1MID0gIiI7CgkJZG9j
dW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKCBjb250YWluZXIgKTsKCgkJdmFyIGRpdlN0eWxlID0g
d2luZG93LmdldENvbXB1dGVkU3R5bGUoIGRpdiApOwoJCXBpeGVsUG9zaXRpb25WYWwgPSBkaXZT
dHlsZS50b3AgIT09ICIxJSI7CgoJCS8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHks
IEZpcmVmb3ggPD0zIC0gNDQKCQlyZWxpYWJsZU1hcmdpbkxlZnRWYWwgPSBkaXZTdHlsZS5tYXJn
aW5MZWZ0ID09PSAiMnB4IjsKCQlib3hTaXppbmdSZWxpYWJsZVZhbCA9IGRpdlN0eWxlLndpZHRo
ID09PSAiNHB4IjsKCgkJLy8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seQoJCS8vIFNv
bWUgc3R5bGVzIGNvbWUgYmFjayB3aXRoIHBlcmNlbnRhZ2UgdmFsdWVzLCBldmVuIHRob3VnaCB0
aGV5IHNob3VsZG4ndAoJCWRpdi5zdHlsZS5tYXJnaW5SaWdodCA9ICI1MCUiOwoJCXBpeGVsTWFy
Z2luUmlnaHRWYWwgPSBkaXZTdHlsZS5tYXJnaW5SaWdodCA9PT0gIjRweCI7CgoJCWRvY3VtZW50
RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7CgoJCS8vIE51bGxpZnkgdGhlIGRpdiBz
byBpdCB3b3VsZG4ndCBiZSBzdG9yZWQgaW4gdGhlIG1lbW9yeSBhbmQKCQkvLyBpdCB3aWxsIGFs
c28gYmUgYSBzaWduIHRoYXQgY2hlY2tzIGFscmVhZHkgcGVyZm9ybWVkCgkJZGl2ID0gbnVsbDsK
CX0KCgl2YXIgcGl4ZWxQb3NpdGlvblZhbCwgYm94U2l6aW5nUmVsaWFibGVWYWwsIHBpeGVsTWFy
Z2luUmlnaHRWYWwsIHJlbGlhYmxlTWFyZ2luTGVmdFZhbCwKCQljb250YWluZXIgPSBkb2N1bWVu
dC5jcmVhdGVFbGVtZW50KCAiZGl2IiApLAoJCWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQo
ICJkaXYiICk7CgoJLy8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZp
cm9ubWVudHMKCWlmICggIWRpdi5zdHlsZSApIHsKCQlyZXR1cm47Cgl9CgoJLy8gU3VwcG9ydDog
SUUgPD05IC0gMTEgb25seQoJLy8gU3R5bGUgb2YgY2xvbmVkIGVsZW1lbnQgYWZmZWN0cyBzb3Vy
Y2UgZWxlbWVudCBjbG9uZWQgKCM4OTA4KQoJZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gImNv
bnRlbnQtYm94IjsKCWRpdi5jbG9uZU5vZGUoIHRydWUgKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9
ICIiOwoJc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgPSBkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAg
PT09ICJjb250ZW50LWJveCI7CgoJY29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSAiYm9yZGVyOjA7
d2lkdGg6OHB4O2hlaWdodDowO3RvcDowO2xlZnQ6LTk5OTlweDsiICsKCQkicGFkZGluZzowO21h
cmdpbi10b3A6MXB4O3Bvc2l0aW9uOmFic29sdXRlIjsKCWNvbnRhaW5lci5hcHBlbmRDaGlsZCgg
ZGl2ICk7CgoJalF1ZXJ5LmV4dGVuZCggc3VwcG9ydCwgewoJCXBpeGVsUG9zaXRpb246IGZ1bmN0
aW9uKCkgewoJCQljb21wdXRlU3R5bGVUZXN0cygpOwoJCQlyZXR1cm4gcGl4ZWxQb3NpdGlvblZh
bDsKCQl9LAoJCWJveFNpemluZ1JlbGlhYmxlOiBmdW5jdGlvbigpIHsKCQkJY29tcHV0ZVN0eWxl
VGVzdHMoKTsKCQkJcmV0dXJuIGJveFNpemluZ1JlbGlhYmxlVmFsOwoJCX0sCgkJcGl4ZWxNYXJn
aW5SaWdodDogZnVuY3Rpb24oKSB7CgkJCWNvbXB1dGVTdHlsZVRlc3RzKCk7CgkJCXJldHVybiBw
aXhlbE1hcmdpblJpZ2h0VmFsOwoJCX0sCgkJcmVsaWFibGVNYXJnaW5MZWZ0OiBmdW5jdGlvbigp
IHsKCQkJY29tcHV0ZVN0eWxlVGVzdHMoKTsKCQkJcmV0dXJuIHJlbGlhYmxlTWFyZ2luTGVmdFZh
bDsKCQl9Cgl9ICk7Cn0gKSgpOwoKCmZ1bmN0aW9uIGN1ckNTUyggZWxlbSwgbmFtZSwgY29tcHV0
ZWQgKSB7Cgl2YXIgd2lkdGgsIG1pbldpZHRoLCBtYXhXaWR0aCwgcmV0LAoKCQkvLyBTdXBwb3J0
OiBGaXJlZm94IDUxKwoJCS8vIFJldHJpZXZpbmcgc3R5bGUgYmVmb3JlIGNvbXB1dGVkIHNvbWVo
b3cKCQkvLyBmaXhlcyBhbiBpc3N1ZSB3aXRoIGdldHRpbmcgd3JvbmcgdmFsdWVzCgkJLy8gb24g
ZGV0YWNoZWQgZWxlbWVudHMKCQlzdHlsZSA9IGVsZW0uc3R5bGU7CgoJY29tcHV0ZWQgPSBjb21w
dXRlZCB8fCBnZXRTdHlsZXMoIGVsZW0gKTsKCgkvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG5lZWRl
ZCBmb3I6CgkvLyAgIC5jc3MoJ2ZpbHRlcicpIChJRSA5IG9ubHksICMxMjUzNykKCS8vICAgLmNz
cygnLS1jdXN0b21Qcm9wZXJ0eSkgKCMzMTQ0KQoJaWYgKCBjb21wdXRlZCApIHsKCQlyZXQgPSBj
b21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCBuYW1lICkgfHwgY29tcHV0ZWRbIG5hbWUgXTsKCgkJ
aWYgKCByZXQgPT09ICIiICYmICFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwg
ZWxlbSApICkgewoJCQlyZXQgPSBqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUgKTsKCQl9CgoJCS8v
IEEgdHJpYnV0ZSB0byB0aGUgImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHMiCgkJLy8gQW5k
cm9pZCBCcm93c2VyIHJldHVybnMgcGVyY2VudGFnZSBmb3Igc29tZSB2YWx1ZXMsCgkJLy8gYnV0
IHdpZHRoIHNlZW1zIHRvIGJlIHJlbGlhYmx5IHBpeGVscy4KCQkvLyBUaGlzIGlzIGFnYWluc3Qg
dGhlIENTU09NIGRyYWZ0IHNwZWM6CgkJLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzc29t
LyNyZXNvbHZlZC12YWx1ZXMKCQlpZiAoICFzdXBwb3J0LnBpeGVsTWFyZ2luUmlnaHQoKSAmJiBy
bnVtbm9ucHgudGVzdCggcmV0ICkgJiYgcm1hcmdpbi50ZXN0KCBuYW1lICkgKSB7CgoJCQkvLyBS
ZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzCgkJCXdpZHRoID0gc3R5bGUud2lkdGg7CgkJCW1p
bldpZHRoID0gc3R5bGUubWluV2lkdGg7CgkJCW1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7CgoJ
CQkvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0CgkJ
CXN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDsKCQkJ
cmV0ID0gY29tcHV0ZWQud2lkdGg7CgoJCQkvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzCgkJ
CXN0eWxlLndpZHRoID0gd2lkdGg7CgkJCXN0eWxlLm1pbldpZHRoID0gbWluV2lkdGg7CgkJCXN0
eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7CgkJfQoJfQoKCXJldHVybiByZXQgIT09IHVuZGVmaW5l
ZCA/CgoJCS8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHkKCQkvLyBJRSByZXR1cm5zIHpJbmRl
eCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLgoJCXJldCArICIiIDoKCQlyZXQ7Cn0KCgpmdW5jdGlvbiBh
ZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7CgoJLy8gRGVmaW5lIHRoZSBob29r
LCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC4KCXJl
dHVybiB7CgkJZ2V0OiBmdW5jdGlvbigpIHsKCQkJaWYgKCBjb25kaXRpb25GbigpICkgewoKCQkJ
CS8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZQoJ
CQkJLy8gdG8gbWlzc2luZyBkZXBlbmRlbmN5KSwgcmVtb3ZlIGl0LgoJCQkJZGVsZXRlIHRoaXMu
Z2V0OwoJCQkJcmV0dXJuOwoJCQl9CgoJCQkvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28g
dGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi4KCQkJcmV0dXJuICgg
dGhpcy5nZXQgPSBob29rRm4gKS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJfQoJfTsKfQoK
CnZhcgoKCS8vIFN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFi
bGUKCS8vIGV4Y2VwdCAidGFibGUiLCAidGFibGUtY2VsbCIsIG9yICJ0YWJsZS1jYXB0aW9uIgoJ
Ly8gU2VlIGhlcmUgZm9yIGRpc3BsYXkgdmFsdWVzOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxh
Lm9yZy9lbi1VUy9kb2NzL0NTUy9kaXNwbGF5CglyZGlzcGxheXN3YXAgPSAvXihub25lfHRhYmxl
KD8hLWNbZWFdKS4rKS8sCglyY3VzdG9tUHJvcCA9IC9eLS0vLAoJY3NzU2hvdyA9IHsgcG9zaXRp
b246ICJhYnNvbHV0ZSIsIHZpc2liaWxpdHk6ICJoaWRkZW4iLCBkaXNwbGF5OiAiYmxvY2siIH0s
Cgljc3NOb3JtYWxUcmFuc2Zvcm0gPSB7CgkJbGV0dGVyU3BhY2luZzogIjAiLAoJCWZvbnRXZWln
aHQ6ICI0MDAiCgl9LAoKCWNzc1ByZWZpeGVzID0gWyAiV2Via2l0IiwgIk1veiIsICJtcyIgXSwK
CWVtcHR5U3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAiZGl2IiApLnN0eWxlOwoKLy8g
UmV0dXJuIGEgY3NzIHByb3BlcnR5IG1hcHBlZCB0byBhIHBvdGVudGlhbGx5IHZlbmRvciBwcmVm
aXhlZCBwcm9wZXJ0eQpmdW5jdGlvbiB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHsKCgkvLyBTaG9y
dGN1dCBmb3IgbmFtZXMgdGhhdCBhcmUgbm90IHZlbmRvciBwcmVmaXhlZAoJaWYgKCBuYW1lIGlu
IGVtcHR5U3R5bGUgKSB7CgkJcmV0dXJuIG5hbWU7Cgl9CgoJLy8gQ2hlY2sgZm9yIHZlbmRvciBw
cmVmaXhlZCBuYW1lcwoJdmFyIGNhcE5hbWUgPSBuYW1lWyAwIF0udG9VcHBlckNhc2UoKSArIG5h
bWUuc2xpY2UoIDEgKSwKCQlpID0gY3NzUHJlZml4ZXMubGVuZ3RoOwoKCXdoaWxlICggaS0tICkg
ewoJCW5hbWUgPSBjc3NQcmVmaXhlc1sgaSBdICsgY2FwTmFtZTsKCQlpZiAoIG5hbWUgaW4gZW1w
dHlTdHlsZSApIHsKCQkJcmV0dXJuIG5hbWU7CgkJfQoJfQp9CgovLyBSZXR1cm4gYSBwcm9wZXJ0
eSBtYXBwZWQgYWxvbmcgd2hhdCBqUXVlcnkuY3NzUHJvcHMgc3VnZ2VzdHMgb3IgdG8KLy8gYSB2
ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHkuCmZ1bmN0aW9uIGZpbmFsUHJvcE5hbWUoIG5hbWUgKSB7
Cgl2YXIgcmV0ID0galF1ZXJ5LmNzc1Byb3BzWyBuYW1lIF07CglpZiAoICFyZXQgKSB7CgkJcmV0
ID0galF1ZXJ5LmNzc1Byb3BzWyBuYW1lIF0gPSB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHx8IG5h
bWU7Cgl9CglyZXR1cm4gcmV0Owp9CgpmdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwg
dmFsdWUsIHN1YnRyYWN0ICkgewoKCS8vIEFueSByZWxhdGl2ZSAoKy8tKSB2YWx1ZXMgaGF2ZSBh
bHJlYWR5IGJlZW4KCS8vIG5vcm1hbGl6ZWQgYXQgdGhpcyBwb2ludAoJdmFyIG1hdGNoZXMgPSBy
Y3NzTnVtLmV4ZWMoIHZhbHVlICk7CglyZXR1cm4gbWF0Y2hlcyA/CgoJCS8vIEd1YXJkIGFnYWlu
c3QgdW5kZWZpbmVkICJzdWJ0cmFjdCIsIGUuZy4sIHdoZW4gdXNlZCBhcyBpbiBjc3NIb29rcwoJ
CU1hdGgubWF4KCAwLCBtYXRjaGVzWyAyIF0gLSAoIHN1YnRyYWN0IHx8IDAgKSApICsgKCBtYXRj
aGVzWyAzIF0gfHwgInB4IiApIDoKCQl2YWx1ZTsKfQoKZnVuY3Rpb24gYXVnbWVudFdpZHRoT3JI
ZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhLCBpc0JvcmRlckJveCwgc3R5bGVzICkgewoJdmFyIGks
CgkJdmFsID0gMDsKCgkvLyBJZiB3ZSBhbHJlYWR5IGhhdmUgdGhlIHJpZ2h0IG1lYXN1cmVtZW50
LCBhdm9pZCBhdWdtZW50YXRpb24KCWlmICggZXh0cmEgPT09ICggaXNCb3JkZXJCb3ggPyAiYm9y
ZGVyIiA6ICJjb250ZW50IiApICkgewoJCWkgPSA0OwoKCS8vIE90aGVyd2lzZSBpbml0aWFsaXpl
IGZvciBob3Jpem9udGFsIG9yIHZlcnRpY2FsIHByb3BlcnRpZXMKCX0gZWxzZSB7CgkJaSA9IG5h
bWUgPT09ICJ3aWR0aCIgPyAxIDogMDsKCX0KCglmb3IgKCA7IGkgPCA0OyBpICs9IDIgKSB7CgoJ
CS8vIEJvdGggYm94IG1vZGVscyBleGNsdWRlIG1hcmdpbiwgc28gYWRkIGl0IGlmIHdlIHdhbnQg
aXQKCQlpZiAoIGV4dHJhID09PSAibWFyZ2luIiApIHsKCQkJdmFsICs9IGpRdWVyeS5jc3MoIGVs
ZW0sIGV4dHJhICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApOwoJCX0KCgkJaWYgKCBp
c0JvcmRlckJveCApIHsKCgkJCS8vIGJvcmRlci1ib3ggaW5jbHVkZXMgcGFkZGluZywgc28gcmVt
b3ZlIGl0IGlmIHdlIHdhbnQgY29udGVudAoJCQlpZiAoIGV4dHJhID09PSAiY29udGVudCIgKSB7
CgkJCQl2YWwgLT0galF1ZXJ5LmNzcyggZWxlbSwgInBhZGRpbmciICsgY3NzRXhwYW5kWyBpIF0s
IHRydWUsIHN0eWxlcyApOwoJCQl9CgoJCQkvLyBBdCB0aGlzIHBvaW50LCBleHRyYSBpc24ndCBi
b3JkZXIgbm9yIG1hcmdpbiwgc28gcmVtb3ZlIGJvcmRlcgoJCQlpZiAoIGV4dHJhICE9PSAibWFy
Z2luIiApIHsKCQkJCXZhbCAtPSBqUXVlcnkuY3NzKCBlbGVtLCAiYm9yZGVyIiArIGNzc0V4cGFu
ZFsgaSBdICsgIldpZHRoIiwgdHJ1ZSwgc3R5bGVzICk7CgkJCX0KCQl9IGVsc2UgewoKCQkJLy8g
QXQgdGhpcyBwb2ludCwgZXh0cmEgaXNuJ3QgY29udGVudCwgc28gYWRkIHBhZGRpbmcKCQkJdmFs
ICs9IGpRdWVyeS5jc3MoIGVsZW0sICJwYWRkaW5nIiArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBz
dHlsZXMgKTsKCgkJCS8vIEF0IHRoaXMgcG9pbnQsIGV4dHJhIGlzbid0IGNvbnRlbnQgbm9yIHBh
ZGRpbmcsIHNvIGFkZCBib3JkZXIKCQkJaWYgKCBleHRyYSAhPT0gInBhZGRpbmciICkgewoJCQkJ
dmFsICs9IGpRdWVyeS5jc3MoIGVsZW0sICJib3JkZXIiICsgY3NzRXhwYW5kWyBpIF0gKyAiV2lk
dGgiLCB0cnVlLCBzdHlsZXMgKTsKCQkJfQoJCX0KCX0KCglyZXR1cm4gdmFsOwp9CgpmdW5jdGlv
biBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBuYW1lLCBleHRyYSApIHsKCgkvLyBTdGFydCB3aXRo
IGNvbXB1dGVkIHN0eWxlCgl2YXIgdmFsdWVJc0JvcmRlckJveCwKCQlzdHlsZXMgPSBnZXRTdHls
ZXMoIGVsZW0gKSwKCQl2YWwgPSBjdXJDU1MoIGVsZW0sIG5hbWUsIHN0eWxlcyApLAoJCWlzQm9y
ZGVyQm94ID0galF1ZXJ5LmNzcyggZWxlbSwgImJveFNpemluZyIsIGZhbHNlLCBzdHlsZXMgKSA9
PT0gImJvcmRlci1ib3giOwoKCS8vIENvbXB1dGVkIHVuaXQgaXMgbm90IHBpeGVscy4gU3RvcCBo
ZXJlIGFuZCByZXR1cm4uCglpZiAoIHJudW1ub25weC50ZXN0KCB2YWwgKSApIHsKCQlyZXR1cm4g
dmFsOwoJfQoKCS8vIENoZWNrIGZvciBzdHlsZSBpbiBjYXNlIGEgYnJvd3NlciB3aGljaCByZXR1
cm5zIHVucmVsaWFibGUgdmFsdWVzCgkvLyBmb3IgZ2V0Q29tcHV0ZWRTdHlsZSBzaWxlbnRseSBm
YWxscyBiYWNrIHRvIHRoZSByZWxpYWJsZSBlbGVtLnN0eWxlCgl2YWx1ZUlzQm9yZGVyQm94ID0g
aXNCb3JkZXJCb3ggJiYKCQkoIHN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCB2YWwgPT09
IGVsZW0uc3R5bGVbIG5hbWUgXSApOwoKCS8vIEZhbGwgYmFjayB0byBvZmZzZXRXaWR0aC9IZWln
aHQgd2hlbiB2YWx1ZSBpcyAiYXV0byIKCS8vIFRoaXMgaGFwcGVucyBmb3IgaW5saW5lIGVsZW1l
bnRzIHdpdGggbm8gZXhwbGljaXQgc2V0dGluZyAoZ2gtMzU3MSkKCWlmICggdmFsID09PSAiYXV0
byIgKSB7CgkJdmFsID0gZWxlbVsgIm9mZnNldCIgKyBuYW1lWyAwIF0udG9VcHBlckNhc2UoKSAr
IG5hbWUuc2xpY2UoIDEgKSBdOwoJfQoKCS8vIE5vcm1hbGl6ZSAiIiwgYXV0bywgYW5kIHByZXBh
cmUgZm9yIGV4dHJhCgl2YWwgPSBwYXJzZUZsb2F0KCB2YWwgKSB8fCAwOwoKCS8vIFVzZSB0aGUg
YWN0aXZlIGJveC1zaXppbmcgbW9kZWwgdG8gYWRkL3N1YnRyYWN0IGlycmVsZXZhbnQgc3R5bGVz
CglyZXR1cm4gKCB2YWwgKwoJCWF1Z21lbnRXaWR0aE9ySGVpZ2h0KAoJCQllbGVtLAoJCQluYW1l
LAoJCQlleHRyYSB8fCAoIGlzQm9yZGVyQm94ID8gImJvcmRlciIgOiAiY29udGVudCIgKSwKCQkJ
dmFsdWVJc0JvcmRlckJveCwKCQkJc3R5bGVzCgkJKQoJKSArICJweCI7Cn0KCmpRdWVyeS5leHRl
bmQoIHsKCgkvLyBBZGQgaW4gc3R5bGUgcHJvcGVydHkgaG9va3MgZm9yIG92ZXJyaWRpbmcgdGhl
IGRlZmF1bHQKCS8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9w
ZXJ0eQoJY3NzSG9va3M6IHsKCQlvcGFjaXR5OiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0sIGNv
bXB1dGVkICkgewoJCQkJaWYgKCBjb21wdXRlZCApIHsKCgkJCQkJLy8gV2Ugc2hvdWxkIGFsd2F5
cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHkKCQkJCQl2YXIgcmV0ID0gY3VyQ1NTKCBl
bGVtLCAib3BhY2l0eSIgKTsKCQkJCQlyZXR1cm4gcmV0ID09PSAiIiA/ICIxIiA6IHJldDsKCQkJ
CX0KCQkJfQoJCX0KCX0sCgoJLy8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgInB4IiB0byB0aGVz
ZSBwb3NzaWJseS11bml0bGVzcyBwcm9wZXJ0aWVzCgljc3NOdW1iZXI6IHsKCQkiYW5pbWF0aW9u
SXRlcmF0aW9uQ291bnQiOiB0cnVlLAoJCSJjb2x1bW5Db3VudCI6IHRydWUsCgkJImZpbGxPcGFj
aXR5IjogdHJ1ZSwKCQkiZmxleEdyb3ciOiB0cnVlLAoJCSJmbGV4U2hyaW5rIjogdHJ1ZSwKCQki
Zm9udFdlaWdodCI6IHRydWUsCgkJImxpbmVIZWlnaHQiOiB0cnVlLAoJCSJvcGFjaXR5IjogdHJ1
ZSwKCQkib3JkZXIiOiB0cnVlLAoJCSJvcnBoYW5zIjogdHJ1ZSwKCQkid2lkb3dzIjogdHJ1ZSwK
CQkiekluZGV4IjogdHJ1ZSwKCQkiem9vbSI6IHRydWUKCX0sCgoJLy8gQWRkIGluIHByb3BlcnRp
ZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZQoJLy8gc2V0dGluZyBvciBnZXR0
aW5nIHRoZSB2YWx1ZQoJY3NzUHJvcHM6IHsKCQkiZmxvYXQiOiAiY3NzRmxvYXQiCgl9LAoKCS8v
IEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlCglzdHlsZTogZnVu
Y3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHsKCgkJLy8gRG9uJ3Qgc2V0IHN0eWxl
cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzCgkJaWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBl
ID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7CgkJCXJldHVy
bjsKCQl9CgoJCS8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQg
bmFtZQoJCXZhciByZXQsIHR5cGUsIGhvb2tzLAoJCQlvcmlnTmFtZSA9IGpRdWVyeS5jYW1lbENh
c2UoIG5hbWUgKSwKCQkJaXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApLAoJ
CQlzdHlsZSA9IGVsZW0uc3R5bGU7CgoJCS8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcg
d2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3QKCQkvLyB3YW50IHRvIHF1ZXJ5IHRoZSB2YWx1
ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHkKCQkvLyBzaW5jZSB0aGV5IGFyZSB1c2Vy
LWRlZmluZWQuCgkJaWYgKCAhaXNDdXN0b21Qcm9wICkgewoJCQluYW1lID0gZmluYWxQcm9wTmFt
ZSggb3JpZ05hbWUgKTsKCQl9CgoJCS8vIEdldHMgaG9vayBmb3IgdGhlIHByZWZpeGVkIHZlcnNp
b24sIHRoZW4gdW5wcmVmaXhlZCB2ZXJzaW9uCgkJaG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5h
bWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07CgoJCS8vIENoZWNrIGlmIHdlJ3Jl
IHNldHRpbmcgYSB2YWx1ZQoJCWlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHsKCQkJdHlwZSA9
IHR5cGVvZiB2YWx1ZTsKCgkJCS8vIENvbnZlcnQgIis9IiBvciAiLT0iIHRvIHJlbGF0aXZlIG51
bWJlcnMgKCM3MzQ1KQoJCQlpZiAoIHR5cGUgPT09ICJzdHJpbmciICYmICggcmV0ID0gcmNzc051
bS5leGVjKCB2YWx1ZSApICkgJiYgcmV0WyAxIF0gKSB7CgkJCQl2YWx1ZSA9IGFkanVzdENTUygg
ZWxlbSwgbmFtZSwgcmV0ICk7CgoJCQkJLy8gRml4ZXMgYnVnICM5MjM3CgkJCQl0eXBlID0gIm51
bWJlciI7CgkJCX0KCgkJCS8vIE1ha2Ugc3VyZSB0aGF0IG51bGwgYW5kIE5hTiB2YWx1ZXMgYXJl
bid0IHNldCAoIzcxMTYpCgkJCWlmICggdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUg
KSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCS8vIElmIGEgbnVtYmVyIHdhcyBwYXNzZWQgaW4sIGFk
ZCB0aGUgdW5pdCAoZXhjZXB0IGZvciBjZXJ0YWluIENTUyBwcm9wZXJ0aWVzKQoJCQlpZiAoIHR5
cGUgPT09ICJudW1iZXIiICkgewoJCQkJdmFsdWUgKz0gcmV0ICYmIHJldFsgMyBdIHx8ICggalF1
ZXJ5LmNzc051bWJlclsgb3JpZ05hbWUgXSA/ICIiIDogInB4IiApOwoJCQl9CgoJCQkvLyBiYWNr
Z3JvdW5kLSogcHJvcHMgYWZmZWN0IG9yaWdpbmFsIGNsb25lJ3MgdmFsdWVzCgkJCWlmICggIXN1
cHBvcnQuY2xlYXJDbG9uZVN0eWxlICYmIHZhbHVlID09PSAiIiAmJiBuYW1lLmluZGV4T2YoICJi
YWNrZ3JvdW5kIiApID09PSAwICkgewoJCQkJc3R5bGVbIG5hbWUgXSA9ICJpbmhlcml0IjsKCQkJ
fQoKCQkJLy8gSWYgYSBob29rIHdhcyBwcm92aWRlZCwgdXNlIHRoYXQgdmFsdWUsIG90aGVyd2lz
ZSBqdXN0IHNldCB0aGUgc3BlY2lmaWVkIHZhbHVlCgkJCWlmICggIWhvb2tzIHx8ICEoICJzZXQi
IGluIGhvb2tzICkgfHwKCQkJCSggdmFsdWUgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBleHRy
YSApICkgIT09IHVuZGVmaW5lZCApIHsKCgkJCQlpZiAoIGlzQ3VzdG9tUHJvcCApIHsKCQkJCQlz
dHlsZS5zZXRQcm9wZXJ0eSggbmFtZSwgdmFsdWUgKTsKCQkJCX0gZWxzZSB7CgkJCQkJc3R5bGVb
IG5hbWUgXSA9IHZhbHVlOwoJCQkJfQoJCQl9CgoJCX0gZWxzZSB7CgoJCQkvLyBJZiBhIGhvb2sg
d2FzIHByb3ZpZGVkIGdldCB0aGUgbm9uLWNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmUKCQkJaWYg
KCBob29rcyAmJiAiZ2V0IiBpbiBob29rcyAmJgoJCQkJKCByZXQgPSBob29rcy5nZXQoIGVsZW0s
IGZhbHNlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHsKCgkJCQlyZXR1cm4gcmV0OwoJCQl9
CgoJCQkvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZhbHVlIGZyb20gdGhlIHN0eWxlIG9iamVj
dAoJCQlyZXR1cm4gc3R5bGVbIG5hbWUgXTsKCQl9Cgl9LAoKCWNzczogZnVuY3Rpb24oIGVsZW0s
IG5hbWUsIGV4dHJhLCBzdHlsZXMgKSB7CgkJdmFyIHZhbCwgbnVtLCBob29rcywKCQkJb3JpZ05h
bWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lICksCgkJCWlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Q
cm9wLnRlc3QoIG5hbWUgKTsKCgkJLy8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRo
IHRoZSByaWdodCBuYW1lLiBXZSBkb24ndAoJCS8vIHdhbnQgdG8gbW9kaWZ5IHRoZSB2YWx1ZSBp
ZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHkKCQkvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRl
ZmluZWQuCgkJaWYgKCAhaXNDdXN0b21Qcm9wICkgewoJCQluYW1lID0gZmluYWxQcm9wTmFtZSgg
b3JpZ05hbWUgKTsKCQl9CgoJCS8vIFRyeSBwcmVmaXhlZCBuYW1lIGZvbGxvd2VkIGJ5IHRoZSB1
bnByZWZpeGVkIG5hbWUKCQlob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVy
eS5jc3NIb29rc1sgb3JpZ05hbWUgXTsKCgkJLy8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQg
dGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmUKCQlpZiAoIGhvb2tzICYmICJnZXQiIGluIGhv
b2tzICkgewoJCQl2YWwgPSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICk7CgkJfQoKCQkv
LyBPdGhlcndpc2UsIGlmIGEgd2F5IHRvIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZXhpc3RzLCB1
c2UgdGhhdAoJCWlmICggdmFsID09PSB1bmRlZmluZWQgKSB7CgkJCXZhbCA9IGN1ckNTUyggZWxl
bSwgbmFtZSwgc3R5bGVzICk7CgkJfQoKCQkvLyBDb252ZXJ0ICJub3JtYWwiIHRvIGNvbXB1dGVk
IHZhbHVlCgkJaWYgKCB2YWwgPT09ICJub3JtYWwiICYmIG5hbWUgaW4gY3NzTm9ybWFsVHJhbnNm
b3JtICkgewoJCQl2YWwgPSBjc3NOb3JtYWxUcmFuc2Zvcm1bIG5hbWUgXTsKCQl9CgoJCS8vIE1h
a2UgbnVtZXJpYyBpZiBmb3JjZWQgb3IgYSBxdWFsaWZpZXIgd2FzIHByb3ZpZGVkIGFuZCB2YWwg
bG9va3MgbnVtZXJpYwoJCWlmICggZXh0cmEgPT09ICIiIHx8IGV4dHJhICkgewoJCQludW0gPSBw
YXJzZUZsb2F0KCB2YWwgKTsKCQkJcmV0dXJuIGV4dHJhID09PSB0cnVlIHx8IGlzRmluaXRlKCBu
dW0gKSA/IG51bSB8fCAwIDogdmFsOwoJCX0KCgkJcmV0dXJuIHZhbDsKCX0KfSApOwoKalF1ZXJ5
LmVhY2goIFsgImhlaWdodCIsICJ3aWR0aCIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7CglqUXVl
cnkuY3NzSG9va3NbIG5hbWUgXSA9IHsKCQlnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCwg
ZXh0cmEgKSB7CgkJCWlmICggY29tcHV0ZWQgKSB7CgoJCQkJLy8gQ2VydGFpbiBlbGVtZW50cyBj
YW4gaGF2ZSBkaW1lbnNpb24gaW5mbyBpZiB3ZSBpbnZpc2libHkgc2hvdyB0aGVtCgkJCQkvLyBi
dXQgaXQgbXVzdCBoYXZlIGEgY3VycmVudCBkaXNwbGF5IHN0eWxlIHRoYXQgd291bGQgYmVuZWZp
dAoJCQkJcmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCAiZGlzcGxh
eSIgKSApICYmCgoJCQkJCS8vIFN1cHBvcnQ6IFNhZmFyaSA4KwoJCQkJCS8vIFRhYmxlIGNvbHVt
bnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvCgkJCQkJLy8gZ2V0
Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggdW5sZXNzIGRpc3BsYXkgaXMgY2hhbmdlZC4KCQkJ
CQkvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHkKCQkJCQkvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xp
ZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlCgkJCQkJLy8gaW4gSUUgdGhyb3dzIGFuIGVy
cm9yLgoJCQkJCSggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggfHwgIWVsZW0uZ2V0Qm91
bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKSA/CgkJCQkJCXN3YXAoIGVsZW0sIGNzc1Nob3csIGZ1
bmN0aW9uKCkgewoJCQkJCQkJcmV0dXJuIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4
dHJhICk7CgkJCQkJCX0gKSA6CgkJCQkJCWdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4
dHJhICk7CgkJCX0KCQl9LAoKCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSB7
CgkJCXZhciBtYXRjaGVzLAoJCQkJc3R5bGVzID0gZXh0cmEgJiYgZ2V0U3R5bGVzKCBlbGVtICks
CgkJCQlzdWJ0cmFjdCA9IGV4dHJhICYmIGF1Z21lbnRXaWR0aE9ySGVpZ2h0KAoJCQkJCWVsZW0s
CgkJCQkJbmFtZSwKCQkJCQlleHRyYSwKCQkJCQlqUXVlcnkuY3NzKCBlbGVtLCAiYm94U2l6aW5n
IiwgZmFsc2UsIHN0eWxlcyApID09PSAiYm9yZGVyLWJveCIsCgkJCQkJc3R5bGVzCgkJCQkpOwoK
CQkJLy8gQ29udmVydCB0byBwaXhlbHMgaWYgdmFsdWUgYWRqdXN0bWVudCBpcyBuZWVkZWQKCQkJ
aWYgKCBzdWJ0cmFjdCAmJiAoIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJgoJ
CQkJKCBtYXRjaGVzWyAzIF0gfHwgInB4IiApICE9PSAicHgiICkgewoKCQkJCWVsZW0uc3R5bGVb
IG5hbWUgXSA9IHZhbHVlOwoJCQkJdmFsdWUgPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7CgkJ
CX0KCgkJCXJldHVybiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICk7
CgkJfQoJfTsKfSApOwoKalF1ZXJ5LmNzc0hvb2tzLm1hcmdpbkxlZnQgPSBhZGRHZXRIb29rSWYo
IHN1cHBvcnQucmVsaWFibGVNYXJnaW5MZWZ0LAoJZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkg
ewoJCWlmICggY29tcHV0ZWQgKSB7CgkJCXJldHVybiAoIHBhcnNlRmxvYXQoIGN1ckNTUyggZWxl
bSwgIm1hcmdpbkxlZnQiICkgKSB8fAoJCQkJZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5s
ZWZ0IC0KCQkJCQlzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7CgkJ
CQkJCXJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7CgkJCQkJfSApCgkJ
CQkpICsgInB4IjsKCQl9Cgl9Cik7CgovLyBUaGVzZSBob29rcyBhcmUgdXNlZCBieSBhbmltYXRl
IHRvIGV4cGFuZCBwcm9wZXJ0aWVzCmpRdWVyeS5lYWNoKCB7CgltYXJnaW46ICIiLAoJcGFkZGlu
ZzogIiIsCglib3JkZXI6ICJXaWR0aCIKfSwgZnVuY3Rpb24oIHByZWZpeCwgc3VmZml4ICkgewoJ
alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXSA9IHsKCQlleHBhbmQ6IGZ1bmN0aW9u
KCB2YWx1ZSApIHsKCQkJdmFyIGkgPSAwLAoJCQkJZXhwYW5kZWQgPSB7fSwKCgkJCQkvLyBBc3N1
bWVzIGEgc2luZ2xlIG51bWJlciBpZiBub3QgYSBzdHJpbmcKCQkJCXBhcnRzID0gdHlwZW9mIHZh
bHVlID09PSAic3RyaW5nIiA/IHZhbHVlLnNwbGl0KCAiICIgKSA6IFsgdmFsdWUgXTsKCgkJCWZv
ciAoIDsgaSA8IDQ7IGkrKyApIHsKCQkJCWV4cGFuZGVkWyBwcmVmaXggKyBjc3NFeHBhbmRbIGkg
XSArIHN1ZmZpeCBdID0KCQkJCQlwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRz
WyAwIF07CgkJCX0KCgkJCXJldHVybiBleHBhbmRlZDsKCQl9Cgl9OwoKCWlmICggIXJtYXJnaW4u
dGVzdCggcHJlZml4ICkgKSB7CgkJalF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXS5z
ZXQgPSBzZXRQb3NpdGl2ZU51bWJlcjsKCX0KfSApOwoKalF1ZXJ5LmZuLmV4dGVuZCggewoJY3Nz
OiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7CgkJcmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rp
b24oIGVsZW0sIG5hbWUsIHZhbHVlICkgewoJCQl2YXIgc3R5bGVzLCBsZW4sCgkJCQltYXAgPSB7
fSwKCQkJCWkgPSAwOwoKCQkJaWYgKCBBcnJheS5pc0FycmF5KCBuYW1lICkgKSB7CgkJCQlzdHls
ZXMgPSBnZXRTdHlsZXMoIGVsZW0gKTsKCQkJCWxlbiA9IG5hbWUubGVuZ3RoOwoKCQkJCWZvciAo
IDsgaSA8IGxlbjsgaSsrICkgewoJCQkJCW1hcFsgbmFtZVsgaSBdIF0gPSBqUXVlcnkuY3NzKCBl
bGVtLCBuYW1lWyBpIF0sIGZhbHNlLCBzdHlsZXMgKTsKCQkJCX0KCgkJCQlyZXR1cm4gbWFwOwoJ
CQl9CgoJCQlyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/CgkJCQlqUXVlcnkuc3R5bGUoIGVs
ZW0sIG5hbWUsIHZhbHVlICkgOgoJCQkJalF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApOwoJCX0sIG5h
bWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApOwoJfQp9ICk7CgoKZnVuY3Rpb24gVHdl
ZW4oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICkgewoJcmV0dXJuIG5ldyBUd2Vl
bi5wcm90b3R5cGUuaW5pdCggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKTsKfQpq
UXVlcnkuVHdlZW4gPSBUd2VlbjsKClR3ZWVuLnByb3RvdHlwZSA9IHsKCWNvbnN0cnVjdG9yOiBU
d2VlbiwKCWluaXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZywg
dW5pdCApIHsKCQl0aGlzLmVsZW0gPSBlbGVtOwoJCXRoaXMucHJvcCA9IHByb3A7CgkJdGhpcy5l
YXNpbmcgPSBlYXNpbmcgfHwgalF1ZXJ5LmVhc2luZy5fZGVmYXVsdDsKCQl0aGlzLm9wdGlvbnMg
PSBvcHRpb25zOwoJCXRoaXMuc3RhcnQgPSB0aGlzLm5vdyA9IHRoaXMuY3VyKCk7CgkJdGhpcy5l
bmQgPSBlbmQ7CgkJdGhpcy51bml0ID0gdW5pdCB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3Ag
XSA/ICIiIDogInB4IiApOwoJfSwKCWN1cjogZnVuY3Rpb24oKSB7CgkJdmFyIGhvb2tzID0gVHdl
ZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTsKCgkJcmV0dXJuIGhvb2tzICYmIGhvb2tzLmdldCA/
CgkJCWhvb2tzLmdldCggdGhpcyApIDoKCQkJVHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LmdldCgg
dGhpcyApOwoJfSwKCXJ1bjogZnVuY3Rpb24oIHBlcmNlbnQgKSB7CgkJdmFyIGVhc2VkLAoJCQlo
b29rcyA9IFR3ZWVuLnByb3BIb29rc1sgdGhpcy5wcm9wIF07CgoJCWlmICggdGhpcy5vcHRpb25z
LmR1cmF0aW9uICkgewoJCQl0aGlzLnBvcyA9IGVhc2VkID0galF1ZXJ5LmVhc2luZ1sgdGhpcy5l
YXNpbmcgXSgKCQkJCXBlcmNlbnQsIHRoaXMub3B0aW9ucy5kdXJhdGlvbiAqIHBlcmNlbnQsIDAs
IDEsIHRoaXMub3B0aW9ucy5kdXJhdGlvbgoJCQkpOwoJCX0gZWxzZSB7CgkJCXRoaXMucG9zID0g
ZWFzZWQgPSBwZXJjZW50OwoJCX0KCQl0aGlzLm5vdyA9ICggdGhpcy5lbmQgLSB0aGlzLnN0YXJ0
ICkgKiBlYXNlZCArIHRoaXMuc3RhcnQ7CgoJCWlmICggdGhpcy5vcHRpb25zLnN0ZXAgKSB7CgkJ
CXRoaXMub3B0aW9ucy5zdGVwLmNhbGwoIHRoaXMuZWxlbSwgdGhpcy5ub3csIHRoaXMgKTsKCQl9
CgoJCWlmICggaG9va3MgJiYgaG9va3Muc2V0ICkgewoJCQlob29rcy5zZXQoIHRoaXMgKTsKCQl9
IGVsc2UgewoJCQlUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KCB0aGlzICk7CgkJfQoJCXJl
dHVybiB0aGlzOwoJfQp9OwoKVHdlZW4ucHJvdG90eXBlLmluaXQucHJvdG90eXBlID0gVHdlZW4u
cHJvdG90eXBlOwoKVHdlZW4ucHJvcEhvb2tzID0gewoJX2RlZmF1bHQ6IHsKCQlnZXQ6IGZ1bmN0
aW9uKCB0d2VlbiApIHsKCQkJdmFyIHJlc3VsdDsKCgkJCS8vIFVzZSBhIHByb3BlcnR5IG9uIHRo
ZSBlbGVtZW50IGRpcmVjdGx5IHdoZW4gaXQgaXMgbm90IGEgRE9NIGVsZW1lbnQsCgkJCS8vIG9y
IHdoZW4gdGhlcmUgaXMgbm8gbWF0Y2hpbmcgc3R5bGUgcHJvcGVydHkgdGhhdCBleGlzdHMuCgkJ
CWlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fAoJCQkJdHdlZW4uZWxlbVsgdHdlZW4u
cHJvcCBdICE9IG51bGwgJiYgdHdlZW4uZWxlbS5zdHlsZVsgdHdlZW4ucHJvcCBdID09IG51bGwg
KSB7CgkJCQlyZXR1cm4gdHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdOwoJCQl9CgoJCQkvLyBQYXNz
aW5nIGFuIGVtcHR5IHN0cmluZyBhcyBhIDNyZCBwYXJhbWV0ZXIgdG8gLmNzcyB3aWxsIGF1dG9t
YXRpY2FsbHkKCQkJLy8gYXR0ZW1wdCBhIHBhcnNlRmxvYXQgYW5kIGZhbGxiYWNrIHRvIGEgc3Ry
aW5nIGlmIHRoZSBwYXJzZSBmYWlscy4KCQkJLy8gU2ltcGxlIHZhbHVlcyBzdWNoIGFzICIxMHB4
IiBhcmUgcGFyc2VkIHRvIEZsb2F0OwoJCQkvLyBjb21wbGV4IHZhbHVlcyBzdWNoIGFzICJyb3Rh
dGUoMXJhZCkiIGFyZSByZXR1cm5lZCBhcy1pcy4KCQkJcmVzdWx0ID0galF1ZXJ5LmNzcyggdHdl
ZW4uZWxlbSwgdHdlZW4ucHJvcCwgIiIgKTsKCgkJCS8vIEVtcHR5IHN0cmluZ3MsIG51bGwsIHVu
ZGVmaW5lZCBhbmQgImF1dG8iIGFyZSBjb252ZXJ0ZWQgdG8gMC4KCQkJcmV0dXJuICFyZXN1bHQg
fHwgcmVzdWx0ID09PSAiYXV0byIgPyAwIDogcmVzdWx0OwoJCX0sCgkJc2V0OiBmdW5jdGlvbigg
dHdlZW4gKSB7CgoJCQkvLyBVc2Ugc3RlcCBob29rIGZvciBiYWNrIGNvbXBhdC4KCQkJLy8gVXNl
IGNzc0hvb2sgaWYgaXRzIHRoZXJlLgoJCQkvLyBVc2UgLnN0eWxlIGlmIGF2YWlsYWJsZSBhbmQg
dXNlIHBsYWluIHByb3BlcnRpZXMgd2hlcmUgYXZhaWxhYmxlLgoJCQlpZiAoIGpRdWVyeS5meC5z
dGVwWyB0d2Vlbi5wcm9wIF0gKSB7CgkJCQlqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdKCB0
d2VlbiApOwoJCQl9IGVsc2UgaWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlID09PSAxICYmCgkJCQko
IHR3ZWVuLmVsZW0uc3R5bGVbIGpRdWVyeS5jc3NQcm9wc1sgdHdlZW4ucHJvcCBdIF0gIT0gbnVs
bCB8fAoJCQkJCWpRdWVyeS5jc3NIb29rc1sgdHdlZW4ucHJvcCBdICkgKSB7CgkJCQlqUXVlcnku
c3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTsK
CQkJfSBlbHNlIHsKCQkJCXR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdzsKCQkJ
fQoJCX0KCX0KfTsKCi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5Ci8vIFBhbmljIGJhc2VkIGFwcHJv
YWNoIHRvIHNldHRpbmcgdGhpbmdzIG9uIGRpc2Nvbm5lY3RlZCBub2RlcwpUd2Vlbi5wcm9wSG9v
a3Muc2Nyb2xsVG9wID0gVHdlZW4ucHJvcEhvb2tzLnNjcm9sbExlZnQgPSB7CglzZXQ6IGZ1bmN0
aW9uKCB0d2VlbiApIHsKCQlpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgJiYgdHdlZW4uZWxlbS5w
YXJlbnROb2RlICkgewoJCQl0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7CgkJ
fQoJfQp9OwoKalF1ZXJ5LmVhc2luZyA9IHsKCWxpbmVhcjogZnVuY3Rpb24oIHAgKSB7CgkJcmV0
dXJuIHA7Cgl9LAoJc3dpbmc6IGZ1bmN0aW9uKCBwICkgewoJCXJldHVybiAwLjUgLSBNYXRoLmNv
cyggcCAqIE1hdGguUEkgKSAvIDI7Cgl9LAoJX2RlZmF1bHQ6ICJzd2luZyIKfTsKCmpRdWVyeS5m
eCA9IFR3ZWVuLnByb3RvdHlwZS5pbml0OwoKLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24g
cG9pbnQKalF1ZXJ5LmZ4LnN0ZXAgPSB7fTsKCgoKCnZhcgoJZnhOb3csIGluUHJvZ3Jlc3MsCgly
Znh0eXBlcyA9IC9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLywKCXJydW4gPSAvcXVldWVIb29rcyQv
OwoKZnVuY3Rpb24gc2NoZWR1bGUoKSB7CglpZiAoIGluUHJvZ3Jlc3MgKSB7CgkJaWYgKCBkb2N1
bWVudC5oaWRkZW4gPT09IGZhbHNlICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgKSB7
CgkJCXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIHNjaGVkdWxlICk7CgkJfSBlbHNlIHsK
CQkJd2luZG93LnNldFRpbWVvdXQoIHNjaGVkdWxlLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTsKCQl9
CgoJCWpRdWVyeS5meC50aWNrKCk7Cgl9Cn0KCi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJv
bm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHkKZnVuY3Rpb24gY3JlYXRlRnhOb3coKSB7Cgl3
aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7CgkJZnhOb3cgPSB1bmRlZmluZWQ7Cgl9ICk7
CglyZXR1cm4gKCBmeE5vdyA9IGpRdWVyeS5ub3coKSApOwp9CgovLyBHZW5lcmF0ZSBwYXJhbWV0
ZXJzIHRvIGNyZWF0ZSBhIHN0YW5kYXJkIGFuaW1hdGlvbgpmdW5jdGlvbiBnZW5GeCggdHlwZSwg
aW5jbHVkZVdpZHRoICkgewoJdmFyIHdoaWNoLAoJCWkgPSAwLAoJCWF0dHJzID0geyBoZWlnaHQ6
IHR5cGUgfTsKCgkvLyBJZiB3ZSBpbmNsdWRlIHdpZHRoLCBzdGVwIHZhbHVlIGlzIDEgdG8gZG8g
YWxsIGNzc0V4cGFuZCB2YWx1ZXMsCgkvLyBvdGhlcndpc2Ugc3RlcCB2YWx1ZSBpcyAyIHRvIHNr
aXAgb3ZlciBMZWZ0IGFuZCBSaWdodAoJaW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6
IDA7Cglmb3IgKCA7IGkgPCA0OyBpICs9IDIgLSBpbmNsdWRlV2lkdGggKSB7CgkJd2hpY2ggPSBj
c3NFeHBhbmRbIGkgXTsKCQlhdHRyc1sgIm1hcmdpbiIgKyB3aGljaCBdID0gYXR0cnNbICJwYWRk
aW5nIiArIHdoaWNoIF0gPSB0eXBlOwoJfQoKCWlmICggaW5jbHVkZVdpZHRoICkgewoJCWF0dHJz
Lm9wYWNpdHkgPSBhdHRycy53aWR0aCA9IHR5cGU7Cgl9CgoJcmV0dXJuIGF0dHJzOwp9CgpmdW5j
dGlvbiBjcmVhdGVUd2VlbiggdmFsdWUsIHByb3AsIGFuaW1hdGlvbiApIHsKCXZhciB0d2VlbiwK
CQljb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNh
dCggQW5pbWF0aW9uLnR3ZWVuZXJzWyAiKiIgXSApLAoJCWluZGV4ID0gMCwKCQlsZW5ndGggPSBj
b2xsZWN0aW9uLmxlbmd0aDsKCWZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7CgkJ
aWYgKCAoIHR3ZWVuID0gY29sbGVjdGlvblsgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIHByb3As
IHZhbHVlICkgKSApIHsKCgkJCS8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5CgkJCXJl
dHVybiB0d2VlbjsKCQl9Cgl9Cn0KCmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHBy
b3BzLCBvcHRzICkgewoJdmFyIHByb3AsIHZhbHVlLCB0b2dnbGUsIGhvb2tzLCBvbGRmaXJlLCBw
cm9wVHdlZW4sIHJlc3RvcmVEaXNwbGF5LCBkaXNwbGF5LAoJCWlzQm94ID0gIndpZHRoIiBpbiBw
cm9wcyB8fCAiaGVpZ2h0IiBpbiBwcm9wcywKCQlhbmltID0gdGhpcywKCQlvcmlnID0ge30sCgkJ
c3R5bGUgPSBlbGVtLnN0eWxlLAoJCWhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW5X
aXRoaW5UcmVlKCBlbGVtICksCgkJZGF0YVNob3cgPSBkYXRhUHJpdi5nZXQoIGVsZW0sICJmeHNo
b3ciICk7CgoJLy8gUXVldWUtc2tpcHBpbmcgYW5pbWF0aW9ucyBoaWphY2sgdGhlIGZ4IGhvb2tz
CglpZiAoICFvcHRzLnF1ZXVlICkgewoJCWhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVt
LCAiZngiICk7CgkJaWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkgewoJCQlob29rcy51bnF1
ZXVlZCA9IDA7CgkJCW9sZGZpcmUgPSBob29rcy5lbXB0eS5maXJlOwoJCQlob29rcy5lbXB0eS5m
aXJlID0gZnVuY3Rpb24oKSB7CgkJCQlpZiAoICFob29rcy51bnF1ZXVlZCApIHsKCQkJCQlvbGRm
aXJlKCk7CgkJCQl9CgkJCX07CgkJfQoJCWhvb2tzLnVucXVldWVkKys7CgoJCWFuaW0uYWx3YXlz
KCBmdW5jdGlvbigpIHsKCgkJCS8vIEVuc3VyZSB0aGUgY29tcGxldGUgaGFuZGxlciBpcyBjYWxs
ZWQgYmVmb3JlIHRoaXMgY29tcGxldGVzCgkJCWFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHsKCQkJ
CWhvb2tzLnVucXVldWVkLS07CgkJCQlpZiAoICFqUXVlcnkucXVldWUoIGVsZW0sICJmeCIgKS5s
ZW5ndGggKSB7CgkJCQkJaG9va3MuZW1wdHkuZmlyZSgpOwoJCQkJfQoJCQl9ICk7CgkJfSApOwoJ
fQoKCS8vIERldGVjdCBzaG93L2hpZGUgYW5pbWF0aW9ucwoJZm9yICggcHJvcCBpbiBwcm9wcyAp
IHsKCQl2YWx1ZSA9IHByb3BzWyBwcm9wIF07CgkJaWYgKCByZnh0eXBlcy50ZXN0KCB2YWx1ZSAp
ICkgewoJCQlkZWxldGUgcHJvcHNbIHByb3AgXTsKCQkJdG9nZ2xlID0gdG9nZ2xlIHx8IHZhbHVl
ID09PSAidG9nZ2xlIjsKCQkJaWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyAiaGlkZSIgOiAic2hv
dyIgKSApIHsKCgkJCQkvLyBQcmV0ZW5kIHRvIGJlIGhpZGRlbiBpZiB0aGlzIGlzIGEgInNob3ci
IGFuZAoJCQkJLy8gdGhlcmUgaXMgc3RpbGwgZGF0YSBmcm9tIGEgc3RvcHBlZCBzaG93L2hpZGUK
CQkJCWlmICggdmFsdWUgPT09ICJzaG93IiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBd
ICE9PSB1bmRlZmluZWQgKSB7CgkJCQkJaGlkZGVuID0gdHJ1ZTsKCgkJCQkvLyBJZ25vcmUgYWxs
IG90aGVyIG5vLW9wIHNob3cvaGlkZSBkYXRhCgkJCQl9IGVsc2UgewoJCQkJCWNvbnRpbnVlOwoJ
CQkJfQoJCQl9CgkJCW9yaWdbIHByb3AgXSA9IGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0g
fHwgalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wICk7CgkJfQoJfQoKCS8vIEJhaWwgb3V0IGlmIHRo
aXMgaXMgYSBuby1vcCBsaWtlIC5oaWRlKCkuaGlkZSgpCglwcm9wVHdlZW4gPSAhalF1ZXJ5Lmlz
RW1wdHlPYmplY3QoIHByb3BzICk7CglpZiAoICFwcm9wVHdlZW4gJiYgalF1ZXJ5LmlzRW1wdHlP
YmplY3QoIG9yaWcgKSApIHsKCQlyZXR1cm47Cgl9CgoJLy8gUmVzdHJpY3QgIm92ZXJmbG93IiBh
bmQgImRpc3BsYXkiIHN0eWxlcyBkdXJpbmcgYm94IGFuaW1hdGlvbnMKCWlmICggaXNCb3ggJiYg
ZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCgkJLy8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2Ug
MTIgLSAxMwoJCS8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUg
ZG9lcyBub3QgaW5mZXIgdGhlIHNob3J0aGFuZAoJCS8vIGZyb20gaWRlbnRpY2FsbHktdmFsdWVk
IG92ZXJmbG93WCBhbmQgb3ZlcmZsb3dZCgkJb3B0cy5vdmVyZmxvdyA9IFsgc3R5bGUub3ZlcmZs
b3csIHN0eWxlLm92ZXJmbG93WCwgc3R5bGUub3ZlcmZsb3dZIF07CgoJCS8vIElkZW50aWZ5IGEg
ZGlzcGxheSB0eXBlLCBwcmVmZXJyaW5nIG9sZCBzaG93L2hpZGUgZGF0YSBvdmVyIHRoZSBDU1Mg
Y2FzY2FkZQoJCXJlc3RvcmVEaXNwbGF5ID0gZGF0YVNob3cgJiYgZGF0YVNob3cuZGlzcGxheTsK
CQlpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7CgkJCXJlc3RvcmVEaXNwbGF5ID0gZGF0
YVByaXYuZ2V0KCBlbGVtLCAiZGlzcGxheSIgKTsKCQl9CgkJZGlzcGxheSA9IGpRdWVyeS5jc3Mo
IGVsZW0sICJkaXNwbGF5IiApOwoJCWlmICggZGlzcGxheSA9PT0gIm5vbmUiICkgewoJCQlpZiAo
IHJlc3RvcmVEaXNwbGF5ICkgewoJCQkJZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5OwoJCQl9IGVs
c2UgewoKCQkJCS8vIEdldCBub25lbXB0eSB2YWx1ZShzKSBieSB0ZW1wb3JhcmlseSBmb3JjaW5n
IHZpc2liaWxpdHkKCQkJCXNob3dIaWRlKCBbIGVsZW0gXSwgdHJ1ZSApOwoJCQkJcmVzdG9yZURp
c3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXkgfHwgcmVzdG9yZURpc3BsYXk7CgkJCQlkaXNwbGF5
ID0galF1ZXJ5LmNzcyggZWxlbSwgImRpc3BsYXkiICk7CgkJCQlzaG93SGlkZSggWyBlbGVtIF0g
KTsKCQkJfQoJCX0KCgkJLy8gQW5pbWF0ZSBpbmxpbmUgZWxlbWVudHMgYXMgaW5saW5lLWJsb2Nr
CgkJaWYgKCBkaXNwbGF5ID09PSAiaW5saW5lIiB8fCBkaXNwbGF5ID09PSAiaW5saW5lLWJsb2Nr
IiAmJiByZXN0b3JlRGlzcGxheSAhPSBudWxsICkgewoJCQlpZiAoIGpRdWVyeS5jc3MoIGVsZW0s
ICJmbG9hdCIgKSA9PT0gIm5vbmUiICkgewoKCQkJCS8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIGRp
c3BsYXkgdmFsdWUgYXQgdGhlIGVuZCBvZiBwdXJlIHNob3cvaGlkZSBhbmltYXRpb25zCgkJCQlp
ZiAoICFwcm9wVHdlZW4gKSB7CgkJCQkJYW5pbS5kb25lKCBmdW5jdGlvbigpIHsKCQkJCQkJc3R5
bGUuZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5OwoJCQkJCX0gKTsKCQkJCQlpZiAoIHJlc3RvcmVE
aXNwbGF5ID09IG51bGwgKSB7CgkJCQkJCWRpc3BsYXkgPSBzdHlsZS5kaXNwbGF5OwoJCQkJCQly
ZXN0b3JlRGlzcGxheSA9IGRpc3BsYXkgPT09ICJub25lIiA/ICIiIDogZGlzcGxheTsKCQkJCQl9
CgkJCQl9CgkJCQlzdHlsZS5kaXNwbGF5ID0gImlubGluZS1ibG9jayI7CgkJCX0KCQl9Cgl9CgoJ
aWYgKCBvcHRzLm92ZXJmbG93ICkgewoJCXN0eWxlLm92ZXJmbG93ID0gImhpZGRlbiI7CgkJYW5p
bS5hbHdheXMoIGZ1bmN0aW9uKCkgewoJCQlzdHlsZS5vdmVyZmxvdyA9IG9wdHMub3ZlcmZsb3db
IDAgXTsKCQkJc3R5bGUub3ZlcmZsb3dYID0gb3B0cy5vdmVyZmxvd1sgMSBdOwoJCQlzdHlsZS5v
dmVyZmxvd1kgPSBvcHRzLm92ZXJmbG93WyAyIF07CgkJfSApOwoJfQoKCS8vIEltcGxlbWVudCBz
aG93L2hpZGUgYW5pbWF0aW9ucwoJcHJvcFR3ZWVuID0gZmFsc2U7Cglmb3IgKCBwcm9wIGluIG9y
aWcgKSB7CgoJCS8vIEdlbmVyYWwgc2hvdy9oaWRlIHNldHVwIGZvciB0aGlzIGVsZW1lbnQgYW5p
bWF0aW9uCgkJaWYgKCAhcHJvcFR3ZWVuICkgewoJCQlpZiAoIGRhdGFTaG93ICkgewoJCQkJaWYg
KCAiaGlkZGVuIiBpbiBkYXRhU2hvdyApIHsKCQkJCQloaWRkZW4gPSBkYXRhU2hvdy5oaWRkZW47
CgkJCQl9CgkJCX0gZWxzZSB7CgkJCQlkYXRhU2hvdyA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwg
ImZ4c2hvdyIsIHsgZGlzcGxheTogcmVzdG9yZURpc3BsYXkgfSApOwoJCQl9CgoJCQkvLyBTdG9y
ZSBoaWRkZW4vdmlzaWJsZSBmb3IgdG9nZ2xlIHNvIGAuc3RvcCgpLnRvZ2dsZSgpYCAicmV2ZXJz
ZXMiCgkJCWlmICggdG9nZ2xlICkgewoJCQkJZGF0YVNob3cuaGlkZGVuID0gIWhpZGRlbjsKCQkJ
fQoKCQkJLy8gU2hvdyBlbGVtZW50cyBiZWZvcmUgYW5pbWF0aW5nIHRoZW0KCQkJaWYgKCBoaWRk
ZW4gKSB7CgkJCQlzaG93SGlkZSggWyBlbGVtIF0sIHRydWUgKTsKCQkJfQoKCQkJLyogZXNsaW50
LWRpc2FibGUgbm8tbG9vcC1mdW5jICovCgoJCQlhbmltLmRvbmUoIGZ1bmN0aW9uKCkgewoKCQkJ
LyogZXNsaW50LWVuYWJsZSBuby1sb29wLWZ1bmMgKi8KCgkJCQkvLyBUaGUgZmluYWwgc3RlcCBv
ZiBhICJoaWRlIiBhbmltYXRpb24gaXMgYWN0dWFsbHkgaGlkaW5nIHRoZSBlbGVtZW50CgkJCQlp
ZiAoICFoaWRkZW4gKSB7CgkJCQkJc2hvd0hpZGUoIFsgZWxlbSBdICk7CgkJCQl9CgkJCQlkYXRh
UHJpdi5yZW1vdmUoIGVsZW0sICJmeHNob3ciICk7CgkJCQlmb3IgKCBwcm9wIGluIG9yaWcgKSB7
CgkJCQkJalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBvcmlnWyBwcm9wIF0gKTsKCQkJCX0KCQkJ
fSApOwoJCX0KCgkJLy8gUGVyLXByb3BlcnR5IHNldHVwCgkJcHJvcFR3ZWVuID0gY3JlYXRlVHdl
ZW4oIGhpZGRlbiA/IGRhdGFTaG93WyBwcm9wIF0gOiAwLCBwcm9wLCBhbmltICk7CgkJaWYgKCAh
KCBwcm9wIGluIGRhdGFTaG93ICkgKSB7CgkJCWRhdGFTaG93WyBwcm9wIF0gPSBwcm9wVHdlZW4u
c3RhcnQ7CgkJCWlmICggaGlkZGVuICkgewoJCQkJcHJvcFR3ZWVuLmVuZCA9IHByb3BUd2Vlbi5z
dGFydDsKCQkJCXByb3BUd2Vlbi5zdGFydCA9IDA7CgkJCX0KCQl9Cgl9Cn0KCmZ1bmN0aW9uIHBy
b3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkgewoJdmFyIGluZGV4LCBuYW1lLCBlYXNp
bmcsIHZhbHVlLCBob29rczsKCgkvLyBjYW1lbENhc2UsIHNwZWNpYWxFYXNpbmcgYW5kIGV4cGFu
ZCBjc3NIb29rIHBhc3MKCWZvciAoIGluZGV4IGluIHByb3BzICkgewoJCW5hbWUgPSBqUXVlcnku
Y2FtZWxDYXNlKCBpbmRleCApOwoJCWVhc2luZyA9IHNwZWNpYWxFYXNpbmdbIG5hbWUgXTsKCQl2
YWx1ZSA9IHByb3BzWyBpbmRleCBdOwoJCWlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHsK
CQkJZWFzaW5nID0gdmFsdWVbIDEgXTsKCQkJdmFsdWUgPSBwcm9wc1sgaW5kZXggXSA9IHZhbHVl
WyAwIF07CgkJfQoKCQlpZiAoIGluZGV4ICE9PSBuYW1lICkgewoJCQlwcm9wc1sgbmFtZSBdID0g
dmFsdWU7CgkJCWRlbGV0ZSBwcm9wc1sgaW5kZXggXTsKCQl9CgoJCWhvb2tzID0galF1ZXJ5LmNz
c0hvb2tzWyBuYW1lIF07CgkJaWYgKCBob29rcyAmJiAiZXhwYW5kIiBpbiBob29rcyApIHsKCQkJ
dmFsdWUgPSBob29rcy5leHBhbmQoIHZhbHVlICk7CgkJCWRlbGV0ZSBwcm9wc1sgbmFtZSBdOwoK
CQkJLy8gTm90IHF1aXRlICQuZXh0ZW5kLCB0aGlzIHdvbid0IG92ZXJ3cml0ZSBleGlzdGluZyBr
ZXlzLgoJCQkvLyBSZXVzaW5nICdpbmRleCcgYmVjYXVzZSB3ZSBoYXZlIHRoZSBjb3JyZWN0ICJu
YW1lIgoJCQlmb3IgKCBpbmRleCBpbiB2YWx1ZSApIHsKCQkJCWlmICggISggaW5kZXggaW4gcHJv
cHMgKSApIHsKCQkJCQlwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyBpbmRleCBdOwoJCQkJCXNwZWNp
YWxFYXNpbmdbIGluZGV4IF0gPSBlYXNpbmc7CgkJCQl9CgkJCX0KCQl9IGVsc2UgewoJCQlzcGVj
aWFsRWFzaW5nWyBuYW1lIF0gPSBlYXNpbmc7CgkJfQoJfQp9CgpmdW5jdGlvbiBBbmltYXRpb24o
IGVsZW0sIHByb3BlcnRpZXMsIG9wdGlvbnMgKSB7Cgl2YXIgcmVzdWx0LAoJCXN0b3BwZWQsCgkJ
aW5kZXggPSAwLAoJCWxlbmd0aCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzLmxlbmd0aCwKCQlkZWZl
cnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLmFsd2F5cyggZnVuY3Rpb24oKSB7CgoJCQkvLyBEb24n
dCBtYXRjaCBlbGVtIGluIHRoZSA6YW5pbWF0ZWQgc2VsZWN0b3IKCQkJZGVsZXRlIHRpY2suZWxl
bTsKCQl9ICksCgkJdGljayA9IGZ1bmN0aW9uKCkgewoJCQlpZiAoIHN0b3BwZWQgKSB7CgkJCQly
ZXR1cm4gZmFsc2U7CgkJCX0KCQkJdmFyIGN1cnJlbnRUaW1lID0gZnhOb3cgfHwgY3JlYXRlRnhO
b3coKSwKCQkJCXJlbWFpbmluZyA9IE1hdGgubWF4KCAwLCBhbmltYXRpb24uc3RhcnRUaW1lICsg
YW5pbWF0aW9uLmR1cmF0aW9uIC0gY3VycmVudFRpbWUgKSwKCgkJCQkvLyBTdXBwb3J0OiBBbmRy
b2lkIDIuMyBvbmx5CgkJCQkvLyBBcmNoYWljIGNyYXNoIGJ1ZyB3b24ndCBhbGxvdyB1cyB0byB1
c2UgYDEgLSAoIDAuNSB8fCAwIClgICgjMTI0OTcpCgkJCQl0ZW1wID0gcmVtYWluaW5nIC8gYW5p
bWF0aW9uLmR1cmF0aW9uIHx8IDAsCgkJCQlwZXJjZW50ID0gMSAtIHRlbXAsCgkJCQlpbmRleCA9
IDAsCgkJCQlsZW5ndGggPSBhbmltYXRpb24udHdlZW5zLmxlbmd0aDsKCgkJCWZvciAoIDsgaW5k
ZXggPCBsZW5ndGg7IGluZGV4KysgKSB7CgkJCQlhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1
biggcGVyY2VudCApOwoJCQl9CgoJCQlkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1h
dGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0gKTsKCgkJCS8vIElmIHRoZXJlJ3MgbW9yZSB0byBk
bywgeWllbGQKCQkJaWYgKCBwZXJjZW50IDwgMSAmJiBsZW5ndGggKSB7CgkJCQlyZXR1cm4gcmVt
YWluaW5nOwoJCQl9CgoJCQkvLyBJZiB0aGlzIHdhcyBhbiBlbXB0eSBhbmltYXRpb24sIHN5bnRo
ZXNpemUgYSBmaW5hbCBwcm9ncmVzcyBub3RpZmljYXRpb24KCQkJaWYgKCAhbGVuZ3RoICkgewoJ
CQkJZGVmZXJyZWQubm90aWZ5V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIDEsIDAgXSApOwoJCQl9
CgoJCQkvLyBSZXNvbHZlIHRoZSBhbmltYXRpb24gYW5kIHJlcG9ydCBpdHMgY29uY2x1c2lvbgoJ
CQlkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24gXSApOwoJCQlyZXR1cm4g
ZmFsc2U7CgkJfSwKCQlhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7CgkJCWVsZW06IGVs
ZW0sCgkJCXByb3BzOiBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcGVydGllcyApLAoJCQlvcHRzOiBq
UXVlcnkuZXh0ZW5kKCB0cnVlLCB7CgkJCQlzcGVjaWFsRWFzaW5nOiB7fSwKCQkJCWVhc2luZzog
alF1ZXJ5LmVhc2luZy5fZGVmYXVsdAoJCQl9LCBvcHRpb25zICksCgkJCW9yaWdpbmFsUHJvcGVy
dGllczogcHJvcGVydGllcywKCQkJb3JpZ2luYWxPcHRpb25zOiBvcHRpb25zLAoJCQlzdGFydFRp
bWU6IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksCgkJCWR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9u
LAoJCQl0d2VlbnM6IFtdLAoJCQljcmVhdGVUd2VlbjogZnVuY3Rpb24oIHByb3AsIGVuZCApIHsK
CQkJCXZhciB0d2VlbiA9IGpRdWVyeS5Ud2VlbiggZWxlbSwgYW5pbWF0aW9uLm9wdHMsIHByb3As
IGVuZCwKCQkJCQkJYW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1h
dGlvbi5vcHRzLmVhc2luZyApOwoJCQkJYW5pbWF0aW9uLnR3ZWVucy5wdXNoKCB0d2VlbiApOwoJ
CQkJcmV0dXJuIHR3ZWVuOwoJCQl9LAoJCQlzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHsKCQkJ
CXZhciBpbmRleCA9IDAsCgoJCQkJCS8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3
YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVucwoJCQkJCS8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMg
cGFydAoJCQkJCWxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7
CgkJCQlpZiAoIHN0b3BwZWQgKSB7CgkJCQkJcmV0dXJuIHRoaXM7CgkJCQl9CgkJCQlzdG9wcGVk
ID0gdHJ1ZTsKCQkJCWZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7CgkJCQkJYW5p
bWF0aW9uLnR3ZWVuc1sgaW5kZXggXS5ydW4oIDEgKTsKCQkJCX0KCgkJCQkvLyBSZXNvbHZlIHdo
ZW4gd2UgcGxheWVkIHRoZSBsYXN0IGZyYW1lOyBvdGhlcndpc2UsIHJlamVjdAoJCQkJaWYgKCBn
b3RvRW5kICkgewoJCQkJCWRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAx
LCAwIF0gKTsKCQkJCQlkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdv
dG9FbmQgXSApOwoJCQkJfSBlbHNlIHsKCQkJCQlkZWZlcnJlZC5yZWplY3RXaXRoKCBlbGVtLCBb
IGFuaW1hdGlvbiwgZ290b0VuZCBdICk7CgkJCQl9CgkJCQlyZXR1cm4gdGhpczsKCQkJfQoJCX0g
KSwKCQlwcm9wcyA9IGFuaW1hdGlvbi5wcm9wczsKCglwcm9wRmlsdGVyKCBwcm9wcywgYW5pbWF0
aW9uLm9wdHMuc3BlY2lhbEVhc2luZyApOwoKCWZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4
KysgKSB7CgkJcmVzdWx0ID0gQW5pbWF0aW9uLnByZWZpbHRlcnNbIGluZGV4IF0uY2FsbCggYW5p
bWF0aW9uLCBlbGVtLCBwcm9wcywgYW5pbWF0aW9uLm9wdHMgKTsKCQlpZiAoIHJlc3VsdCApIHsK
CQkJaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcmVzdWx0LnN0b3AgKSApIHsKCQkJCWpRdWVyeS5f
cXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9
CgkJCQkJalF1ZXJ5LnByb3h5KCByZXN1bHQuc3RvcCwgcmVzdWx0ICk7CgkJCX0KCQkJcmV0dXJu
IHJlc3VsdDsKCQl9Cgl9CgoJalF1ZXJ5Lm1hcCggcHJvcHMsIGNyZWF0ZVR3ZWVuLCBhbmltYXRp
b24gKTsKCglpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkg
ewoJCWFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApOwoJfQoKCS8v
IEF0dGFjaCBjYWxsYmFja3MgZnJvbSBvcHRpb25zCglhbmltYXRpb24KCQkucHJvZ3Jlc3MoIGFu
aW1hdGlvbi5vcHRzLnByb2dyZXNzICkKCQkuZG9uZSggYW5pbWF0aW9uLm9wdHMuZG9uZSwgYW5p
bWF0aW9uLm9wdHMuY29tcGxldGUgKQoJCS5mYWlsKCBhbmltYXRpb24ub3B0cy5mYWlsICkKCQku
YWx3YXlzKCBhbmltYXRpb24ub3B0cy5hbHdheXMgKTsKCglqUXVlcnkuZngudGltZXIoCgkJalF1
ZXJ5LmV4dGVuZCggdGljaywgewoJCQllbGVtOiBlbGVtLAoJCQlhbmltOiBhbmltYXRpb24sCgkJ
CXF1ZXVlOiBhbmltYXRpb24ub3B0cy5xdWV1ZQoJCX0gKQoJKTsKCglyZXR1cm4gYW5pbWF0aW9u
Owp9CgpqUXVlcnkuQW5pbWF0aW9uID0galF1ZXJ5LmV4dGVuZCggQW5pbWF0aW9uLCB7CgoJdHdl
ZW5lcnM6IHsKCQkiKiI6IFsgZnVuY3Rpb24oIHByb3AsIHZhbHVlICkgewoJCQl2YXIgdHdlZW4g
PSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApOwoJCQlhZGp1c3RDU1MoIHR3ZWVuLmVs
ZW0sIHByb3AsIHJjc3NOdW0uZXhlYyggdmFsdWUgKSwgdHdlZW4gKTsKCQkJcmV0dXJuIHR3ZWVu
OwoJCX0gXQoJfSwKCgl0d2VlbmVyOiBmdW5jdGlvbiggcHJvcHMsIGNhbGxiYWNrICkgewoJCWlm
ICggalF1ZXJ5LmlzRnVuY3Rpb24oIHByb3BzICkgKSB7CgkJCWNhbGxiYWNrID0gcHJvcHM7CgkJ
CXByb3BzID0gWyAiKiIgXTsKCQl9IGVsc2UgewoJCQlwcm9wcyA9IHByb3BzLm1hdGNoKCBybm90
aHRtbHdoaXRlICk7CgkJfQoKCQl2YXIgcHJvcCwKCQkJaW5kZXggPSAwLAoJCQlsZW5ndGggPSBw
cm9wcy5sZW5ndGg7CgoJCWZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7CgkJCXBy
b3AgPSBwcm9wc1sgaW5kZXggXTsKCQkJQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gPSBBbmlt
YXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXTsKCQkJQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9w
IF0udW5zaGlmdCggY2FsbGJhY2sgKTsKCQl9Cgl9LAoKCXByZWZpbHRlcnM6IFsgZGVmYXVsdFBy
ZWZpbHRlciBdLAoKCXByZWZpbHRlcjogZnVuY3Rpb24oIGNhbGxiYWNrLCBwcmVwZW5kICkgewoJ
CWlmICggcHJlcGVuZCApIHsKCQkJQW5pbWF0aW9uLnByZWZpbHRlcnMudW5zaGlmdCggY2FsbGJh
Y2sgKTsKCQl9IGVsc2UgewoJCQlBbmltYXRpb24ucHJlZmlsdGVycy5wdXNoKCBjYWxsYmFjayAp
OwoJCX0KCX0KfSApOwoKalF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZu
ICkgewoJdmFyIG9wdCA9IHNwZWVkICYmIHR5cGVvZiBzcGVlZCA9PT0gIm9iamVjdCIgPyBqUXVl
cnkuZXh0ZW5kKCB7fSwgc3BlZWQgKSA6IHsKCQljb21wbGV0ZTogZm4gfHwgIWZuICYmIGVhc2lu
ZyB8fAoJCQlqUXVlcnkuaXNGdW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCwKCQlkdXJhdGlvbjog
c3BlZWQsCgkJZWFzaW5nOiBmbiAmJiBlYXNpbmcgfHwgZWFzaW5nICYmICFqUXVlcnkuaXNGdW5j
dGlvbiggZWFzaW5nICkgJiYgZWFzaW5nCgl9OwoKCS8vIEdvIHRvIHRoZSBlbmQgc3RhdGUgaWYg
ZnggYXJlIG9mZgoJaWYgKCBqUXVlcnkuZngub2ZmICkgewoJCW9wdC5kdXJhdGlvbiA9IDA7CgoJ
fSBlbHNlIHsKCQlpZiAoIHR5cGVvZiBvcHQuZHVyYXRpb24gIT09ICJudW1iZXIiICkgewoJCQlp
ZiAoIG9wdC5kdXJhdGlvbiBpbiBqUXVlcnkuZnguc3BlZWRzICkgewoJCQkJb3B0LmR1cmF0aW9u
ID0galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF07CgoJCQl9IGVsc2UgewoJCQkJb3B0
LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkcy5fZGVmYXVsdDsKCQkJfQoJCX0KCX0KCgkvLyBO
b3JtYWxpemUgb3B0LnF1ZXVlIC0gdHJ1ZS91bmRlZmluZWQvbnVsbCAtPiAiZngiCglpZiAoIG9w
dC5xdWV1ZSA9PSBudWxsIHx8IG9wdC5xdWV1ZSA9PT0gdHJ1ZSApIHsKCQlvcHQucXVldWUgPSAi
ZngiOwoJfQoKCS8vIFF1ZXVlaW5nCglvcHQub2xkID0gb3B0LmNvbXBsZXRlOwoKCW9wdC5jb21w
bGV0ZSA9IGZ1bmN0aW9uKCkgewoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIG9wdC5vbGQgKSAp
IHsKCQkJb3B0Lm9sZC5jYWxsKCB0aGlzICk7CgkJfQoKCQlpZiAoIG9wdC5xdWV1ZSApIHsKCQkJ
alF1ZXJ5LmRlcXVldWUoIHRoaXMsIG9wdC5xdWV1ZSApOwoJCX0KCX07CgoJcmV0dXJuIG9wdDsK
fTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCWZhZGVUbzogZnVuY3Rpb24oIHNwZWVkLCB0bywgZWFz
aW5nLCBjYWxsYmFjayApIHsKCgkJLy8gU2hvdyBhbnkgaGlkZGVuIGVsZW1lbnRzIGFmdGVyIHNl
dHRpbmcgb3BhY2l0eSB0byAwCgkJcmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbldpdGhpblRy
ZWUgKS5jc3MoICJvcGFjaXR5IiwgMCApLnNob3coKQoKCQkJLy8gQW5pbWF0ZSB0byB0aGUgdmFs
dWUgc3BlY2lmaWVkCgkJCS5lbmQoKS5hbmltYXRlKCB7IG9wYWNpdHk6IHRvIH0sIHNwZWVkLCBl
YXNpbmcsIGNhbGxiYWNrICk7Cgl9LAoJYW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBl
YXNpbmcsIGNhbGxiYWNrICkgewoJCXZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBw
cm9wICksCgkJCW9wdGFsbCA9IGpRdWVyeS5zcGVlZCggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sg
KSwKCQkJZG9BbmltYXRpb24gPSBmdW5jdGlvbigpIHsKCgkJCQkvLyBPcGVyYXRlIG9uIGEgY29w
eSBvZiBwcm9wIHNvIHBlci1wcm9wZXJ0eSBlYXNpbmcgd29uJ3QgYmUgbG9zdAoJCQkJdmFyIGFu
aW0gPSBBbmltYXRpb24oIHRoaXMsIGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wICksIG9wdGFsbCAp
OwoKCQkJCS8vIEVtcHR5IGFuaW1hdGlvbnMsIG9yIGZpbmlzaGluZyByZXNvbHZlcyBpbW1lZGlh
dGVseQoJCQkJaWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsICJmaW5pc2giICkgKSB7
CgkJCQkJYW5pbS5zdG9wKCB0cnVlICk7CgkJCQl9CgkJCX07CgkJCWRvQW5pbWF0aW9uLmZpbmlz
aCA9IGRvQW5pbWF0aW9uOwoKCQlyZXR1cm4gZW1wdHkgfHwgb3B0YWxsLnF1ZXVlID09PSBmYWxz
ZSA/CgkJCXRoaXMuZWFjaCggZG9BbmltYXRpb24gKSA6CgkJCXRoaXMucXVldWUoIG9wdGFsbC5x
dWV1ZSwgZG9BbmltYXRpb24gKTsKCX0sCglzdG9wOiBmdW5jdGlvbiggdHlwZSwgY2xlYXJRdWV1
ZSwgZ290b0VuZCApIHsKCQl2YXIgc3RvcFF1ZXVlID0gZnVuY3Rpb24oIGhvb2tzICkgewoJCQl2
YXIgc3RvcCA9IGhvb2tzLnN0b3A7CgkJCWRlbGV0ZSBob29rcy5zdG9wOwoJCQlzdG9wKCBnb3Rv
RW5kICk7CgkJfTsKCgkJaWYgKCB0eXBlb2YgdHlwZSAhPT0gInN0cmluZyIgKSB7CgkJCWdvdG9F
bmQgPSBjbGVhclF1ZXVlOwoJCQljbGVhclF1ZXVlID0gdHlwZTsKCQkJdHlwZSA9IHVuZGVmaW5l
ZDsKCQl9CgkJaWYgKCBjbGVhclF1ZXVlICYmIHR5cGUgIT09IGZhbHNlICkgewoJCQl0aGlzLnF1
ZXVlKCB0eXBlIHx8ICJmeCIsIFtdICk7CgkJfQoKCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlv
bigpIHsKCQkJdmFyIGRlcXVldWUgPSB0cnVlLAoJCQkJaW5kZXggPSB0eXBlICE9IG51bGwgJiYg
dHlwZSArICJxdWV1ZUhvb2tzIiwKCQkJCXRpbWVycyA9IGpRdWVyeS50aW1lcnMsCgkJCQlkYXRh
ID0gZGF0YVByaXYuZ2V0KCB0aGlzICk7CgoJCQlpZiAoIGluZGV4ICkgewoJCQkJaWYgKCBkYXRh
WyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHsKCQkJCQlzdG9wUXVldWUoIGRhdGFb
IGluZGV4IF0gKTsKCQkJCX0KCQkJfSBlbHNlIHsKCQkJCWZvciAoIGluZGV4IGluIGRhdGEgKSB7
CgkJCQkJaWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCAmJiBycnVuLnRl
c3QoIGluZGV4ICkgKSB7CgkJCQkJCXN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApOwoJCQkJCX0K
CQkJCX0KCQkJfQoKCQkJZm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHsK
CQkJCWlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYKCQkJCQkoIHR5cGUgPT0g
bnVsbCB8fCB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUgKSApIHsKCgkJCQkJdGltZXJz
WyBpbmRleCBdLmFuaW0uc3RvcCggZ290b0VuZCApOwoJCQkJCWRlcXVldWUgPSBmYWxzZTsKCQkJ
CQl0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApOwoJCQkJfQoJCQl9CgoJCQkvLyBTdGFydCB0aGUg
bmV4dCBpbiB0aGUgcXVldWUgaWYgdGhlIGxhc3Qgc3RlcCB3YXNuJ3QgZm9yY2VkLgoJCQkvLyBU
aW1lcnMgY3VycmVudGx5IHdpbGwgY2FsbCB0aGVpciBjb21wbGV0ZSBjYWxsYmFja3MsIHdoaWNo
CgkJCS8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC4KCQkJaWYg
KCBkZXF1ZXVlIHx8ICFnb3RvRW5kICkgewoJCQkJalF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUg
KTsKCQkJfQoJCX0gKTsKCX0sCglmaW5pc2g6IGZ1bmN0aW9uKCB0eXBlICkgewoJCWlmICggdHlw
ZSAhPT0gZmFsc2UgKSB7CgkJCXR5cGUgPSB0eXBlIHx8ICJmeCI7CgkJfQoJCXJldHVybiB0aGlz
LmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIgaW5kZXgsCgkJCQlkYXRhID0gZGF0YVByaXYuZ2V0
KCB0aGlzICksCgkJCQlxdWV1ZSA9IGRhdGFbIHR5cGUgKyAicXVldWUiIF0sCgkJCQlob29rcyA9
IGRhdGFbIHR5cGUgKyAicXVldWVIb29rcyIgXSwKCQkJCXRpbWVycyA9IGpRdWVyeS50aW1lcnMs
CgkJCQlsZW5ndGggPSBxdWV1ZSA/IHF1ZXVlLmxlbmd0aCA6IDA7CgoJCQkvLyBFbmFibGUgZmlu
aXNoaW5nIGZsYWcgb24gcHJpdmF0ZSBkYXRhCgkJCWRhdGEuZmluaXNoID0gdHJ1ZTsKCgkJCS8v
IEVtcHR5IHRoZSBxdWV1ZSBmaXJzdAoJCQlqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIFtdICk7
CgoJCQlpZiAoIGhvb2tzICYmIGhvb2tzLnN0b3AgKSB7CgkJCQlob29rcy5zdG9wLmNhbGwoIHRo
aXMsIHRydWUgKTsKCQkJfQoKCQkJLy8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBh
bmQgZmluaXNoIHRoZW0KCQkJZm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyAp
IHsKCQkJCWlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRl
eCBdLnF1ZXVlID09PSB0eXBlICkgewoJCQkJCXRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRy
dWUgKTsKCQkJCQl0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApOwoJCQkJfQoJCQl9CgoJCQkvLyBM
b29rIGZvciBhbnkgYW5pbWF0aW9ucyBpbiB0aGUgb2xkIHF1ZXVlIGFuZCBmaW5pc2ggdGhlbQoJ
CQlmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkgewoJCQkJaWYgKCBx
dWV1ZVsgaW5kZXggXSAmJiBxdWV1ZVsgaW5kZXggXS5maW5pc2ggKSB7CgkJCQkJcXVldWVbIGlu
ZGV4IF0uZmluaXNoLmNhbGwoIHRoaXMgKTsKCQkJCX0KCQkJfQoKCQkJLy8gVHVybiBvZmYgZmlu
aXNoaW5nIGZsYWcKCQkJZGVsZXRlIGRhdGEuZmluaXNoOwoJCX0gKTsKCX0KfSApOwoKalF1ZXJ5
LmVhY2goIFsgInRvZ2dsZSIsICJzaG93IiwgImhpZGUiIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkg
ewoJdmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07CglqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1
bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsKCQlyZXR1cm4gc3BlZWQgPT0gbnVs
bCB8fCB0eXBlb2Ygc3BlZWQgPT09ICJib29sZWFuIiA/CgkJCWNzc0ZuLmFwcGx5KCB0aGlzLCBh
cmd1bWVudHMgKSA6CgkJCXRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQs
IGVhc2luZywgY2FsbGJhY2sgKTsKCX07Cn0gKTsKCi8vIEdlbmVyYXRlIHNob3J0Y3V0cyBmb3Ig
Y3VzdG9tIGFuaW1hdGlvbnMKalF1ZXJ5LmVhY2goIHsKCXNsaWRlRG93bjogZ2VuRngoICJzaG93
IiApLAoJc2xpZGVVcDogZ2VuRngoICJoaWRlIiApLAoJc2xpZGVUb2dnbGU6IGdlbkZ4KCAidG9n
Z2xlIiApLAoJZmFkZUluOiB7IG9wYWNpdHk6ICJzaG93IiB9LAoJZmFkZU91dDogeyBvcGFjaXR5
OiAiaGlkZSIgfSwKCWZhZGVUb2dnbGU6IHsgb3BhY2l0eTogInRvZ2dsZSIgfQp9LCBmdW5jdGlv
biggbmFtZSwgcHJvcHMgKSB7CglqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwg
ZWFzaW5nLCBjYWxsYmFjayApIHsKCQlyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQs
IGVhc2luZywgY2FsbGJhY2sgKTsKCX07Cn0gKTsKCmpRdWVyeS50aW1lcnMgPSBbXTsKalF1ZXJ5
LmZ4LnRpY2sgPSBmdW5jdGlvbigpIHsKCXZhciB0aW1lciwKCQlpID0gMCwKCQl0aW1lcnMgPSBq
UXVlcnkudGltZXJzOwoKCWZ4Tm93ID0galF1ZXJ5Lm5vdygpOwoKCWZvciAoIDsgaSA8IHRpbWVy
cy5sZW5ndGg7IGkrKyApIHsKCQl0aW1lciA9IHRpbWVyc1sgaSBdOwoKCQkvLyBSdW4gdGhlIHRp
bWVyIGFuZCBzYWZlbHkgcmVtb3ZlIGl0IHdoZW4gZG9uZSAoYWxsb3dpbmcgZm9yIGV4dGVybmFs
IHJlbW92YWwpCgkJaWYgKCAhdGltZXIoKSAmJiB0aW1lcnNbIGkgXSA9PT0gdGltZXIgKSB7CgkJ
CXRpbWVycy5zcGxpY2UoIGktLSwgMSApOwoJCX0KCX0KCglpZiAoICF0aW1lcnMubGVuZ3RoICkg
ewoJCWpRdWVyeS5meC5zdG9wKCk7Cgl9CglmeE5vdyA9IHVuZGVmaW5lZDsKfTsKCmpRdWVyeS5m
eC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHsKCWpRdWVyeS50aW1lcnMucHVzaCggdGltZXIg
KTsKCWpRdWVyeS5meC5zdGFydCgpOwp9OwoKalF1ZXJ5LmZ4LmludGVydmFsID0gMTM7CmpRdWVy
eS5meC5zdGFydCA9IGZ1bmN0aW9uKCkgewoJaWYgKCBpblByb2dyZXNzICkgewoJCXJldHVybjsK
CX0KCglpblByb2dyZXNzID0gdHJ1ZTsKCXNjaGVkdWxlKCk7Cn07CgpqUXVlcnkuZnguc3RvcCA9
IGZ1bmN0aW9uKCkgewoJaW5Qcm9ncmVzcyA9IG51bGw7Cn07CgpqUXVlcnkuZnguc3BlZWRzID0g
ewoJc2xvdzogNjAwLAoJZmFzdDogMjAwLAoKCS8vIERlZmF1bHQgc3BlZWQKCV9kZWZhdWx0OiA0
MDAKfTsKCgovLyBCYXNlZCBvZmYgb2YgdGhlIHBsdWdpbiBieSBDbGludCBIZWxmZXJzLCB3aXRo
IHBlcm1pc3Npb24uCi8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDEwMDMyNDAxNDc0
Ny9odHRwOi8vYmxpbmRzaWduYWxzLmNvbS9pbmRleC5waHAvMjAwOS8wNy9qcXVlcnktZGVsYXkv
CmpRdWVyeS5mbi5kZWxheSA9IGZ1bmN0aW9uKCB0aW1lLCB0eXBlICkgewoJdGltZSA9IGpRdWVy
eS5meCA/IGpRdWVyeS5meC5zcGVlZHNbIHRpbWUgXSB8fCB0aW1lIDogdGltZTsKCXR5cGUgPSB0
eXBlIHx8ICJmeCI7CgoJcmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBo
b29rcyApIHsKCQl2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7
CgkJaG9va3Muc3RvcCA9IGZ1bmN0aW9uKCkgewoJCQl3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1l
b3V0ICk7CgkJfTsKCX0gKTsKfTsKCgooIGZ1bmN0aW9uKCkgewoJdmFyIGlucHV0ID0gZG9jdW1l
bnQuY3JlYXRlRWxlbWVudCggImlucHV0IiApLAoJCXNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVs
ZW1lbnQoICJzZWxlY3QiICksCgkJb3B0ID0gc2VsZWN0LmFwcGVuZENoaWxkKCBkb2N1bWVudC5j
cmVhdGVFbGVtZW50KCAib3B0aW9uIiApICk7CgoJaW5wdXQudHlwZSA9ICJjaGVja2JveCI7CgoJ
Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMyBvbmx5CgkvLyBEZWZhdWx0IHZhbHVlIGZvciBhIGNo
ZWNrYm94IHNob3VsZCBiZSAib24iCglzdXBwb3J0LmNoZWNrT24gPSBpbnB1dC52YWx1ZSAhPT0g
IiI7CgoJLy8gU3VwcG9ydDogSUUgPD0xMSBvbmx5CgkvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZElu
ZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdAoJc3VwcG9ydC5vcHRTZWxlY3RlZCA9
IG9wdC5zZWxlY3RlZDsKCgkvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHkKCS8vIEFuIGlucHV0IGxv
c2VzIGl0cyB2YWx1ZSBhZnRlciBiZWNvbWluZyBhIHJhZGlvCglpbnB1dCA9IGRvY3VtZW50LmNy
ZWF0ZUVsZW1lbnQoICJpbnB1dCIgKTsKCWlucHV0LnZhbHVlID0gInQiOwoJaW5wdXQudHlwZSA9
ICJyYWRpbyI7CglzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gInQiOwp9ICko
KTsKCgp2YXIgYm9vbEhvb2ssCglhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZTsK
CmpRdWVyeS5mbi5leHRlbmQoIHsKCWF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHsKCQly
ZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5s
ZW5ndGggPiAxICk7Cgl9LAoKCXJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBuYW1lICkgewoJCXJldHVy
biB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFt
ZSApOwoJCX0gKTsKCX0KfSApOwoKalF1ZXJ5LmV4dGVuZCggewoJYXR0cjogZnVuY3Rpb24oIGVs
ZW0sIG5hbWUsIHZhbHVlICkgewoJCXZhciByZXQsIGhvb2tzLAoJCQluVHlwZSA9IGVsZW0ubm9k
ZVR5cGU7CgoJCS8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFu
ZCBhdHRyaWJ1dGUgbm9kZXMKCQlpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5U
eXBlID09PSAyICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBGYWxsYmFjayB0byBwcm9wIHdoZW4g
YXR0cmlidXRlcyBhcmUgbm90IHN1cHBvcnRlZAoJCWlmICggdHlwZW9mIGVsZW0uZ2V0QXR0cmli
dXRlID09PSAidW5kZWZpbmVkIiApIHsKCQkJcmV0dXJuIGpRdWVyeS5wcm9wKCBlbGVtLCBuYW1l
LCB2YWx1ZSApOwoJCX0KCgkJLy8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRo
ZSBsb3dlcmNhc2UgdmVyc2lvbgoJCS8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRl
ZmluZWQKCQlpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHsK
CQkJaG9va3MgPSBqUXVlcnkuYXR0ckhvb2tzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSB8fAoJCQkJ
KCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogdW5kZWZp
bmVkICk7CgkJfQoKCQlpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7CgkJCWlmICggdmFsdWUg
PT09IG51bGwgKSB7CgkJCQlqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApOwoJCQkJcmV0
dXJuOwoJCQl9CgoJCQlpZiAoIGhvb2tzICYmICJzZXQiIGluIGhvb2tzICYmCgkJCQkoIHJldCA9
IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7CgkJCQly
ZXR1cm4gcmV0OwoJCQl9CgoJCQllbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyAiIiAp
OwoJCQlyZXR1cm4gdmFsdWU7CgkJfQoKCQlpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYm
ICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHsKCQkJcmV0dXJu
IHJldDsKCQl9CgoJCXJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTsKCgkJLy8g
Tm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRl
ZmluZWQKCQlyZXR1cm4gcmV0ID09IG51bGwgPyB1bmRlZmluZWQgOiByZXQ7Cgl9LAoKCWF0dHJI
b29rczogewoJCXR5cGU6IHsKCQkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7CgkJCQlp
ZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09ICJyYWRpbyIgJiYKCQkJCQlub2Rl
TmFtZSggZWxlbSwgImlucHV0IiApICkgewoJCQkJCXZhciB2YWwgPSBlbGVtLnZhbHVlOwoJCQkJ
CWVsZW0uc2V0QXR0cmlidXRlKCAidHlwZSIsIHZhbHVlICk7CgkJCQkJaWYgKCB2YWwgKSB7CgkJ
CQkJCWVsZW0udmFsdWUgPSB2YWw7CgkJCQkJfQoJCQkJCXJldHVybiB2YWx1ZTsKCQkJCX0KCQkJ
fQoJCX0KCX0sCgoJcmVtb3ZlQXR0cjogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkgewoJCXZhciBu
YW1lLAoJCQlpID0gMCwKCgkJCS8vIEF0dHJpYnV0ZSBuYW1lcyBjYW4gY29udGFpbiBub24tSFRN
TCB3aGl0ZXNwYWNlIGNoYXJhY3RlcnMKCQkJLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9y
Zy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yCgkJCWF0dHJOYW1lcyA9IHZhbHVl
ICYmIHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICk7CgoJCWlmICggYXR0ck5hbWVzICYmIGVs
ZW0ubm9kZVR5cGUgPT09IDEgKSB7CgkJCXdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysg
XSApICkgewoJCQkJZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIG5hbWUgKTsKCQkJfQoJCX0KCX0KfSAp
OwoKLy8gSG9va3MgZm9yIGJvb2xlYW4gYXR0cmlidXRlcwpib29sSG9vayA9IHsKCXNldDogZnVu
Y3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkgewoJCWlmICggdmFsdWUgPT09IGZhbHNlICkgewoK
CQkJLy8gUmVtb3ZlIGJvb2xlYW4gYXR0cmlidXRlcyB3aGVuIHNldCB0byBmYWxzZQoJCQlqUXVl
cnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApOwoJCX0gZWxzZSB7CgkJCWVsZW0uc2V0QXR0cmli
dXRlKCBuYW1lLCBuYW1lICk7CgkJfQoJCXJldHVybiBuYW1lOwoJfQp9OwoKalF1ZXJ5LmVhY2go
IGpRdWVyeS5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKCAvXHcrL2cgKSwgZnVuY3Rpb24o
IGksIG5hbWUgKSB7Cgl2YXIgZ2V0dGVyID0gYXR0ckhhbmRsZVsgbmFtZSBdIHx8IGpRdWVyeS5m
aW5kLmF0dHI7CgoJYXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlz
WE1MICkgewoJCXZhciByZXQsIGhhbmRsZSwKCQkJbG93ZXJjYXNlTmFtZSA9IG5hbWUudG9Mb3dl
ckNhc2UoKTsKCgkJaWYgKCAhaXNYTUwgKSB7CgoJCQkvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29w
IGJ5IHRlbXBvcmFyaWx5IHJlbW92aW5nIHRoaXMgZnVuY3Rpb24gZnJvbSB0aGUgZ2V0dGVyCgkJ
CWhhbmRsZSA9IGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXTsKCQkJYXR0ckhhbmRsZVsgbG93
ZXJjYXNlTmFtZSBdID0gcmV0OwoJCQlyZXQgPSBnZXR0ZXIoIGVsZW0sIG5hbWUsIGlzWE1MICkg
IT0gbnVsbCA/CgkJCQlsb3dlcmNhc2VOYW1lIDoKCQkJCW51bGw7CgkJCWF0dHJIYW5kbGVbIGxv
d2VyY2FzZU5hbWUgXSA9IGhhbmRsZTsKCQl9CgkJcmV0dXJuIHJldDsKCX07Cn0gKTsKCgoKCnZh
ciByZm9jdXNhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSwKCXJj
bGlja2FibGUgPSAvXig/OmF8YXJlYSkkL2k7CgpqUXVlcnkuZm4uZXh0ZW5kKCB7Cglwcm9wOiBm
dW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7CgkJcmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LnBy
b3AsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApOwoJfSwKCglyZW1vdmVQcm9w
OiBmdW5jdGlvbiggbmFtZSApIHsKCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJ
ZGVsZXRlIHRoaXNbIGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZSBdOwoJCX0gKTsKCX0K
fSApOwoKalF1ZXJ5LmV4dGVuZCggewoJcHJvcDogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVl
ICkgewoJCXZhciByZXQsIGhvb2tzLAoJCQluVHlwZSA9IGVsZW0ubm9kZVR5cGU7CgoJCS8vIERv
bid0IGdldC9zZXQgcHJvcGVydGllcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9k
ZXMKCQlpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkgewoJ
CQlyZXR1cm47CgkJfQoKCQlpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVs
ZW0gKSApIHsKCgkJCS8vIEZpeCBuYW1lIGFuZCBhdHRhY2ggaG9va3MKCQkJbmFtZSA9IGpRdWVy
eS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZTsKCQkJaG9va3MgPSBqUXVlcnkucHJvcEhvb2tzWyBu
YW1lIF07CgkJfQoKCQlpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7CgkJCWlmICggaG9va3Mg
JiYgInNldCIgaW4gaG9va3MgJiYKCQkJCSggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwg
bmFtZSApICkgIT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiByZXQ7CgkJCX0KCgkJCXJldHVy
biAoIGVsZW1bIG5hbWUgXSA9IHZhbHVlICk7CgkJfQoKCQlpZiAoIGhvb2tzICYmICJnZXQiIGlu
IGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHsK
CQkJcmV0dXJuIHJldDsKCQl9CgoJCXJldHVybiBlbGVtWyBuYW1lIF07Cgl9LAoKCXByb3BIb29r
czogewoJCXRhYkluZGV4OiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0gKSB7CgoJCQkJLy8gU3Vw
cG9ydDogSUUgPD05IC0gMTEgb25seQoJCQkJLy8gZWxlbS50YWJJbmRleCBkb2Vzbid0IGFsd2F5
cyByZXR1cm4gdGhlCgkJCQkvLyBjb3JyZWN0IHZhbHVlIHdoZW4gaXQgaGFzbid0IGJlZW4gZXhw
bGljaXRseSBzZXQKCQkJCS8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDE0MTExNjIz
MzM0Ny9odHRwOi8vZmx1aWRwcm9qZWN0Lm9yZy9ibG9nLzIwMDgvMDEvMDkvZ2V0dGluZy1zZXR0
aW5nLWFuZC1yZW1vdmluZy10YWJpbmRleC12YWx1ZXMtd2l0aC1qYXZhc2NyaXB0LwoJCQkJLy8g
VXNlIHByb3BlciBhdHRyaWJ1dGUgcmV0cmlldmFsKCMxMjA3MikKCQkJCXZhciB0YWJpbmRleCA9
IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sICJ0YWJpbmRleCIgKTsKCgkJCQlpZiAoIHRhYmluZGV4
ICkgewoJCQkJCXJldHVybiBwYXJzZUludCggdGFiaW5kZXgsIDEwICk7CgkJCQl9CgoJCQkJaWYg
KAoJCQkJCXJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8CgkJCQkJcmNsaWNrYWJs
ZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiYKCQkJCQllbGVtLmhyZWYKCQkJCSkgewoJCQkJCXJl
dHVybiAwOwoJCQkJfQoKCQkJCXJldHVybiAtMTsKCQkJfQoJCX0KCX0sCgoJcHJvcEZpeDogewoJ
CSJmb3IiOiAiaHRtbEZvciIsCgkJImNsYXNzIjogImNsYXNzTmFtZSIKCX0KfSApOwoKLy8gU3Vw
cG9ydDogSUUgPD0xMSBvbmx5Ci8vIEFjY2Vzc2luZyB0aGUgc2VsZWN0ZWRJbmRleCBwcm9wZXJ0
eQovLyBmb3JjZXMgdGhlIGJyb3dzZXIgdG8gcmVzcGVjdCBzZXR0aW5nIHNlbGVjdGVkCi8vIG9u
IHRoZSBvcHRpb24KLy8gVGhlIGdldHRlciBlbnN1cmVzIGEgZGVmYXVsdCBvcHRpb24gaXMgc2Vs
ZWN0ZWQKLy8gd2hlbiBpbiBhbiBvcHRncm91cAovLyBlc2xpbnQgcnVsZSAibm8tdW51c2VkLWV4
cHJlc3Npb25zIiBpcyBkaXNhYmxlZCBmb3IgdGhpcyBjb2RlCi8vIHNpbmNlIGl0IGNvbnNpZGVy
cyBzdWNoIGFjY2Vzc2lvbnMgbm9vcAppZiAoICFzdXBwb3J0Lm9wdFNlbGVjdGVkICkgewoJalF1
ZXJ5LnByb3BIb29rcy5zZWxlY3RlZCA9IHsKCQlnZXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoKCQkJ
LyogZXNsaW50IG5vLXVudXNlZC1leHByZXNzaW9uczogIm9mZiIgKi8KCgkJCXZhciBwYXJlbnQg
PSBlbGVtLnBhcmVudE5vZGU7CgkJCWlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkg
ewoJCQkJcGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDsKCQkJfQoJCQlyZXR1cm4gbnVs
bDsKCQl9LAoJCXNldDogZnVuY3Rpb24oIGVsZW0gKSB7CgoJCQkvKiBlc2xpbnQgbm8tdW51c2Vk
LWV4cHJlc3Npb25zOiAib2ZmIiAqLwoKCQkJdmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTsK
CQkJaWYgKCBwYXJlbnQgKSB7CgkJCQlwYXJlbnQuc2VsZWN0ZWRJbmRleDsKCgkJCQlpZiAoIHBh
cmVudC5wYXJlbnROb2RlICkgewoJCQkJCXBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7
CgkJCQl9CgkJCX0KCQl9Cgl9Owp9CgpqUXVlcnkuZWFjaCggWwoJInRhYkluZGV4IiwKCSJyZWFk
T25seSIsCgkibWF4TGVuZ3RoIiwKCSJjZWxsU3BhY2luZyIsCgkiY2VsbFBhZGRpbmciLAoJInJv
d1NwYW4iLAoJImNvbFNwYW4iLAoJInVzZU1hcCIsCgkiZnJhbWVCb3JkZXIiLAoJImNvbnRlbnRF
ZGl0YWJsZSIKXSwgZnVuY3Rpb24oKSB7CglqUXVlcnkucHJvcEZpeFsgdGhpcy50b0xvd2VyQ2Fz
ZSgpIF0gPSB0aGlzOwp9ICk7CgoKCgoJLy8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2Ug
YWNjb3JkaW5nIHRvIEhUTUwgc3BlYwoJLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9t
dWx0aXBhZ2UvaW5mcmFzdHJ1Y3R1cmUuaHRtbCNzdHJpcC1hbmQtY29sbGFwc2Utd2hpdGVzcGFj
ZQoJZnVuY3Rpb24gc3RyaXBBbmRDb2xsYXBzZSggdmFsdWUgKSB7CgkJdmFyIHRva2VucyA9IHZh
bHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107CgkJcmV0dXJuIHRva2Vucy5qb2luKCAi
ICIgKTsKCX0KCgpmdW5jdGlvbiBnZXRDbGFzcyggZWxlbSApIHsKCXJldHVybiBlbGVtLmdldEF0
dHJpYnV0ZSAmJiBlbGVtLmdldEF0dHJpYnV0ZSggImNsYXNzIiApIHx8ICIiOwp9CgpqUXVlcnku
Zm4uZXh0ZW5kKCB7CglhZGRDbGFzczogZnVuY3Rpb24oIHZhbHVlICkgewoJCXZhciBjbGFzc2Vz
LCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSwKCQkJaSA9IDA7CgoJ
CWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7CgkJCXJldHVybiB0aGlzLmVhY2go
IGZ1bmN0aW9uKCBqICkgewoJCQkJalF1ZXJ5KCB0aGlzICkuYWRkQ2xhc3MoIHZhbHVlLmNhbGwo
IHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApOwoJCQl9ICk7CgkJfQoKCQlpZiAoIHR5cGVv
ZiB2YWx1ZSA9PT0gInN0cmluZyIgJiYgdmFsdWUgKSB7CgkJCWNsYXNzZXMgPSB2YWx1ZS5tYXRj
aCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdOwoKCQkJd2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysg
XSApICkgewoJCQkJY3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApOwoJCQkJY3VyID0gZWxlbS5u
b2RlVHlwZSA9PT0gMSAmJiAoICIgIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyAi
ICIgKTsKCgkJCQlpZiAoIGN1ciApIHsKCQkJCQlqID0gMDsKCQkJCQl3aGlsZSAoICggY2xhenog
PSBjbGFzc2VzWyBqKysgXSApICkgewoJCQkJCQlpZiAoIGN1ci5pbmRleE9mKCAiICIgKyBjbGF6
eiArICIgIiApIDwgMCApIHsKCQkJCQkJCWN1ciArPSBjbGF6eiArICIgIjsKCQkJCQkJfQoJCQkJ
CX0KCgkJCQkJLy8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJl
bmRlcmluZy4KCQkJCQlmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7CgkJCQkJ
aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHsKCQkJCQkJZWxlbS5zZXRBdHRyaWJ1dGUo
ICJjbGFzcyIsIGZpbmFsVmFsdWUgKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiB0
aGlzOwoJfSwKCglyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkgewoJCXZhciBjbGFzc2Vz
LCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSwKCQkJaSA9IDA7CgoJ
CWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7CgkJCXJldHVybiB0aGlzLmVhY2go
IGZ1bmN0aW9uKCBqICkgewoJCQkJalF1ZXJ5KCB0aGlzICkucmVtb3ZlQ2xhc3MoIHZhbHVlLmNh
bGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApOwoJCQl9ICk7CgkJfQoKCQlpZiAoICFh
cmd1bWVudHMubGVuZ3RoICkgewoJCQlyZXR1cm4gdGhpcy5hdHRyKCAiY2xhc3MiLCAiIiApOwoJ
CX0KCgkJaWYgKCB0eXBlb2YgdmFsdWUgPT09ICJzdHJpbmciICYmIHZhbHVlICkgewoJCQljbGFz
c2VzID0gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTsKCgkJCXdoaWxlICggKCBl
bGVtID0gdGhpc1sgaSsrIF0gKSApIHsKCQkJCWN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTsK
CgkJCQkvLyBUaGlzIGV4cHJlc3Npb24gaXMgaGVyZSBmb3IgYmV0dGVyIGNvbXByZXNzaWJpbGl0
eSAoc2VlIGFkZENsYXNzKQoJCQkJY3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoICIgIiAr
IHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyAiICIgKTsKCgkJCQlpZiAoIGN1ciApIHsK
CQkJCQlqID0gMDsKCQkJCQl3aGlsZSAoICggY2xhenogPSBjbGFzc2VzWyBqKysgXSApICkgewoK
CQkJCQkJLy8gUmVtb3ZlICphbGwqIGluc3RhbmNlcwoJCQkJCQl3aGlsZSAoIGN1ci5pbmRleE9m
KCAiICIgKyBjbGF6eiArICIgIiApID4gLTEgKSB7CgkJCQkJCQljdXIgPSBjdXIucmVwbGFjZSgg
IiAiICsgY2xhenogKyAiICIsICIgIiApOwoJCQkJCQl9CgkJCQkJfQoKCQkJCQkvLyBPbmx5IGFz
c2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLgoJCQkJCWZpbmFs
VmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTsKCQkJCQlpZiAoIGN1clZhbHVlICE9PSBm
aW5hbFZhbHVlICkgewoJCQkJCQllbGVtLnNldEF0dHJpYnV0ZSggImNsYXNzIiwgZmluYWxWYWx1
ZSApOwoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCXRvZ2dsZUNs
YXNzOiBmdW5jdGlvbiggdmFsdWUsIHN0YXRlVmFsICkgewoJCXZhciB0eXBlID0gdHlwZW9mIHZh
bHVlOwoKCQlpZiAoIHR5cGVvZiBzdGF0ZVZhbCA9PT0gImJvb2xlYW4iICYmIHR5cGUgPT09ICJz
dHJpbmciICkgewoJCQlyZXR1cm4gc3RhdGVWYWwgPyB0aGlzLmFkZENsYXNzKCB2YWx1ZSApIDog
dGhpcy5yZW1vdmVDbGFzcyggdmFsdWUgKTsKCQl9CgoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24o
IHZhbHVlICkgKSB7CgkJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkgewoJCQkJalF1
ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoCgkJCQkJdmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xh
c3MoIHRoaXMgKSwgc3RhdGVWYWwgKSwKCQkJCQlzdGF0ZVZhbAoJCQkJKTsKCQkJfSApOwoJCX0K
CgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXZhciBjbGFzc05hbWUsIGksIHNl
bGYsIGNsYXNzTmFtZXM7CgoJCQlpZiAoIHR5cGUgPT09ICJzdHJpbmciICkgewoKCQkJCS8vIFRv
Z2dsZSBpbmRpdmlkdWFsIGNsYXNzIG5hbWVzCgkJCQlpID0gMDsKCQkJCXNlbGYgPSBqUXVlcnko
IHRoaXMgKTsKCQkJCWNsYXNzTmFtZXMgPSB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8
IFtdOwoKCQkJCXdoaWxlICggKCBjbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpKysgXSApICkgewoK
CQkJCQkvLyBDaGVjayBlYWNoIGNsYXNzTmFtZSBnaXZlbiwgc3BhY2Ugc2VwYXJhdGVkIGxpc3QK
CQkJCQlpZiAoIHNlbGYuaGFzQ2xhc3MoIGNsYXNzTmFtZSApICkgewoJCQkJCQlzZWxmLnJlbW92
ZUNsYXNzKCBjbGFzc05hbWUgKTsKCQkJCQl9IGVsc2UgewoJCQkJCQlzZWxmLmFkZENsYXNzKCBj
bGFzc05hbWUgKTsKCQkJCQl9CgkJCQl9CgoJCQkvLyBUb2dnbGUgd2hvbGUgY2xhc3MgbmFtZQoJ
CQl9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGUgPT09ICJib29sZWFuIiAp
IHsKCQkJCWNsYXNzTmFtZSA9IGdldENsYXNzKCB0aGlzICk7CgkJCQlpZiAoIGNsYXNzTmFtZSAp
IHsKCgkJCQkJLy8gU3RvcmUgY2xhc3NOYW1lIGlmIHNldAoJCQkJCWRhdGFQcml2LnNldCggdGhp
cywgIl9fY2xhc3NOYW1lX18iLCBjbGFzc05hbWUgKTsKCQkJCX0KCgkJCQkvLyBJZiB0aGUgZWxl
bWVudCBoYXMgYSBjbGFzcyBuYW1lIG9yIGlmIHdlJ3JlIHBhc3NlZCBgZmFsc2VgLAoJCQkJLy8g
dGhlbiByZW1vdmUgdGhlIHdob2xlIGNsYXNzbmFtZSAoaWYgdGhlcmUgd2FzIG9uZSwgdGhlIGFi
b3ZlIHNhdmVkIGl0KS4KCQkJCS8vIE90aGVyd2lzZSBicmluZyBiYWNrIHdoYXRldmVyIHdhcyBw
cmV2aW91c2x5IHNhdmVkIChpZiBhbnl0aGluZyksCgkJCQkvLyBmYWxsaW5nIGJhY2sgdG8gdGhl
IGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuCgkJCQlpZiAoIHRoaXMuc2V0QXR0
cmlidXRlICkgewoJCQkJCXRoaXMuc2V0QXR0cmlidXRlKCAiY2xhc3MiLAoJCQkJCQljbGFzc05h
bWUgfHwgdmFsdWUgPT09IGZhbHNlID8KCQkJCQkJIiIgOgoJCQkJCQlkYXRhUHJpdi5nZXQoIHRo
aXMsICJfX2NsYXNzTmFtZV9fIiApIHx8ICIiCgkJCQkJKTsKCQkJCX0KCQkJfQoJCX0gKTsKCX0s
CgoJaGFzQ2xhc3M6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQl2YXIgY2xhc3NOYW1lLCBlbGVt
LAoJCQlpID0gMDsKCgkJY2xhc3NOYW1lID0gIiAiICsgc2VsZWN0b3IgKyAiICI7CgkJd2hpbGUg
KCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkgewoJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEg
JiYKCQkJCSggIiAiICsgc3RyaXBBbmRDb2xsYXBzZSggZ2V0Q2xhc3MoIGVsZW0gKSApICsgIiAi
ICkuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMSApIHsKCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoJ
CX0KCgkJcmV0dXJuIGZhbHNlOwoJfQp9ICk7CgoKCgp2YXIgcnJldHVybiA9IC9cci9nOwoKalF1
ZXJ5LmZuLmV4dGVuZCggewoJdmFsOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdmFyIGhvb2tzLCBy
ZXQsIGlzRnVuY3Rpb24sCgkJCWVsZW0gPSB0aGlzWyAwIF07CgoJCWlmICggIWFyZ3VtZW50cy5s
ZW5ndGggKSB7CgkJCWlmICggZWxlbSApIHsKCQkJCWhvb2tzID0galF1ZXJ5LnZhbEhvb2tzWyBl
bGVtLnR5cGUgXSB8fAoJCQkJCWpRdWVyeS52YWxIb29rc1sgZWxlbS5ub2RlTmFtZS50b0xvd2Vy
Q2FzZSgpIF07CgoJCQkJaWYgKCBob29rcyAmJgoJCQkJCSJnZXQiIGluIGhvb2tzICYmCgkJCQkJ
KCByZXQgPSBob29rcy5nZXQoIGVsZW0sICJ2YWx1ZSIgKSApICE9PSB1bmRlZmluZWQKCQkJCSkg
ewoJCQkJCXJldHVybiByZXQ7CgkJCQl9CgoJCQkJcmV0ID0gZWxlbS52YWx1ZTsKCgkJCQkvLyBI
YW5kbGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzCgkJCQlpZiAoIHR5cGVvZiByZXQgPT09ICJz
dHJpbmciICkgewoJCQkJCXJldHVybiByZXQucmVwbGFjZSggcnJldHVybiwgIiIgKTsKCQkJCX0K
CgkJCQkvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXIK
CQkJCXJldHVybiByZXQgPT0gbnVsbCA/ICIiIDogcmV0OwoJCQl9CgoJCQlyZXR1cm47CgkJfQoK
CQlpc0Z1bmN0aW9uID0galF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICk7CgoJCXJldHVybiB0aGlz
LmVhY2goIGZ1bmN0aW9uKCBpICkgewoJCQl2YXIgdmFsOwoKCQkJaWYgKCB0aGlzLm5vZGVUeXBl
ICE9PSAxICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQlpZiAoIGlzRnVuY3Rpb24gKSB7CgkJCQl2
YWwgPSB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBqUXVlcnkoIHRoaXMgKS52YWwoKSApOwoJCQl9IGVs
c2UgewoJCQkJdmFsID0gdmFsdWU7CgkJCX0KCgkJCS8vIFRyZWF0IG51bGwvdW5kZWZpbmVkIGFz
ICIiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nCgkJCWlmICggdmFsID09IG51bGwgKSB7CgkJ
CQl2YWwgPSAiIjsKCgkJCX0gZWxzZSBpZiAoIHR5cGVvZiB2YWwgPT09ICJudW1iZXIiICkgewoJ
CQkJdmFsICs9ICIiOwoKCQkJfSBlbHNlIGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7CgkJ
CQl2YWwgPSBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJCQlyZXR1cm4g
dmFsdWUgPT0gbnVsbCA/ICIiIDogdmFsdWUgKyAiIjsKCQkJCX0gKTsKCQkJfQoKCQkJaG9va3Mg
PSBqUXVlcnkudmFsSG9va3NbIHRoaXMudHlwZSBdIHx8IGpRdWVyeS52YWxIb29rc1sgdGhpcy5u
b2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07CgoJCQkvLyBJZiBzZXQgcmV0dXJucyB1bmRlZmluZWQs
IGZhbGwgYmFjayB0byBub3JtYWwgc2V0dGluZwoJCQlpZiAoICFob29rcyB8fCAhKCAic2V0IiBp
biBob29rcyApIHx8IGhvb2tzLnNldCggdGhpcywgdmFsLCAidmFsdWUiICkgPT09IHVuZGVmaW5l
ZCApIHsKCQkJCXRoaXMudmFsdWUgPSB2YWw7CgkJCX0KCQl9ICk7Cgl9Cn0gKTsKCmpRdWVyeS5l
eHRlbmQoIHsKCXZhbEhvb2tzOiB7CgkJb3B0aW9uOiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0g
KSB7CgoJCQkJdmFyIHZhbCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sICJ2YWx1ZSIgKTsKCQkJ
CXJldHVybiB2YWwgIT0gbnVsbCA/CgkJCQkJdmFsIDoKCgkJCQkJLy8gU3VwcG9ydDogSUUgPD0x
MCAtIDExIG9ubHkKCQkJCQkvLyBvcHRpb24udGV4dCB0aHJvd3MgZXhjZXB0aW9ucyAoIzE0Njg2
LCAjMTQ4NTgpCgkJCQkJLy8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2UKCQkJCQkvLyBo
dHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2Utd2hpdGVzcGFj
ZQoJCQkJCXN0cmlwQW5kQ29sbGFwc2UoIGpRdWVyeS50ZXh0KCBlbGVtICkgKTsKCQkJfQoJCX0s
CgkJc2VsZWN0OiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQl2YXIgdmFsdWUsIG9w
dGlvbiwgaSwKCQkJCQlvcHRpb25zID0gZWxlbS5vcHRpb25zLAoJCQkJCWluZGV4ID0gZWxlbS5z
ZWxlY3RlZEluZGV4LAoJCQkJCW9uZSA9IGVsZW0udHlwZSA9PT0gInNlbGVjdC1vbmUiLAoJCQkJ
CXZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSwKCQkJCQltYXggPSBvbmUgPyBpbmRleCArIDEgOiBv
cHRpb25zLmxlbmd0aDsKCgkJCQlpZiAoIGluZGV4IDwgMCApIHsKCQkJCQlpID0gbWF4OwoKCQkJ
CX0gZWxzZSB7CgkJCQkJaSA9IG9uZSA/IGluZGV4IDogMDsKCQkJCX0KCgkJCQkvLyBMb29wIHRo
cm91Z2ggYWxsIHRoZSBzZWxlY3RlZCBvcHRpb25zCgkJCQlmb3IgKCA7IGkgPCBtYXg7IGkrKyAp
IHsKCQkJCQlvcHRpb24gPSBvcHRpb25zWyBpIF07CgoJCQkJCS8vIFN1cHBvcnQ6IElFIDw9OSBv
bmx5CgkJCQkJLy8gSUU4LTkgZG9lc24ndCB1cGRhdGUgc2VsZWN0ZWQgYWZ0ZXIgZm9ybSByZXNl
dCAoIzI1NTEpCgkJCQkJaWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYm
CgoJCQkJCQkJLy8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4g
YSBkaXNhYmxlZCBvcHRncm91cAoJCQkJCQkJIW9wdGlvbi5kaXNhYmxlZCAmJgoJCQkJCQkJKCAh
b3B0aW9uLnBhcmVudE5vZGUuZGlzYWJsZWQgfHwKCQkJCQkJCQkhbm9kZU5hbWUoIG9wdGlvbi5w
YXJlbnROb2RlLCAib3B0Z3JvdXAiICkgKSApIHsKCgkJCQkJCS8vIEdldCB0aGUgc3BlY2lmaWMg
dmFsdWUgZm9yIHRoZSBvcHRpb24KCQkJCQkJdmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgp
OwoKCQkJCQkJLy8gV2UgZG9uJ3QgbmVlZCBhbiBhcnJheSBmb3Igb25lIHNlbGVjdHMKCQkJCQkJ
aWYgKCBvbmUgKSB7CgkJCQkJCQlyZXR1cm4gdmFsdWU7CgkJCQkJCX0KCgkJCQkJCS8vIE11bHRp
LVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5CgkJCQkJCXZhbHVlcy5wdXNoKCB2YWx1ZSApOwoJCQkJ
CX0KCQkJCX0KCgkJCQlyZXR1cm4gdmFsdWVzOwoJCQl9LAoKCQkJc2V0OiBmdW5jdGlvbiggZWxl
bSwgdmFsdWUgKSB7CgkJCQl2YXIgb3B0aW9uU2V0LCBvcHRpb24sCgkJCQkJb3B0aW9ucyA9IGVs
ZW0ub3B0aW9ucywKCQkJCQl2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLAoJCQkJ
CWkgPSBvcHRpb25zLmxlbmd0aDsKCgkJCQl3aGlsZSAoIGktLSApIHsKCQkJCQlvcHRpb24gPSBv
cHRpb25zWyBpIF07CgoJCQkJCS8qIGVzbGludC1kaXNhYmxlIG5vLWNvbmQtYXNzaWduICovCgoJ
CQkJCWlmICggb3B0aW9uLnNlbGVjdGVkID0KCQkJCQkJalF1ZXJ5LmluQXJyYXkoIGpRdWVyeS52
YWxIb29rcy5vcHRpb24uZ2V0KCBvcHRpb24gKSwgdmFsdWVzICkgPiAtMQoJCQkJCSkgewoJCQkJ
CQlvcHRpb25TZXQgPSB0cnVlOwoJCQkJCX0KCgkJCQkJLyogZXNsaW50LWVuYWJsZSBuby1jb25k
LWFzc2lnbiAqLwoJCQkJfQoKCQkJCS8vIEZvcmNlIGJyb3dzZXJzIHRvIGJlaGF2ZSBjb25zaXN0
ZW50bHkgd2hlbiBub24tbWF0Y2hpbmcgdmFsdWUgaXMgc2V0CgkJCQlpZiAoICFvcHRpb25TZXQg
KSB7CgkJCQkJZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7CgkJCQl9CgkJCQlyZXR1cm4gdmFsdWVz
OwoJCQl9CgkJfQoJfQp9ICk7CgovLyBSYWRpb3MgYW5kIGNoZWNrYm94ZXMgZ2V0dGVyL3NldHRl
cgpqUXVlcnkuZWFjaCggWyAicmFkaW8iLCAiY2hlY2tib3giIF0sIGZ1bmN0aW9uKCkgewoJalF1
ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7CgkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7
CgkJCWlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHsKCQkJCXJldHVybiAoIGVsZW0uY2hl
Y2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0x
ICk7CgkJCX0KCQl9Cgl9OwoJaWYgKCAhc3VwcG9ydC5jaGVja09uICkgewoJCWpRdWVyeS52YWxI
b29rc1sgdGhpcyBdLmdldCA9IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxlbS5nZXRB
dHRyaWJ1dGUoICJ2YWx1ZSIgKSA9PT0gbnVsbCA/ICJvbiIgOiBlbGVtLnZhbHVlOwoJCX07Cgl9
Cn0gKTsKCgoKCi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb24K
Cgp2YXIgcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC87Cgpq
UXVlcnkuZXh0ZW5kKCBqUXVlcnkuZXZlbnQsIHsKCgl0cmlnZ2VyOiBmdW5jdGlvbiggZXZlbnQs
IGRhdGEsIGVsZW0sIG9ubHlIYW5kbGVycyApIHsKCgkJdmFyIGksIGN1ciwgdG1wLCBidWJibGVU
eXBlLCBvbnR5cGUsIGhhbmRsZSwgc3BlY2lhbCwKCQkJZXZlbnRQYXRoID0gWyBlbGVtIHx8IGRv
Y3VtZW50IF0sCgkJCXR5cGUgPSBoYXNPd24uY2FsbCggZXZlbnQsICJ0eXBlIiApID8gZXZlbnQu
dHlwZSA6IGV2ZW50LAoJCQluYW1lc3BhY2VzID0gaGFzT3duLmNhbGwoIGV2ZW50LCAibmFtZXNw
YWNlIiApID8gZXZlbnQubmFtZXNwYWNlLnNwbGl0KCAiLiIgKSA6IFtdOwoKCQljdXIgPSB0bXAg
PSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDsKCgkJLy8gRG9uJ3QgZG8gZXZlbnRzIG9uIHRleHQg
YW5kIGNvbW1lbnQgbm9kZXMKCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2Rl
VHlwZSA9PT0gOCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gZm9jdXMvYmx1ciBtb3JwaHMgdG8g
Zm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93CgkJaWYg
KCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkgewoJ
CQlyZXR1cm47CgkJfQoKCQlpZiAoIHR5cGUuaW5kZXhPZiggIi4iICkgPiAtMSApIHsKCgkJCS8v
IE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUg
aW4gaGFuZGxlKCkKCQkJbmFtZXNwYWNlcyA9IHR5cGUuc3BsaXQoICIuIiApOwoJCQl0eXBlID0g
bmFtZXNwYWNlcy5zaGlmdCgpOwoJCQluYW1lc3BhY2VzLnNvcnQoKTsKCQl9CgkJb250eXBlID0g
dHlwZS5pbmRleE9mKCAiOiIgKSA8IDAgJiYgIm9uIiArIHR5cGU7CgoJCS8vIENhbGxlciBjYW4g
cGFzcyBpbiBhIGpRdWVyeS5FdmVudCBvYmplY3QsIE9iamVjdCwgb3IganVzdCBhbiBldmVudCB0
eXBlIHN0cmluZwoJCWV2ZW50ID0gZXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gPwoJCQlldmVudCA6
CgkJCW5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gIm9iamVjdCIgJiYg
ZXZlbnQgKTsKCgkJLy8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsg
JiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKQoJCWV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5k
bGVycyA/IDIgOiAzOwoJCWV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggIi4iICk7
CgkJZXZlbnQucm5hbWVzcGFjZSA9IGV2ZW50Lm5hbWVzcGFjZSA/CgkJCW5ldyBSZWdFeHAoICIo
XnxcXC4pIiArIG5hbWVzcGFjZXMuam9pbiggIlxcLig/Oi4qXFwufCkiICkgKyAiKFxcLnwkKSIg
KSA6CgkJCW51bGw7CgoJCS8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5n
IHJldXNlZAoJCWV2ZW50LnJlc3VsdCA9IHVuZGVmaW5lZDsKCQlpZiAoICFldmVudC50YXJnZXQg
KSB7CgkJCWV2ZW50LnRhcmdldCA9IGVsZW07CgkJfQoKCQkvLyBDbG9uZSBhbnkgaW5jb21pbmcg
ZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0
CgkJZGF0YSA9IGRhdGEgPT0gbnVsbCA/CgkJCVsgZXZlbnQgXSA6CgkJCWpRdWVyeS5tYWtlQXJy
YXkoIGRhdGEsIFsgZXZlbnQgXSApOwoKCQkvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3
IG91dHNpZGUgdGhlIGxpbmVzCgkJc3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBl
IF0gfHwge307CgkJaWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVj
aWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7CgkJCXJldHVybjsK
CQl9CgoJCS8vIERldGVybWluZSBldmVudCBwcm9wYWdhdGlvbiBwYXRoIGluIGFkdmFuY2UsIHBl
ciBXM0MgZXZlbnRzIHNwZWMgKCM5OTUxKQoJCS8vIEJ1YmJsZSB1cCB0byBkb2N1bWVudCwgdGhl
biB0byB3aW5kb3c7IHdhdGNoIGZvciBhIGdsb2JhbCBvd25lckRvY3VtZW50IHZhciAoIzk3MjQp
CgkJaWYgKCAhb25seUhhbmRsZXJzICYmICFzcGVjaWFsLm5vQnViYmxlICYmICFqUXVlcnkuaXNX
aW5kb3coIGVsZW0gKSApIHsKCgkJCWJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8
fCB0eXBlOwoJCQlpZiAoICFyZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApICkg
ewoJCQkJY3VyID0gY3VyLnBhcmVudE5vZGU7CgkJCX0KCQkJZm9yICggOyBjdXI7IGN1ciA9IGN1
ci5wYXJlbnROb2RlICkgewoJCQkJZXZlbnRQYXRoLnB1c2goIGN1ciApOwoJCQkJdG1wID0gY3Vy
OwoJCQl9CgoJCQkvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcu
LCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSkKCQkJaWYgKCB0bXAgPT09ICggZWxlbS5v
d25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkgKSB7CgkJCQlldmVudFBhdGgucHVzaCggdG1wLmRl
ZmF1bHRWaWV3IHx8IHRtcC5wYXJlbnRXaW5kb3cgfHwgd2luZG93ICk7CgkJCX0KCQl9CgoJCS8v
IEZpcmUgaGFuZGxlcnMgb24gdGhlIGV2ZW50IHBhdGgKCQlpID0gMDsKCQl3aGlsZSAoICggY3Vy
ID0gZXZlbnRQYXRoWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkg
ewoKCQkJZXZlbnQudHlwZSA9IGkgPiAxID8KCQkJCWJ1YmJsZVR5cGUgOgoJCQkJc3BlY2lhbC5i
aW5kVHlwZSB8fCB0eXBlOwoKCQkJLy8galF1ZXJ5IGhhbmRsZXIKCQkJaGFuZGxlID0gKCBkYXRh
UHJpdi5nZXQoIGN1ciwgImV2ZW50cyIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gJiYKCQkJCWRh
dGFQcml2LmdldCggY3VyLCAiaGFuZGxlIiApOwoJCQlpZiAoIGhhbmRsZSApIHsKCQkJCWhhbmRs
ZS5hcHBseSggY3VyLCBkYXRhICk7CgkJCX0KCgkJCS8vIE5hdGl2ZSBoYW5kbGVyCgkJCWhhbmRs
ZSA9IG9udHlwZSAmJiBjdXJbIG9udHlwZSBdOwoJCQlpZiAoIGhhbmRsZSAmJiBoYW5kbGUuYXBw
bHkgJiYgYWNjZXB0RGF0YSggY3VyICkgKSB7CgkJCQlldmVudC5yZXN1bHQgPSBoYW5kbGUuYXBw
bHkoIGN1ciwgZGF0YSApOwoJCQkJaWYgKCBldmVudC5yZXN1bHQgPT09IGZhbHNlICkgewoJCQkJ
CWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQl9CgkJCX0KCQl9CgkJZXZlbnQudHlwZSA9IHR5
cGU7CgoJCS8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBu
b3cKCQlpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkg
ewoKCQkJaWYgKCAoICFzcGVjaWFsLl9kZWZhdWx0IHx8CgkJCQlzcGVjaWFsLl9kZWZhdWx0LmFw
cGx5KCBldmVudFBhdGgucG9wKCksIGRhdGEgKSA9PT0gZmFsc2UgKSAmJgoJCQkJYWNjZXB0RGF0
YSggZWxlbSApICkgewoKCQkJCS8vIENhbGwgYSBuYXRpdmUgRE9NIG1ldGhvZCBvbiB0aGUgdGFy
Z2V0IHdpdGggdGhlIHNhbWUgbmFtZSBhcyB0aGUgZXZlbnQuCgkJCQkvLyBEb24ndCBkbyBkZWZh
dWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAo
IzYxNzApCgkJCQlpZiAoIG9udHlwZSAmJiBqUXVlcnkuaXNGdW5jdGlvbiggZWxlbVsgdHlwZSBd
ICkgJiYgIWpRdWVyeS5pc1dpbmRvdyggZWxlbSApICkgewoKCQkJCQkvLyBEb24ndCByZS10cmln
Z2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kCgkJCQkJdG1w
ID0gZWxlbVsgb250eXBlIF07CgoJCQkJCWlmICggdG1wICkgewoJCQkJCQllbGVtWyBvbnR5cGUg
XSA9IG51bGw7CgkJCQkJfQoKCQkJCQkvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNh
bWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZQoJCQkJCWpRdWVyeS5l
dmVudC50cmlnZ2VyZWQgPSB0eXBlOwoJCQkJCWVsZW1bIHR5cGUgXSgpOwoJCQkJCWpRdWVyeS5l
dmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7CgoJCQkJCWlmICggdG1wICkgewoJCQkJCQllbGVt
WyBvbnR5cGUgXSA9IHRtcDsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiBldmVudC5y
ZXN1bHQ7Cgl9LAoKCS8vIFBpZ2d5YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEg
ZGlmZmVyZW50IG9uZQoJLy8gVXNlZCBvbmx5IGZvciBgZm9jdXMoaW4gfCBvdXQpYCBldmVudHMK
CXNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7CgkJdmFyIGUgPSBqUXVl
cnkuZXh0ZW5kKAoJCQluZXcgalF1ZXJ5LkV2ZW50KCksCgkJCWV2ZW50LAoJCQl7CgkJCQl0eXBl
OiB0eXBlLAoJCQkJaXNTaW11bGF0ZWQ6IHRydWUKCQkJfQoJCSk7CgoJCWpRdWVyeS5ldmVudC50
cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7Cgl9Cgp9ICk7CgpqUXVlcnkuZm4uZXh0ZW5kKCB7CgoJ
dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7CgkJcmV0dXJuIHRoaXMuZWFjaCggZnVu
Y3Rpb24oKSB7CgkJCWpRdWVyeS5ldmVudC50cmlnZ2VyKCB0eXBlLCBkYXRhLCB0aGlzICk7CgkJ
fSApOwoJfSwKCXRyaWdnZXJIYW5kbGVyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHsKCQl2YXIg
ZWxlbSA9IHRoaXNbIDAgXTsKCQlpZiAoIGVsZW0gKSB7CgkJCXJldHVybiBqUXVlcnkuZXZlbnQu
dHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApOwoJCX0KCX0KfSApOwoKCmpRdWVyeS5l
YWNoKCAoICJibHVyIGZvY3VzIGZvY3VzaW4gZm9jdXNvdXQgcmVzaXplIHNjcm9sbCBjbGljayBk
YmxjbGljayAiICsKCSJtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNl
b3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSAiICsKCSJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlk
b3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51IiApLnNwbGl0KCAiICIgKSwKCWZ1bmN0aW9u
KCBpLCBuYW1lICkgewoKCS8vIEhhbmRsZSBldmVudCBiaW5kaW5nCglqUXVlcnkuZm5bIG5hbWUg
XSA9IGZ1bmN0aW9uKCBkYXRhLCBmbiApIHsKCQlyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDAg
PwoJCQl0aGlzLm9uKCBuYW1lLCBudWxsLCBkYXRhLCBmbiApIDoKCQkJdGhpcy50cmlnZ2VyKCBu
YW1lICk7Cgl9Owp9ICk7CgpqUXVlcnkuZm4uZXh0ZW5kKCB7Cglob3ZlcjogZnVuY3Rpb24oIGZu
T3ZlciwgZm5PdXQgKSB7CgkJcmV0dXJuIHRoaXMubW91c2VlbnRlciggZm5PdmVyICkubW91c2Vs
ZWF2ZSggZm5PdXQgfHwgZm5PdmVyICk7Cgl9Cn0gKTsKCgoKCnN1cHBvcnQuZm9jdXNpbiA9ICJv
bmZvY3VzaW4iIGluIHdpbmRvdzsKCgovLyBTdXBwb3J0OiBGaXJlZm94IDw9NDQKLy8gRmlyZWZv
eCBkb2Vzbid0IGhhdmUgZm9jdXMoaW4gfCBvdXQpIGV2ZW50cwovLyBSZWxhdGVkIHRpY2tldCAt
IGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY4Nzc4NwovLwov
LyBTdXBwb3J0OiBDaHJvbWUgPD00OCAtIDQ5LCBTYWZhcmkgPD05LjAgLSA5LjEKLy8gZm9jdXMo
aW4gfCBvdXQpIGV2ZW50cyBmaXJlIGFmdGVyIGZvY3VzICYgYmx1ciBldmVudHMsCi8vIHdoaWNo
IGlzIHNwZWMgdmlvbGF0aW9uIC0gaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZl
bnRzLyNldmVudHMtZm9jdXNldmVudC1ldmVudC1vcmRlcgovLyBSZWxhdGVkIHRpY2tldCAtIGh0
dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ0OTg1
NwppZiAoICFzdXBwb3J0LmZvY3VzaW4gKSB7CglqUXVlcnkuZWFjaCggeyBmb2N1czogImZvY3Vz
aW4iLCBibHVyOiAiZm9jdXNvdXQiIH0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7CgoJCS8vIEF0
dGFjaCBhIHNpbmdsZSBjYXB0dXJpbmcgaGFuZGxlciBvbiB0aGUgZG9jdW1lbnQgd2hpbGUgc29t
ZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0CgkJdmFyIGhhbmRsZXIgPSBmdW5jdGlvbiggZXZl
bnQgKSB7CgkJCWpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVy
eS5ldmVudC5maXgoIGV2ZW50ICkgKTsKCQl9OwoKCQlqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZml4
IF0gPSB7CgkJCXNldHVwOiBmdW5jdGlvbigpIHsKCQkJCXZhciBkb2MgPSB0aGlzLm93bmVyRG9j
dW1lbnQgfHwgdGhpcywKCQkJCQlhdHRhY2hlcyA9IGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgg
KTsKCgkJCQlpZiAoICFhdHRhY2hlcyApIHsKCQkJCQlkb2MuYWRkRXZlbnRMaXN0ZW5lciggb3Jp
ZywgaGFuZGxlciwgdHJ1ZSApOwoJCQkJfQoJCQkJZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwg
KCBhdHRhY2hlcyB8fCAwICkgKyAxICk7CgkJCX0sCgkJCXRlYXJkb3duOiBmdW5jdGlvbigpIHsK
CQkJCXZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcywKCQkJCQlhdHRhY2hlcyA9
IGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXggKSAtIDE7CgoJCQkJaWYgKCAhYXR0YWNoZXMgKSB7
CgkJCQkJZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTsKCQkJ
CQlkYXRhUHJpdi5yZW1vdmUoIGRvYywgZml4ICk7CgoJCQkJfSBlbHNlIHsKCQkJCQlkYXRhUHJp
di5hY2Nlc3MoIGRvYywgZml4LCBhdHRhY2hlcyApOwoJCQkJfQoJCQl9CgkJfTsKCX0gKTsKfQp2
YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247Cgp2YXIgbm9uY2UgPSBqUXVlcnkubm93KCk7
Cgp2YXIgcnF1ZXJ5ID0gKCAvXD8vICk7CgoKCi8vIENyb3NzLWJyb3dzZXIgeG1sIHBhcnNpbmcK
alF1ZXJ5LnBhcnNlWE1MID0gZnVuY3Rpb24oIGRhdGEgKSB7Cgl2YXIgeG1sOwoJaWYgKCAhZGF0
YSB8fCB0eXBlb2YgZGF0YSAhPT0gInN0cmluZyIgKSB7CgkJcmV0dXJuIG51bGw7Cgl9CgoJLy8g
U3VwcG9ydDogSUUgOSAtIDExIG9ubHkKCS8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcg
d2l0aCBpbnZhbGlkIGlucHV0LgoJdHJ5IHsKCQl4bWwgPSAoIG5ldyB3aW5kb3cuRE9NUGFyc2Vy
KCkgKS5wYXJzZUZyb21TdHJpbmcoIGRhdGEsICJ0ZXh0L3htbCIgKTsKCX0gY2F0Y2ggKCBlICkg
ewoJCXhtbCA9IHVuZGVmaW5lZDsKCX0KCglpZiAoICF4bWwgfHwgeG1sLmdldEVsZW1lbnRzQnlU
YWdOYW1lKCAicGFyc2VyZXJyb3IiICkubGVuZ3RoICkgewoJCWpRdWVyeS5lcnJvciggIkludmFs
aWQgWE1MOiAiICsgZGF0YSApOwoJfQoJcmV0dXJuIHhtbDsKfTsKCgp2YXIKCXJicmFja2V0ID0g
L1xbXF0kLywKCXJDUkxGID0gL1xyP1xuL2csCglyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1p
dHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksCglyc3VibWl0dGFibGUgPSAvXig/OmlucHV0
fHNlbGVjdHx0ZXh0YXJlYXxrZXlnZW4pL2k7CgpmdW5jdGlvbiBidWlsZFBhcmFtcyggcHJlZml4
LCBvYmosIHRyYWRpdGlvbmFsLCBhZGQgKSB7Cgl2YXIgbmFtZTsKCglpZiAoIEFycmF5LmlzQXJy
YXkoIG9iaiApICkgewoKCQkvLyBTZXJpYWxpemUgYXJyYXkgaXRlbS4KCQlqUXVlcnkuZWFjaCgg
b2JqLCBmdW5jdGlvbiggaSwgdiApIHsKCQkJaWYgKCB0cmFkaXRpb25hbCB8fCByYnJhY2tldC50
ZXN0KCBwcmVmaXggKSApIHsKCgkJCQkvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2Fs
YXIuCgkJCQlhZGQoIHByZWZpeCwgdiApOwoKCQkJfSBlbHNlIHsKCgkJCQkvLyBJdGVtIGlzIG5v
bi1zY2FsYXIgKGFycmF5IG9yIG9iamVjdCksIGVuY29kZSBpdHMgbnVtZXJpYyBpbmRleC4KCQkJ
CWJ1aWxkUGFyYW1zKAoJCQkJCXByZWZpeCArICJbIiArICggdHlwZW9mIHYgPT09ICJvYmplY3Qi
ICYmIHYgIT0gbnVsbCA/IGkgOiAiIiApICsgIl0iLAoJCQkJCXYsCgkJCQkJdHJhZGl0aW9uYWws
CgkJCQkJYWRkCgkJCQkpOwoJCQl9CgkJfSApOwoKCX0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAm
JiBqUXVlcnkudHlwZSggb2JqICkgPT09ICJvYmplY3QiICkgewoKCQkvLyBTZXJpYWxpemUgb2Jq
ZWN0IGl0ZW0uCgkJZm9yICggbmFtZSBpbiBvYmogKSB7CgkJCWJ1aWxkUGFyYW1zKCBwcmVmaXgg
KyAiWyIgKyBuYW1lICsgIl0iLCBvYmpbIG5hbWUgXSwgdHJhZGl0aW9uYWwsIGFkZCApOwoJCX0K
Cgl9IGVsc2UgewoKCQkvLyBTZXJpYWxpemUgc2NhbGFyIGl0ZW0uCgkJYWRkKCBwcmVmaXgsIG9i
aiApOwoJfQp9CgovLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNl
dCBvZgovLyBrZXkvdmFsdWVzIGludG8gYSBxdWVyeSBzdHJpbmcKalF1ZXJ5LnBhcmFtID0gZnVu
Y3Rpb24oIGEsIHRyYWRpdGlvbmFsICkgewoJdmFyIHByZWZpeCwKCQlzID0gW10sCgkJYWRkID0g
ZnVuY3Rpb24oIGtleSwgdmFsdWVPckZ1bmN0aW9uICkgewoKCQkJLy8gSWYgdmFsdWUgaXMgYSBm
dW5jdGlvbiwgaW52b2tlIGl0IGFuZCB1c2UgaXRzIHJldHVybiB2YWx1ZQoJCQl2YXIgdmFsdWUg
PSBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgPwoJCQkJdmFsdWVPckZ1bmN0
aW9uKCkgOgoJCQkJdmFsdWVPckZ1bmN0aW9uOwoKCQkJc1sgcy5sZW5ndGggXSA9IGVuY29kZVVS
SUNvbXBvbmVudCgga2V5ICkgKyAiPSIgKwoJCQkJZW5jb2RlVVJJQ29tcG9uZW50KCB2YWx1ZSA9
PSBudWxsID8gIiIgOiB2YWx1ZSApOwoJCX07CgoJLy8gSWYgYW4gYXJyYXkgd2FzIHBhc3NlZCBp
biwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cy4KCWlmICggQXJy
YXkuaXNBcnJheSggYSApIHx8ICggYS5qcXVlcnkgJiYgIWpRdWVyeS5pc1BsYWluT2JqZWN0KCBh
ICkgKSApIHsKCgkJLy8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzCgkJalF1ZXJ5LmVhY2go
IGEsIGZ1bmN0aW9uKCkgewoJCQlhZGQoIHRoaXMubmFtZSwgdGhpcy52YWx1ZSApOwoJCX0gKTsK
Cgl9IGVsc2UgewoKCQkvLyBJZiB0cmFkaXRpb25hbCwgZW5jb2RlIHRoZSAib2xkIiB3YXkgKHRo
ZSB3YXkgMS4zLjIgb3Igb2xkZXIKCQkvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFt
cyByZWN1cnNpdmVseS4KCQlmb3IgKCBwcmVmaXggaW4gYSApIHsKCQkJYnVpbGRQYXJhbXMoIHBy
ZWZpeCwgYVsgcHJlZml4IF0sIHRyYWRpdGlvbmFsLCBhZGQgKTsKCQl9Cgl9CgoJLy8gUmV0dXJu
IHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvbgoJcmV0dXJuIHMuam9pbiggIiYiICk7Cn07Cgpq
UXVlcnkuZm4uZXh0ZW5kKCB7CglzZXJpYWxpemU6IGZ1bmN0aW9uKCkgewoJCXJldHVybiBqUXVl
cnkucGFyYW0oIHRoaXMuc2VyaWFsaXplQXJyYXkoKSApOwoJfSwKCXNlcmlhbGl6ZUFycmF5OiBm
dW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkgewoKCQkJLy8gQ2FuIGFk
ZCBwcm9wSG9vayBmb3IgImVsZW1lbnRzIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHMK
CQkJdmFyIGVsZW1lbnRzID0galF1ZXJ5LnByb3AoIHRoaXMsICJlbGVtZW50cyIgKTsKCQkJcmV0
dXJuIGVsZW1lbnRzID8galF1ZXJ5Lm1ha2VBcnJheSggZWxlbWVudHMgKSA6IHRoaXM7CgkJfSAp
CgkJLmZpbHRlciggZnVuY3Rpb24oKSB7CgkJCXZhciB0eXBlID0gdGhpcy50eXBlOwoKCQkJLy8g
VXNlIC5pcyggIjpkaXNhYmxlZCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3JrcwoJ
CQlyZXR1cm4gdGhpcy5uYW1lICYmICFqUXVlcnkoIHRoaXMgKS5pcyggIjpkaXNhYmxlZCIgKSAm
JgoJCQkJcnN1Ym1pdHRhYmxlLnRlc3QoIHRoaXMubm9kZU5hbWUgKSAmJiAhcnN1Ym1pdHRlclR5
cGVzLnRlc3QoIHR5cGUgKSAmJgoJCQkJKCB0aGlzLmNoZWNrZWQgfHwgIXJjaGVja2FibGVUeXBl
LnRlc3QoIHR5cGUgKSApOwoJCX0gKQoJCS5tYXAoIGZ1bmN0aW9uKCBpLCBlbGVtICkgewoJCQl2
YXIgdmFsID0galF1ZXJ5KCB0aGlzICkudmFsKCk7CgoJCQlpZiAoIHZhbCA9PSBudWxsICkgewoJ
CQkJcmV0dXJuIG51bGw7CgkJCX0KCgkJCWlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7CgkJ
CQlyZXR1cm4galF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsICkgewoJCQkJCXJldHVybiB7
IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgIlxyXG4iICkgfTsK
CQkJCX0gKTsKCQkJfQoKCQkJcmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJl
cGxhY2UoIHJDUkxGLCAiXHJcbiIgKSB9OwoJCX0gKS5nZXQoKTsKCX0KfSApOwoKCnZhcgoJcjIw
ID0gLyUyMC9nLAoJcmhhc2ggPSAvIy4qJC8sCglyYW50aUNhY2hlID0gLyhbPyZdKV89W14mXSov
LAoJcmhlYWRlcnMgPSAvXiguKj8pOlsgXHRdKihbXlxyXG5dKikkL21nLAoKCS8vICM3NjUzLCAj
ODEyNSwgIzgxNTI6IGxvY2FsIHByb3RvY29sIGRldGVjdGlvbgoJcmxvY2FsUHJvdG9jb2wgPSAv
Xig/OmFib3V0fGFwcHxhcHAtc3RvcmFnZXwuKy1leHRlbnNpb258ZmlsZXxyZXN8d2lkZ2V0KTok
LywKCXJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLAoJcnByb3RvY29sID0gL15cL1wvLywK
CgkvKiBQcmVmaWx0ZXJzCgkgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3Rv
bSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKQoJICogMikgVGhl
c2UgYXJlIGNhbGxlZDoKCSAqICAgIC0gQkVGT1JFIGFza2luZyBmb3IgYSB0cmFuc3BvcnQKCSAq
ICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMu
cHJvY2Vzc0RhdGEgaXMgdHJ1ZSkKCSAqIDMpIGtleSBpcyB0aGUgZGF0YVR5cGUKCSAqIDQpIHRo
ZSBjYXRjaGFsbCBzeW1ib2wgIioiIGNhbiBiZSB1c2VkCgkgKiA1KSBleGVjdXRpb24gd2lsbCBz
dGFydCB3aXRoIHRyYW5zcG9ydCBkYXRhVHlwZSBhbmQgVEhFTiBjb250aW51ZSBkb3duIHRvICIq
IiBpZiBuZWVkZWQKCSAqLwoJcHJlZmlsdGVycyA9IHt9LAoKCS8qIFRyYW5zcG9ydHMgYmluZGlu
Z3MKCSAqIDEpIGtleSBpcyB0aGUgZGF0YVR5cGUKCSAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wg
IioiIGNhbiBiZSB1c2VkCgkgKiAzKSBzZWxlY3Rpb24gd2lsbCBzdGFydCB3aXRoIHRyYW5zcG9y
dCBkYXRhVHlwZSBhbmQgVEhFTiBnbyB0byAiKiIgaWYgbmVlZGVkCgkgKi8KCXRyYW5zcG9ydHMg
PSB7fSwKCgkvLyBBdm9pZCBjb21tZW50LXByb2xvZyBjaGFyIHNlcXVlbmNlICgjMTAwOTgpOyBt
dXN0IGFwcGVhc2UgbGludCBhbmQgZXZhZGUgY29tcHJlc3Npb24KCWFsbFR5cGVzID0gIiovIi5j
b25jYXQoICIqIiApLAoKCS8vIEFuY2hvciB0YWcgZm9yIHBhcnNpbmcgdGhlIGRvY3VtZW50IG9y
aWdpbgoJb3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImEiICk7Cglvcmln
aW5BbmNob3IuaHJlZiA9IGxvY2F0aW9uLmhyZWY7CgovLyBCYXNlICJjb25zdHJ1Y3RvciIgZm9y
IGpRdWVyeS5hamF4UHJlZmlsdGVyIGFuZCBqUXVlcnkuYWpheFRyYW5zcG9ydApmdW5jdGlvbiBh
ZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHsKCgkvLyBkYXRhVHlwZUV4
cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvICIqIgoJcmV0dXJuIGZ1bmN0aW9u
KCBkYXRhVHlwZUV4cHJlc3Npb24sIGZ1bmMgKSB7CgoJCWlmICggdHlwZW9mIGRhdGFUeXBlRXhw
cmVzc2lvbiAhPT0gInN0cmluZyIgKSB7CgkJCWZ1bmMgPSBkYXRhVHlwZUV4cHJlc3Npb247CgkJ
CWRhdGFUeXBlRXhwcmVzc2lvbiA9ICIqIjsKCQl9CgoJCXZhciBkYXRhVHlwZSwKCQkJaSA9IDAs
CgkJCWRhdGFUeXBlcyA9IGRhdGFUeXBlRXhwcmVzc2lvbi50b0xvd2VyQ2FzZSgpLm1hdGNoKCBy
bm90aHRtbHdoaXRlICkgfHwgW107CgoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGZ1bmMgKSAp
IHsKCgkJCS8vIEZvciBlYWNoIGRhdGFUeXBlIGluIHRoZSBkYXRhVHlwZUV4cHJlc3Npb24KCQkJ
d2hpbGUgKCAoIGRhdGFUeXBlID0gZGF0YVR5cGVzWyBpKysgXSApICkgewoKCQkJCS8vIFByZXBl
bmQgaWYgcmVxdWVzdGVkCgkJCQlpZiAoIGRhdGFUeXBlWyAwIF0gPT09ICIrIiApIHsKCQkJCQlk
YXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgIioiOwoJCQkJCSggc3RydWN0dXJlWyBk
YXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkudW5zaGlmdCggZnVuYyAp
OwoKCQkJCS8vIE90aGVyd2lzZSBhcHBlbmQKCQkJCX0gZWxzZSB7CgkJCQkJKCBzdHJ1Y3R1cmVb
IGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS5wdXNoKCBmdW5jICk7
CgkJCQl9CgkJCX0KCQl9Cgl9Owp9CgovLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHBy
ZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHMKZnVuY3Rpb24gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5z
cG9ydHMoIHN0cnVjdHVyZSwgb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApIHsKCgl2
YXIgaW5zcGVjdGVkID0ge30sCgkJc2Vla2luZ1RyYW5zcG9ydCA9ICggc3RydWN0dXJlID09PSB0
cmFuc3BvcnRzICk7CgoJZnVuY3Rpb24gaW5zcGVjdCggZGF0YVR5cGUgKSB7CgkJdmFyIHNlbGVj
dGVkOwoJCWluc3BlY3RlZFsgZGF0YVR5cGUgXSA9IHRydWU7CgkJalF1ZXJ5LmVhY2goIHN0cnVj
dHVyZVsgZGF0YVR5cGUgXSB8fCBbXSwgZnVuY3Rpb24oIF8sIHByZWZpbHRlck9yRmFjdG9yeSAp
IHsKCQkJdmFyIGRhdGFUeXBlT3JUcmFuc3BvcnQgPSBwcmVmaWx0ZXJPckZhY3RvcnkoIG9wdGlv
bnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKTsKCQkJaWYgKCB0eXBlb2YgZGF0YVR5cGVPclRy
YW5zcG9ydCA9PT0gInN0cmluZyIgJiYKCQkJCSFzZWVraW5nVHJhbnNwb3J0ICYmICFpbnNwZWN0
ZWRbIGRhdGFUeXBlT3JUcmFuc3BvcnQgXSApIHsKCgkJCQlvcHRpb25zLmRhdGFUeXBlcy51bnNo
aWZ0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7CgkJCQlpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNw
b3J0ICk7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQg
KSB7CgkJCQlyZXR1cm4gISggc2VsZWN0ZWQgPSBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7CgkJCX0K
CQl9ICk7CgkJcmV0dXJuIHNlbGVjdGVkOwoJfQoKCXJldHVybiBpbnNwZWN0KCBvcHRpb25zLmRh
dGFUeXBlc1sgMCBdICkgfHwgIWluc3BlY3RlZFsgIioiIF0gJiYgaW5zcGVjdCggIioiICk7Cn0K
Ci8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9ucwovLyB0aGF0IHRha2VzICJmbGF0
IiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZCkKLy8gRml4ZXMgIzk4ODcKZnVuY3Rp
b24gYWpheEV4dGVuZCggdGFyZ2V0LCBzcmMgKSB7Cgl2YXIga2V5LCBkZWVwLAoJCWZsYXRPcHRp
b25zID0galF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9ucyB8fCB7fTsKCglmb3IgKCBrZXkg
aW4gc3JjICkgewoJCWlmICggc3JjWyBrZXkgXSAhPT0gdW5kZWZpbmVkICkgewoJCQkoIGZsYXRP
cHRpb25zWyBrZXkgXSA/IHRhcmdldCA6ICggZGVlcCB8fCAoIGRlZXAgPSB7fSApICkgKVsga2V5
IF0gPSBzcmNbIGtleSBdOwoJCX0KCX0KCWlmICggZGVlcCApIHsKCQlqUXVlcnkuZXh0ZW5kKCB0
cnVlLCB0YXJnZXQsIGRlZXAgKTsKCX0KCglyZXR1cm4gdGFyZ2V0Owp9CgovKiBIYW5kbGVzIHJl
c3BvbnNlcyB0byBhbiBhamF4IHJlcXVlc3Q6CiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBl
IChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpCiAq
IC0gcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZQogKi8KZnVuY3Rpb24gYWpheEhh
bmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHsKCgl2YXIgY3QsIHR5cGUsIGZp
bmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsCgkJY29udGVudHMgPSBzLmNvbnRlbnRzLAoJCWRh
dGFUeXBlcyA9IHMuZGF0YVR5cGVzOwoKCS8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQg
Y29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzCgl3aGlsZSAoIGRhdGFUeXBlc1sgMCBdID09PSAi
KiIgKSB7CgkJZGF0YVR5cGVzLnNoaWZ0KCk7CgkJaWYgKCBjdCA9PT0gdW5kZWZpbmVkICkgewoJ
CQljdCA9IHMubWltZVR5cGUgfHwganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoICJDb250ZW50LVR5
cGUiICk7CgkJfQoJfQoKCS8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNv
bnRlbnQtdHlwZQoJaWYgKCBjdCApIHsKCQlmb3IgKCB0eXBlIGluIGNvbnRlbnRzICkgewoJCQlp
ZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkgewoJ
CQkJZGF0YVR5cGVzLnVuc2hpZnQoIHR5cGUgKTsKCQkJCWJyZWFrOwoJCQl9CgkJfQoJfQoKCS8v
IENoZWNrIHRvIHNlZSBpZiB3ZSBoYXZlIGEgcmVzcG9uc2UgZm9yIHRoZSBleHBlY3RlZCBkYXRh
VHlwZQoJaWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7CgkJZmluYWxEYXRhVHlw
ZSA9IGRhdGFUeXBlc1sgMCBdOwoJfSBlbHNlIHsKCgkJLy8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFU
eXBlcwoJCWZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkgewoJCQlpZiAoICFkYXRhVHlwZXNbIDAg
XSB8fCBzLmNvbnZlcnRlcnNbIHR5cGUgKyAiICIgKyBkYXRhVHlwZXNbIDAgXSBdICkgewoJCQkJ
ZmluYWxEYXRhVHlwZSA9IHR5cGU7CgkJCQlicmVhazsKCQkJfQoJCQlpZiAoICFmaXJzdERhdGFU
eXBlICkgewoJCQkJZmlyc3REYXRhVHlwZSA9IHR5cGU7CgkJCX0KCQl9CgoJCS8vIE9yIGp1c3Qg
dXNlIGZpcnN0IG9uZQoJCWZpbmFsRGF0YVR5cGUgPSBmaW5hbERhdGFUeXBlIHx8IGZpcnN0RGF0
YVR5cGU7Cgl9CgoJLy8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZQoJLy8gV2UgYWRkIHRoZSBkYXRh
VHlwZSB0byB0aGUgbGlzdCBpZiBuZWVkZWQKCS8vIGFuZCByZXR1cm4gdGhlIGNvcnJlc3BvbmRp
bmcgcmVzcG9uc2UKCWlmICggZmluYWxEYXRhVHlwZSApIHsKCQlpZiAoIGZpbmFsRGF0YVR5cGUg
IT09IGRhdGFUeXBlc1sgMCBdICkgewoJCQlkYXRhVHlwZXMudW5zaGlmdCggZmluYWxEYXRhVHlw
ZSApOwoJCX0KCQlyZXR1cm4gcmVzcG9uc2VzWyBmaW5hbERhdGFUeXBlIF07Cgl9Cn0KCi8qIENo
YWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9u
c2UKICogQWxzbyBzZXRzIHRoZSByZXNwb25zZVhYWCBmaWVsZHMgb24gdGhlIGpxWEhSIGluc3Rh
bmNlCiAqLwpmdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nl
c3MgKSB7Cgl2YXIgY29udjIsIGN1cnJlbnQsIGNvbnYsIHRtcCwgcHJldiwKCQljb252ZXJ0ZXJz
ID0ge30sCgoJCS8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVl
ZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb24KCQlkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5z
bGljZSgpOwoKCS8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5cwoJ
aWYgKCBkYXRhVHlwZXNbIDEgXSApIHsKCQlmb3IgKCBjb252IGluIHMuY29udmVydGVycyApIHsK
CQkJY29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYg
XTsKCQl9Cgl9CgoJY3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpOwoKCS8vIENvbnZlcnQgdG8g
ZWFjaCBzZXF1ZW50aWFsIGRhdGFUeXBlCgl3aGlsZSAoIGN1cnJlbnQgKSB7CgoJCWlmICggcy5y
ZXNwb25zZUZpZWxkc1sgY3VycmVudCBdICkgewoJCQlqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sg
Y3VycmVudCBdIF0gPSByZXNwb25zZTsKCQl9CgoJCS8vIEFwcGx5IHRoZSBkYXRhRmlsdGVyIGlm
IHByb3ZpZGVkCgkJaWYgKCAhcHJldiAmJiBpc1N1Y2Nlc3MgJiYgcy5kYXRhRmlsdGVyICkgewoJ
CQlyZXNwb25zZSA9IHMuZGF0YUZpbHRlciggcmVzcG9uc2UsIHMuZGF0YVR5cGUgKTsKCQl9CgoJ
CXByZXYgPSBjdXJyZW50OwoJCWN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTsKCgkJaWYgKCBj
dXJyZW50ICkgewoKCQkJLy8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRh
VHlwZSBpcyBub24tYXV0bwoJCQlpZiAoIGN1cnJlbnQgPT09ICIqIiApIHsKCgkJCQljdXJyZW50
ID0gcHJldjsKCgkJCS8vIENvbnZlcnQgcmVzcG9uc2UgaWYgcHJldiBkYXRhVHlwZSBpcyBub24t
YXV0byBhbmQgZGlmZmVycyBmcm9tIGN1cnJlbnQKCQkJfSBlbHNlIGlmICggcHJldiAhPT0gIioi
ICYmIHByZXYgIT09IGN1cnJlbnQgKSB7CgoJCQkJLy8gU2VlayBhIGRpcmVjdCBjb252ZXJ0ZXIK
CQkJCWNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgIiAiICsgY3VycmVudCBdIHx8IGNvbnZlcnRl
cnNbICIqICIgKyBjdXJyZW50IF07CgoJCQkJLy8gSWYgbm9uZSBmb3VuZCwgc2VlayBhIHBhaXIK
CQkJCWlmICggIWNvbnYgKSB7CgkJCQkJZm9yICggY29udjIgaW4gY29udmVydGVycyApIHsKCgkJ
CQkJCS8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudAoJCQkJCQl0bXAgPSBjb252Mi5zcGxpdCgg
IiAiICk7CgkJCQkJCWlmICggdG1wWyAxIF0gPT09IGN1cnJlbnQgKSB7CgoJCQkJCQkJLy8gSWYg
cHJldiBjYW4gYmUgY29udmVydGVkIHRvIGFjY2VwdGVkIGlucHV0CgkJCQkJCQljb252ID0gY29u
dmVydGVyc1sgcHJldiArICIgIiArIHRtcFsgMCBdIF0gfHwKCQkJCQkJCQljb252ZXJ0ZXJzWyAi
KiAiICsgdG1wWyAwIF0gXTsKCQkJCQkJCWlmICggY29udiApIHsKCgkJCQkJCQkJLy8gQ29uZGVu
c2UgZXF1aXZhbGVuY2UgY29udmVydGVycwoJCQkJCQkJCWlmICggY29udiA9PT0gdHJ1ZSApIHsK
CQkJCQkJCQkJY29udiA9IGNvbnZlcnRlcnNbIGNvbnYyIF07CgoJCQkJCQkJCS8vIE90aGVyd2lz
ZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGUKCQkJCQkJCQl9IGVsc2UgaWYgKCBj
b252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkgewoJCQkJCQkJCQljdXJyZW50ID0gdG1wWyAw
IF07CgkJCQkJCQkJCWRhdGFUeXBlcy51bnNoaWZ0KCB0bXBbIDEgXSApOwoJCQkJCQkJCX0KCQkJ
CQkJCQlicmVhazsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCX0KCgkJCQkvLyBBcHBseSBj
b252ZXJ0ZXIgKGlmIG5vdCBhbiBlcXVpdmFsZW5jZSkKCQkJCWlmICggY29udiAhPT0gdHJ1ZSAp
IHsKCgkJCQkJLy8gVW5sZXNzIGVycm9ycyBhcmUgYWxsb3dlZCB0byBidWJibGUsIGNhdGNoIGFu
ZCByZXR1cm4gdGhlbQoJCQkJCWlmICggY29udiAmJiBzLnRocm93cyApIHsKCQkJCQkJcmVzcG9u
c2UgPSBjb252KCByZXNwb25zZSApOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXRyeSB7CgkJCQkJCQly
ZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7CgkJCQkJCX0gY2F0Y2ggKCBlICkgewoJCQkJCQkJ
cmV0dXJuIHsKCQkJCQkJCQlzdGF0ZTogInBhcnNlcmVycm9yIiwKCQkJCQkJCQllcnJvcjogY29u
diA/IGUgOiAiTm8gY29udmVyc2lvbiBmcm9tICIgKyBwcmV2ICsgIiB0byAiICsgY3VycmVudAoJ
CQkJCQkJfTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCX0KCglyZXR1cm4geyBzdGF0
ZTogInN1Y2Nlc3MiLCBkYXRhOiByZXNwb25zZSB9Owp9CgpqUXVlcnkuZXh0ZW5kKCB7CgoJLy8g
Q291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzCglhY3RpdmU6
IDAsCgoJLy8gTGFzdC1Nb2RpZmllZCBoZWFkZXIgY2FjaGUgZm9yIG5leHQgcmVxdWVzdAoJbGFz
dE1vZGlmaWVkOiB7fSwKCWV0YWc6IHt9LAoKCWFqYXhTZXR0aW5nczogewoJCXVybDogbG9jYXRp
b24uaHJlZiwKCQl0eXBlOiAiR0VUIiwKCQlpc0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBs
b2NhdGlvbi5wcm90b2NvbCApLAoJCWdsb2JhbDogdHJ1ZSwKCQlwcm9jZXNzRGF0YTogdHJ1ZSwK
CQlhc3luYzogdHJ1ZSwKCQljb250ZW50VHlwZTogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJs
ZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIsCgoJCS8qCgkJdGltZW91dDogMCwKCQlkYXRhOiBudWxs
LAoJCWRhdGFUeXBlOiBudWxsLAoJCXVzZXJuYW1lOiBudWxsLAoJCXBhc3N3b3JkOiBudWxsLAoJ
CWNhY2hlOiBudWxsLAoJCXRocm93czogZmFsc2UsCgkJdHJhZGl0aW9uYWw6IGZhbHNlLAoJCWhl
YWRlcnM6IHt9LAoJCSovCgoJCWFjY2VwdHM6IHsKCQkJIioiOiBhbGxUeXBlcywKCQkJdGV4dDog
InRleHQvcGxhaW4iLAoJCQlodG1sOiAidGV4dC9odG1sIiwKCQkJeG1sOiAiYXBwbGljYXRpb24v
eG1sLCB0ZXh0L3htbCIsCgkJCWpzb246ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3Jp
cHQiCgkJfSwKCgkJY29udGVudHM6IHsKCQkJeG1sOiAvXGJ4bWxcYi8sCgkJCWh0bWw6IC9cYmh0
bWwvLAoJCQlqc29uOiAvXGJqc29uXGIvCgkJfSwKCgkJcmVzcG9uc2VGaWVsZHM6IHsKCQkJeG1s
OiAicmVzcG9uc2VYTUwiLAoJCQl0ZXh0OiAicmVzcG9uc2VUZXh0IiwKCQkJanNvbjogInJlc3Bv
bnNlSlNPTiIKCQl9LAoKCQkvLyBEYXRhIGNvbnZlcnRlcnMKCQkvLyBLZXlzIHNlcGFyYXRlIHNv
dXJjZSAob3IgY2F0Y2hhbGwgIioiKSBhbmQgZGVzdGluYXRpb24gdHlwZXMgd2l0aCBhIHNpbmds
ZSBzcGFjZQoJCWNvbnZlcnRlcnM6IHsKCgkJCS8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dAoJ
CQkiKiB0ZXh0IjogU3RyaW5nLAoKCQkJLy8gVGV4dCB0byBodG1sICh0cnVlID0gbm8gdHJhbnNm
b3JtYXRpb24pCgkJCSJ0ZXh0IGh0bWwiOiB0cnVlLAoKCQkJLy8gRXZhbHVhdGUgdGV4dCBhcyBh
IGpzb24gZXhwcmVzc2lvbgoJCQkidGV4dCBqc29uIjogSlNPTi5wYXJzZSwKCgkJCS8vIFBhcnNl
IHRleHQgYXMgeG1sCgkJCSJ0ZXh0IHhtbCI6IGpRdWVyeS5wYXJzZVhNTAoJCX0sCgoJCS8vIEZv
ciBvcHRpb25zIHRoYXQgc2hvdWxkbid0IGJlIGRlZXAgZXh0ZW5kZWQ6CgkJLy8geW91IGNhbiBh
ZGQgeW91ciBvd24gY3VzdG9tIG9wdGlvbnMgaGVyZSBpZgoJCS8vIGFuZCB3aGVuIHlvdSBjcmVh
dGUgb25lIHRoYXQgc2hvdWxkbid0IGJlCgkJLy8gZGVlcCBleHRlbmRlZCAoc2VlIGFqYXhFeHRl
bmQpCgkJZmxhdE9wdGlvbnM6IHsKCQkJdXJsOiB0cnVlLAoJCQljb250ZXh0OiB0cnVlCgkJfQoJ
fSwKCgkvLyBDcmVhdGVzIGEgZnVsbCBmbGVkZ2VkIHNldHRpbmdzIG9iamVjdCBpbnRvIHRhcmdl
dAoJLy8gd2l0aCBib3RoIGFqYXhTZXR0aW5ncyBhbmQgc2V0dGluZ3MgZmllbGRzLgoJLy8gSWYg
dGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy4KCWFqYXhTZXR1cDog
ZnVuY3Rpb24oIHRhcmdldCwgc2V0dGluZ3MgKSB7CgkJcmV0dXJuIHNldHRpbmdzID8KCgkJCS8v
IEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0CgkJCWFqYXhFeHRlbmQoIGFqYXhFeHRlbmQoIHRh
cmdldCwgalF1ZXJ5LmFqYXhTZXR0aW5ncyApLCBzZXR0aW5ncyApIDoKCgkJCS8vIEV4dGVuZGlu
ZyBhamF4U2V0dGluZ3MKCQkJYWpheEV4dGVuZCggalF1ZXJ5LmFqYXhTZXR0aW5ncywgdGFyZ2V0
ICk7Cgl9LAoKCWFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJl
ZmlsdGVycyApLAoJYWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0
cmFuc3BvcnRzICksCgoJLy8gTWFpbiBtZXRob2QKCWFqYXg6IGZ1bmN0aW9uKCB1cmwsIG9wdGlv
bnMgKSB7CgoJCS8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0
dXJlCgkJaWYgKCB0eXBlb2YgdXJsID09PSAib2JqZWN0IiApIHsKCQkJb3B0aW9ucyA9IHVybDsK
CQkJdXJsID0gdW5kZWZpbmVkOwoJCX0KCgkJLy8gRm9yY2Ugb3B0aW9ucyB0byBiZSBhbiBvYmpl
Y3QKCQlvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsKCgkJdmFyIHRyYW5zcG9ydCwKCgkJCS8vIFVS
TCB3aXRob3V0IGFudGktY2FjaGUgcGFyYW0KCQkJY2FjaGVVUkwsCgoJCQkvLyBSZXNwb25zZSBo
ZWFkZXJzCgkJCXJlc3BvbnNlSGVhZGVyc1N0cmluZywKCQkJcmVzcG9uc2VIZWFkZXJzLAoKCQkJ
Ly8gdGltZW91dCBoYW5kbGUKCQkJdGltZW91dFRpbWVyLAoKCQkJLy8gVXJsIGNsZWFudXAgdmFy
CgkJCXVybEFuY2hvciwKCgkJCS8vIFJlcXVlc3Qgc3RhdGUgKGJlY29tZXMgZmFsc2UgdXBvbiBz
ZW5kIGFuZCB0cnVlIHVwb24gY29tcGxldGlvbikKCQkJY29tcGxldGVkLAoKCQkJLy8gVG8ga25v
dyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkCgkJCWZpcmVHbG9iYWxzLAoK
CQkJLy8gTG9vcCB2YXJpYWJsZQoJCQlpLAoKCQkJLy8gdW5jYWNoZWQgcGFydCBvZiB0aGUgdXJs
CgkJCXVuY2FjaGVkLAoKCQkJLy8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdAoJCQlz
ID0galF1ZXJ5LmFqYXhTZXR1cCgge30sIG9wdGlvbnMgKSwKCgkJCS8vIENhbGxiYWNrcyBjb250
ZXh0CgkJCWNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4dCB8fCBzLAoKCQkJLy8gQ29udGV4dCBm
b3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBv
ciBqUXVlcnkgY29sbGVjdGlvbgoJCQlnbG9iYWxFdmVudENvbnRleHQgPSBzLmNvbnRleHQgJiYK
CQkJCSggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkg
KSA/CgkJCQkJalF1ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6CgkJCQkJalF1ZXJ5LmV2ZW50LAoK
CQkJLy8gRGVmZXJyZWRzCgkJCWRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksCgkJCWNvbXBs
ZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICksCgoJCQkvLyBT
dGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrcwoJCQlzdGF0dXNDb2RlID0gcy5zdGF0dXNDb2RlIHx8
IHt9LAoKCQkJLy8gSGVhZGVycyAodGhleSBhcmUgc2VudCBhbGwgYXQgb25jZSkKCQkJcmVxdWVz
dEhlYWRlcnMgPSB7fSwKCQkJcmVxdWVzdEhlYWRlcnNOYW1lcyA9IHt9LAoKCQkJLy8gRGVmYXVs
dCBhYm9ydCBtZXNzYWdlCgkJCXN0ckFib3J0ID0gImNhbmNlbGVkIiwKCgkJCS8vIEZha2UgeGhy
CgkJCWpxWEhSID0gewoJCQkJcmVhZHlTdGF0ZTogMCwKCgkJCQkvLyBCdWlsZHMgaGVhZGVycyBo
YXNodGFibGUgaWYgbmVlZGVkCgkJCQlnZXRSZXNwb25zZUhlYWRlcjogZnVuY3Rpb24oIGtleSAp
IHsKCQkJCQl2YXIgbWF0Y2g7CgkJCQkJaWYgKCBjb21wbGV0ZWQgKSB7CgkJCQkJCWlmICggIXJl
c3BvbnNlSGVhZGVycyApIHsKCQkJCQkJCXJlc3BvbnNlSGVhZGVycyA9IHt9OwoJCQkJCQkJd2hp
bGUgKCAoIG1hdGNoID0gcmhlYWRlcnMuZXhlYyggcmVzcG9uc2VIZWFkZXJzU3RyaW5nICkgKSAp
IHsKCQkJCQkJCQlyZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSBdID0g
bWF0Y2hbIDIgXTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQltYXRjaCA9IHJlc3BvbnNlSGVhZGVy
c1sga2V5LnRvTG93ZXJDYXNlKCkgXTsKCQkJCQl9CgkJCQkJcmV0dXJuIG1hdGNoID09IG51bGwg
PyBudWxsIDogbWF0Y2g7CgkJCQl9LAoKCQkJCS8vIFJhdyBzdHJpbmcKCQkJCWdldEFsbFJlc3Bv
bnNlSGVhZGVyczogZnVuY3Rpb24oKSB7CgkJCQkJcmV0dXJuIGNvbXBsZXRlZCA/IHJlc3BvbnNl
SGVhZGVyc1N0cmluZyA6IG51bGw7CgkJCQl9LAoKCQkJCS8vIENhY2hlcyB0aGUgaGVhZGVyCgkJ
CQlzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7CgkJCQkJaWYgKCBj
b21wbGV0ZWQgPT0gbnVsbCApIHsKCQkJCQkJbmFtZSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5h
bWUudG9Mb3dlckNhc2UoKSBdID0KCQkJCQkJCXJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9M
b3dlckNhc2UoKSBdIHx8IG5hbWU7CgkJCQkJCXJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1
ZTsKCQkJCQl9CgkJCQkJcmV0dXJuIHRoaXM7CgkJCQl9LAoKCQkJCS8vIE92ZXJyaWRlcyByZXNw
b25zZSBjb250ZW50LXR5cGUgaGVhZGVyCgkJCQlvdmVycmlkZU1pbWVUeXBlOiBmdW5jdGlvbigg
dHlwZSApIHsKCQkJCQlpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkgewoJCQkJCQlzLm1pbWVUeXBl
ID0gdHlwZTsKCQkJCQl9CgkJCQkJcmV0dXJuIHRoaXM7CgkJCQl9LAoKCQkJCS8vIFN0YXR1cy1k
ZXBlbmRlbnQgY2FsbGJhY2tzCgkJCQlzdGF0dXNDb2RlOiBmdW5jdGlvbiggbWFwICkgewoJCQkJ
CXZhciBjb2RlOwoJCQkJCWlmICggbWFwICkgewoJCQkJCQlpZiAoIGNvbXBsZXRlZCApIHsKCgkJ
CQkJCQkvLyBFeGVjdXRlIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja3MKCQkJCQkJCWpxWEhSLmFs
d2F5cyggbWFwWyBqcVhIUi5zdGF0dXMgXSApOwoJCQkJCQl9IGVsc2UgewoKCQkJCQkJCS8vIExh
enktYWRkIHRoZSBuZXcgY2FsbGJhY2tzIGluIGEgd2F5IHRoYXQgcHJlc2VydmVzIG9sZCBvbmVz
CgkJCQkJCQlmb3IgKCBjb2RlIGluIG1hcCApIHsKCQkJCQkJCQlzdGF0dXNDb2RlWyBjb2RlIF0g
PSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTsKCQkJCQkJCX0KCQkJCQkJfQoJ
CQkJCX0KCQkJCQlyZXR1cm4gdGhpczsKCQkJCX0sCgoJCQkJLy8gQ2FuY2VsIHRoZSByZXF1ZXN0
CgkJCQlhYm9ydDogZnVuY3Rpb24oIHN0YXR1c1RleHQgKSB7CgkJCQkJdmFyIGZpbmFsVGV4dCA9
IHN0YXR1c1RleHQgfHwgc3RyQWJvcnQ7CgkJCQkJaWYgKCB0cmFuc3BvcnQgKSB7CgkJCQkJCXRy
YW5zcG9ydC5hYm9ydCggZmluYWxUZXh0ICk7CgkJCQkJfQoJCQkJCWRvbmUoIDAsIGZpbmFsVGV4
dCApOwoJCQkJCXJldHVybiB0aGlzOwoJCQkJfQoJCQl9OwoKCQkvLyBBdHRhY2ggZGVmZXJyZWRz
CgkJZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKTsKCgkJLy8gQWRkIHByb3RvY29sIGlmIG5vdCBw
cm92aWRlZCAocHJlZmlsdGVycyBtaWdodCBleHBlY3QgaXQpCgkJLy8gSGFuZGxlIGZhbHN5IHVy
bCBpbiB0aGUgc2V0dGluZ3Mgb2JqZWN0ICgjMTAwOTM6IGNvbnNpc3RlbmN5IHdpdGggb2xkIHNp
Z25hdHVyZSkKCQkvLyBXZSBhbHNvIHVzZSB0aGUgdXJsIHBhcmFtZXRlciBpZiBhdmFpbGFibGUK
CQlzLnVybCA9ICggKCB1cmwgfHwgcy51cmwgfHwgbG9jYXRpb24uaHJlZiApICsgIiIgKQoJCQku
cmVwbGFjZSggcnByb3RvY29sLCBsb2NhdGlvbi5wcm90b2NvbCArICIvLyIgKTsKCgkJLy8gQWxp
YXMgbWV0aG9kIG9wdGlvbiB0byB0eXBlIGFzIHBlciB0aWNrZXQgIzEyMDA0CgkJcy50eXBlID0g
b3B0aW9ucy5tZXRob2QgfHwgb3B0aW9ucy50eXBlIHx8IHMubWV0aG9kIHx8IHMudHlwZTsKCgkJ
Ly8gRXh0cmFjdCBkYXRhVHlwZXMgbGlzdAoJCXMuZGF0YVR5cGVzID0gKCBzLmRhdGFUeXBlIHx8
ICIqIiApLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbICIiIF07CgoJ
CS8vIEEgY3Jvc3MtZG9tYWluIHJlcXVlc3QgaXMgaW4gb3JkZXIgd2hlbiB0aGUgb3JpZ2luIGRv
ZXNuJ3QgbWF0Y2ggdGhlIGN1cnJlbnQgb3JpZ2luLgoJCWlmICggcy5jcm9zc0RvbWFpbiA9PSBu
dWxsICkgewoJCQl1cmxBbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAiYSIgKTsKCgkJ
CS8vIFN1cHBvcnQ6IElFIDw9OCAtIDExLCBFZGdlIDEyIC0gMTMKCQkJLy8gSUUgdGhyb3dzIGV4
Y2VwdGlvbiBvbiBhY2Nlc3NpbmcgdGhlIGhyZWYgcHJvcGVydHkgaWYgdXJsIGlzIG1hbGZvcm1l
ZCwKCQkJLy8gZS5nLiBodHRwOi8vZXhhbXBsZS5jb206ODB4LwoJCQl0cnkgewoJCQkJdXJsQW5j
aG9yLmhyZWYgPSBzLnVybDsKCgkJCQkvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSBvbmx5CgkJCQkv
LyBBbmNob3IncyBob3N0IHByb3BlcnR5IGlzbid0IGNvcnJlY3RseSBzZXQgd2hlbiBzLnVybCBp
cyByZWxhdGl2ZQoJCQkJdXJsQW5jaG9yLmhyZWYgPSB1cmxBbmNob3IuaHJlZjsKCQkJCXMuY3Jv
c3NEb21haW4gPSBvcmlnaW5BbmNob3IucHJvdG9jb2wgKyAiLy8iICsgb3JpZ2luQW5jaG9yLmhv
c3QgIT09CgkJCQkJdXJsQW5jaG9yLnByb3RvY29sICsgIi8vIiArIHVybEFuY2hvci5ob3N0OwoJ
CQl9IGNhdGNoICggZSApIHsKCgkJCQkvLyBJZiB0aGVyZSBpcyBhbiBlcnJvciBwYXJzaW5nIHRo
ZSBVUkwsIGFzc3VtZSBpdCBpcyBjcm9zc0RvbWFpbiwKCQkJCS8vIGl0IGNhbiBiZSByZWplY3Rl
ZCBieSB0aGUgdHJhbnNwb3J0IGlmIGl0IGlzIGludmFsaWQKCQkJCXMuY3Jvc3NEb21haW4gPSB0
cnVlOwoJCQl9CgkJfQoKCQkvLyBDb252ZXJ0IGRhdGEgaWYgbm90IGFscmVhZHkgYSBzdHJpbmcK
CQlpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmIHR5cGVvZiBzLmRhdGEgIT09ICJzdHJp
bmciICkgewoJCQlzLmRhdGEgPSBqUXVlcnkucGFyYW0oIHMuZGF0YSwgcy50cmFkaXRpb25hbCAp
OwoJCX0KCgkJLy8gQXBwbHkgcHJlZmlsdGVycwoJCWluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3Bv
cnRzKCBwcmVmaWx0ZXJzLCBzLCBvcHRpb25zLCBqcVhIUiApOwoKCQkvLyBJZiByZXF1ZXN0IHdh
cyBhYm9ydGVkIGluc2lkZSBhIHByZWZpbHRlciwgc3RvcCB0aGVyZQoJCWlmICggY29tcGxldGVk
ICkgewoJCQlyZXR1cm4ganFYSFI7CgkJfQoKCQkvLyBXZSBjYW4gZmlyZSBnbG9iYWwgZXZlbnRz
IGFzIG9mIG5vdyBpZiBhc2tlZCB0bwoJCS8vIERvbid0IGZpcmUgZXZlbnRzIGlmIGpRdWVyeS5l
dmVudCBpcyB1bmRlZmluZWQgaW4gYW4gQU1ELXVzYWdlIHNjZW5hcmlvICgjMTUxMTgpCgkJZmly
ZUdsb2JhbHMgPSBqUXVlcnkuZXZlbnQgJiYgcy5nbG9iYWw7CgoJCS8vIFdhdGNoIGZvciBhIG5l
dyBzZXQgb2YgcmVxdWVzdHMKCQlpZiAoIGZpcmVHbG9iYWxzICYmIGpRdWVyeS5hY3RpdmUrKyA9
PT0gMCApIHsKCQkJalF1ZXJ5LmV2ZW50LnRyaWdnZXIoICJhamF4U3RhcnQiICk7CgkJfQoKCQkv
LyBVcHBlcmNhc2UgdGhlIHR5cGUKCQlzLnR5cGUgPSBzLnR5cGUudG9VcHBlckNhc2UoKTsKCgkJ
Ly8gRGV0ZXJtaW5lIGlmIHJlcXVlc3QgaGFzIGNvbnRlbnQKCQlzLmhhc0NvbnRlbnQgPSAhcm5v
Q29udGVudC50ZXN0KCBzLnR5cGUgKTsKCgkJLy8gU2F2ZSB0aGUgVVJMIGluIGNhc2Ugd2UncmUg
dG95aW5nIHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlCgkJLy8gYW5kL29yIElmLU5vbmUtTWF0
Y2ggaGVhZGVyIGxhdGVyIG9uCgkJLy8gUmVtb3ZlIGhhc2ggdG8gc2ltcGxpZnkgdXJsIG1hbmlw
dWxhdGlvbgoJCWNhY2hlVVJMID0gcy51cmwucmVwbGFjZSggcmhhc2gsICIiICk7CgoJCS8vIE1v
cmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50CgkJaWYgKCAh
cy5oYXNDb250ZW50ICkgewoKCQkJLy8gUmVtZW1iZXIgdGhlIGhhc2ggc28gd2UgY2FuIHB1dCBp
dCBiYWNrCgkJCXVuY2FjaGVkID0gcy51cmwuc2xpY2UoIGNhY2hlVVJMLmxlbmd0aCApOwoKCQkJ
Ly8gSWYgZGF0YSBpcyBhdmFpbGFibGUsIGFwcGVuZCBkYXRhIHRvIHVybAoJCQlpZiAoIHMuZGF0
YSApIHsKCQkJCWNhY2hlVVJMICs9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyAiJiIgOiAi
PyIgKSArIHMuZGF0YTsKCgkJCQkvLyAjOTY4MjogcmVtb3ZlIGRhdGEgc28gdGhhdCBpdCdzIG5v
dCB1c2VkIGluIGFuIGV2ZW50dWFsIHJldHJ5CgkJCQlkZWxldGUgcy5kYXRhOwoJCQl9CgoJCQkv
LyBBZGQgb3IgdXBkYXRlIGFudGktY2FjaGUgcGFyYW0gaWYgbmVlZGVkCgkJCWlmICggcy5jYWNo
ZSA9PT0gZmFsc2UgKSB7CgkJCQljYWNoZVVSTCA9IGNhY2hlVVJMLnJlcGxhY2UoIHJhbnRpQ2Fj
aGUsICIkMSIgKTsKCQkJCXVuY2FjaGVkID0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/ICIm
IiA6ICI/IiApICsgIl89IiArICggbm9uY2UrKyApICsgdW5jYWNoZWQ7CgkJCX0KCgkJCS8vIFB1
dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAo
Z2gtMTczMikKCQkJcy51cmwgPSBjYWNoZVVSTCArIHVuY2FjaGVkOwoKCQkvLyBDaGFuZ2UgJyUy
MCcgdG8gJysnIGlmIHRoaXMgaXMgZW5jb2RlZCBmb3JtIGJvZHkgY29udGVudCAoZ2gtMjY1OCkK
CQl9IGVsc2UgaWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJgoJCQkoIHMuY29udGVudFR5
cGUgfHwgIiIgKS5pbmRleE9mKCAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiAp
ID09PSAwICkgewoJCQlzLmRhdGEgPSBzLmRhdGEucmVwbGFjZSggcjIwLCAiKyIgKTsKCQl9CgoJ
CS8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVy
LCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuCgkJaWYgKCBzLmlmTW9kaWZpZWQgKSB7CgkJCWlmICgg
alF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHsKCQkJCWpxWEhSLnNldFJlcXVlc3RI
ZWFkZXIoICJJZi1Nb2RpZmllZC1TaW5jZSIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJM
IF0gKTsKCQkJfQoJCQlpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkgewoJCQkJanFYSFIu
c2V0UmVxdWVzdEhlYWRlciggIklmLU5vbmUtTWF0Y2giLCBqUXVlcnkuZXRhZ1sgY2FjaGVVUkwg
XSApOwoJCQl9CgkJfQoKCQkvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJl
aW5nIHNlbnQKCQlpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAh
PT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHsKCQkJanFYSFIuc2V0UmVxdWVzdEhl
YWRlciggIkNvbnRlbnQtVHlwZSIsIHMuY29udGVudFR5cGUgKTsKCQl9CgoJCS8vIFNldCB0aGUg
QWNjZXB0cyBoZWFkZXIgZm9yIHRoZSBzZXJ2ZXIsIGRlcGVuZGluZyBvbiB0aGUgZGF0YVR5cGUK
CQlqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKAoJCQkiQWNjZXB0IiwKCQkJcy5kYXRhVHlwZXNbIDAg
XSAmJiBzLmFjY2VwdHNbIHMuZGF0YVR5cGVzWyAwIF0gXSA/CgkJCQlzLmFjY2VwdHNbIHMuZGF0
YVR5cGVzWyAwIF0gXSArCgkJCQkJKCBzLmRhdGFUeXBlc1sgMCBdICE9PSAiKiIgPyAiLCAiICsg
YWxsVHlwZXMgKyAiOyBxPTAuMDEiIDogIiIgKSA6CgkJCQlzLmFjY2VwdHNbICIqIiBdCgkJKTsK
CgkJLy8gQ2hlY2sgZm9yIGhlYWRlcnMgb3B0aW9uCgkJZm9yICggaSBpbiBzLmhlYWRlcnMgKSB7
CgkJCWpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7CgkJfQoKCQkv
LyBBbGxvdyBjdXN0b20gaGVhZGVycy9taW1ldHlwZXMgYW5kIGVhcmx5IGFib3J0CgkJaWYgKCBz
LmJlZm9yZVNlbmQgJiYKCQkJKCBzLmJlZm9yZVNlbmQuY2FsbCggY2FsbGJhY2tDb250ZXh0LCBq
cVhIUiwgcyApID09PSBmYWxzZSB8fCBjb21wbGV0ZWQgKSApIHsKCgkJCS8vIEFib3J0IGlmIG5v
dCBkb25lIGFscmVhZHkgYW5kIHJldHVybgoJCQlyZXR1cm4ganFYSFIuYWJvcnQoKTsKCQl9CgoJ
CS8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvbgoJCXN0ckFib3J0ID0gImFi
b3J0IjsKCgkJLy8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzCgkJY29tcGxldGVEZWZl
cnJlZC5hZGQoIHMuY29tcGxldGUgKTsKCQlqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTsKCQlqcVhI
Ui5mYWlsKCBzLmVycm9yICk7CgoJCS8vIEdldCB0cmFuc3BvcnQKCQl0cmFuc3BvcnQgPSBpbnNw
ZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cywgcywgb3B0aW9ucywganFYSFIg
KTsKCgkJLy8gSWYgbm8gdHJhbnNwb3J0LCB3ZSBhdXRvLWFib3J0CgkJaWYgKCAhdHJhbnNwb3J0
ICkgewoJCQlkb25lKCAtMSwgIk5vIFRyYW5zcG9ydCIgKTsKCQl9IGVsc2UgewoJCQlqcVhIUi5y
ZWFkeVN0YXRlID0gMTsKCgkJCS8vIFNlbmQgZ2xvYmFsIGV2ZW50CgkJCWlmICggZmlyZUdsb2Jh
bHMgKSB7CgkJCQlnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggImFqYXhTZW5kIiwgWyBqcVhI
UiwgcyBdICk7CgkJCX0KCgkJCS8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGFqYXhT
ZW5kLCBzdG9wIHRoZXJlCgkJCWlmICggY29tcGxldGVkICkgewoJCQkJcmV0dXJuIGpxWEhSOwoJ
CQl9CgoJCQkvLyBUaW1lb3V0CgkJCWlmICggcy5hc3luYyAmJiBzLnRpbWVvdXQgPiAwICkgewoJ
CQkJdGltZW91dFRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkgewoJCQkJCWpx
WEhSLmFib3J0KCAidGltZW91dCIgKTsKCQkJCX0sIHMudGltZW91dCApOwoJCQl9CgoJCQl0cnkg
ewoJCQkJY29tcGxldGVkID0gZmFsc2U7CgkJCQl0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRl
cnMsIGRvbmUgKTsKCQkJfSBjYXRjaCAoIGUgKSB7CgoJCQkJLy8gUmV0aHJvdyBwb3N0LWNvbXBs
ZXRpb24gZXhjZXB0aW9ucwoJCQkJaWYgKCBjb21wbGV0ZWQgKSB7CgkJCQkJdGhyb3cgZTsKCQkJ
CX0KCgkJCQkvLyBQcm9wYWdhdGUgb3RoZXJzIGFzIHJlc3VsdHMKCQkJCWRvbmUoIC0xLCBlICk7
CgkJCX0KCQl9CgoJCS8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZQoJCWZ1
bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJz
ICkgewoJCQl2YXIgaXNTdWNjZXNzLCBzdWNjZXNzLCBlcnJvciwgcmVzcG9uc2UsIG1vZGlmaWVk
LAoJCQkJc3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7CgoJCQkvLyBJZ25vcmUgcmVwZWF0
IGludm9jYXRpb25zCgkJCWlmICggY29tcGxldGVkICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQlj
b21wbGV0ZWQgPSB0cnVlOwoKCQkJLy8gQ2xlYXIgdGltZW91dCBpZiBpdCBleGlzdHMKCQkJaWYg
KCB0aW1lb3V0VGltZXIgKSB7CgkJCQl3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0VGltZXIg
KTsKCQkJfQoKCQkJLy8gRGVyZWZlcmVuY2UgdHJhbnNwb3J0IGZvciBlYXJseSBnYXJiYWdlIGNv
bGxlY3Rpb24KCQkJLy8gKG5vIG1hdHRlciBob3cgbG9uZyB0aGUganFYSFIgb2JqZWN0IHdpbGwg
YmUgdXNlZCkKCQkJdHJhbnNwb3J0ID0gdW5kZWZpbmVkOwoKCQkJLy8gQ2FjaGUgcmVzcG9uc2Ug
aGVhZGVycwoJCQlyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8ICIiOwoKCQkJLy8g
U2V0IHJlYWR5U3RhdGUKCQkJanFYSFIucmVhZHlTdGF0ZSA9IHN0YXR1cyA+IDAgPyA0IDogMDsK
CgkJCS8vIERldGVybWluZSBpZiBzdWNjZXNzZnVsCgkJCWlzU3VjY2VzcyA9IHN0YXR1cyA+PSAy
MDAgJiYgc3RhdHVzIDwgMzAwIHx8IHN0YXR1cyA9PT0gMzA0OwoKCQkJLy8gR2V0IHJlc3BvbnNl
IGRhdGEKCQkJaWYgKCByZXNwb25zZXMgKSB7CgkJCQlyZXNwb25zZSA9IGFqYXhIYW5kbGVSZXNw
b25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKTsKCQkJfQoKCQkJLy8gQ29udmVydCBubyBtYXR0
ZXIgd2hhdCAodGhhdCB3YXkgcmVzcG9uc2VYWFggZmllbGRzIGFyZSBhbHdheXMgc2V0KQoJCQly
ZXNwb25zZSA9IGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSwganFYSFIsIGlzU3VjY2VzcyApOwoK
CQkJLy8gSWYgc3VjY2Vzc2Z1bCwgaGFuZGxlIHR5cGUgY2hhaW5pbmcKCQkJaWYgKCBpc1N1Y2Nl
c3MgKSB7CgoJCQkJLy8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1N
YXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS4KCQkJCWlmICggcy5pZk1vZGlmaWVk
ICkgewoJCQkJCW1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoICJMYXN0LU1vZGlm
aWVkIiApOwoJCQkJCWlmICggbW9kaWZpZWQgKSB7CgkJCQkJCWpRdWVyeS5sYXN0TW9kaWZpZWRb
IGNhY2hlVVJMIF0gPSBtb2RpZmllZDsKCQkJCQl9CgkJCQkJbW9kaWZpZWQgPSBqcVhIUi5nZXRS
ZXNwb25zZUhlYWRlciggImV0YWciICk7CgkJCQkJaWYgKCBtb2RpZmllZCApIHsKCQkJCQkJalF1
ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDsKCQkJCQl9CgkJCQl9CgoJCQkJLy8gaWYg
bm8gY29udGVudAoJCQkJaWYgKCBzdGF0dXMgPT09IDIwNCB8fCBzLnR5cGUgPT09ICJIRUFEIiAp
IHsKCQkJCQlzdGF0dXNUZXh0ID0gIm5vY29udGVudCI7CgoJCQkJLy8gaWYgbm90IG1vZGlmaWVk
CgkJCQl9IGVsc2UgaWYgKCBzdGF0dXMgPT09IDMwNCApIHsKCQkJCQlzdGF0dXNUZXh0ID0gIm5v
dG1vZGlmaWVkIjsKCgkJCQkvLyBJZiB3ZSBoYXZlIGRhdGEsIGxldCdzIGNvbnZlcnQgaXQKCQkJ
CX0gZWxzZSB7CgkJCQkJc3RhdHVzVGV4dCA9IHJlc3BvbnNlLnN0YXRlOwoJCQkJCXN1Y2Nlc3Mg
PSByZXNwb25zZS5kYXRhOwoJCQkJCWVycm9yID0gcmVzcG9uc2UuZXJyb3I7CgkJCQkJaXNTdWNj
ZXNzID0gIWVycm9yOwoJCQkJfQoJCQl9IGVsc2UgewoKCQkJCS8vIEV4dHJhY3QgZXJyb3IgZnJv
bSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHMKCQkJCWVycm9yID0gc3Rh
dHVzVGV4dDsKCQkJCWlmICggc3RhdHVzIHx8ICFzdGF0dXNUZXh0ICkgewoJCQkJCXN0YXR1c1Rl
eHQgPSAiZXJyb3IiOwoJCQkJCWlmICggc3RhdHVzIDwgMCApIHsKCQkJCQkJc3RhdHVzID0gMDsK
CQkJCQl9CgkJCQl9CgkJCX0KCgkJCS8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0
CgkJCWpxWEhSLnN0YXR1cyA9IHN0YXR1czsKCQkJanFYSFIuc3RhdHVzVGV4dCA9ICggbmF0aXZl
U3RhdHVzVGV4dCB8fCBzdGF0dXNUZXh0ICkgKyAiIjsKCgkJCS8vIFN1Y2Nlc3MvRXJyb3IKCQkJ
aWYgKCBpc1N1Y2Nlc3MgKSB7CgkJCQlkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250
ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTsKCQkJfSBlbHNlIHsKCQkJCWRl
ZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwg
ZXJyb3IgXSApOwoJCQl9CgoJCQkvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrcwoJCQlqcVhI
Ui5zdGF0dXNDb2RlKCBzdGF0dXNDb2RlICk7CgkJCXN0YXR1c0NvZGUgPSB1bmRlZmluZWQ7CgoJ
CQlpZiAoIGZpcmVHbG9iYWxzICkgewoJCQkJZ2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlz
U3VjY2VzcyA/ICJhamF4U3VjY2VzcyIgOiAiYWpheEVycm9yIiwKCQkJCQlbIGpxWEhSLCBzLCBp
c1N1Y2Nlc3MgPyBzdWNjZXNzIDogZXJyb3IgXSApOwoJCQl9CgoJCQkvLyBDb21wbGV0ZQoJCQlj
b21wbGV0ZURlZmVycmVkLmZpcmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsganFYSFIsIHN0YXR1
c1RleHQgXSApOwoKCQkJaWYgKCBmaXJlR2xvYmFscyApIHsKCQkJCWdsb2JhbEV2ZW50Q29udGV4
dC50cmlnZ2VyKCAiYWpheENvbXBsZXRlIiwgWyBqcVhIUiwgcyBdICk7CgoJCQkJLy8gSGFuZGxl
IHRoZSBnbG9iYWwgQUpBWCBjb3VudGVyCgkJCQlpZiAoICEoIC0talF1ZXJ5LmFjdGl2ZSApICkg
ewoJCQkJCWpRdWVyeS5ldmVudC50cmlnZ2VyKCAiYWpheFN0b3AiICk7CgkJCQl9CgkJCX0KCQl9
CgoJCXJldHVybiBqcVhIUjsKCX0sCgoJZ2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2Fs
bGJhY2sgKSB7CgkJcmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgZGF0YSwgY2FsbGJhY2ssICJqc29u
IiApOwoJfSwKCglnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkgewoJCXJldHVy
biBqUXVlcnkuZ2V0KCB1cmwsIHVuZGVmaW5lZCwgY2FsbGJhY2ssICJzY3JpcHQiICk7Cgl9Cn0g
KTsKCmpRdWVyeS5lYWNoKCBbICJnZXQiLCAicG9zdCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCAp
IHsKCWpRdWVyeVsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjaywgdHlw
ZSApIHsKCgkJLy8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWQK
CQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBkYXRhICkgKSB7CgkJCXR5cGUgPSB0eXBlIHx8IGNh
bGxiYWNrOwoJCQljYWxsYmFjayA9IGRhdGE7CgkJCWRhdGEgPSB1bmRlZmluZWQ7CgkJfQoKCQkv
LyBUaGUgdXJsIGNhbiBiZSBhbiBvcHRpb25zIG9iamVjdCAod2hpY2ggdGhlbiBtdXN0IGhhdmUg
LnVybCkKCQlyZXR1cm4galF1ZXJ5LmFqYXgoIGpRdWVyeS5leHRlbmQoIHsKCQkJdXJsOiB1cmws
CgkJCXR5cGU6IG1ldGhvZCwKCQkJZGF0YVR5cGU6IHR5cGUsCgkJCWRhdGE6IGRhdGEsCgkJCXN1
Y2Nlc3M6IGNhbGxiYWNrCgkJfSwgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHVybCApICYmIHVybCAp
ICk7Cgl9Owp9ICk7CgoKalF1ZXJ5Ll9ldmFsVXJsID0gZnVuY3Rpb24oIHVybCApIHsKCXJldHVy
biBqUXVlcnkuYWpheCggewoJCXVybDogdXJsLAoKCQkvLyBNYWtlIHRoaXMgZXhwbGljaXQsIHNp
bmNlIHVzZXIgY2FuIG92ZXJyaWRlIHRoaXMgdGhyb3VnaCBhamF4U2V0dXAgKCMxMTI2NCkKCQl0
eXBlOiAiR0VUIiwKCQlkYXRhVHlwZTogInNjcmlwdCIsCgkJY2FjaGU6IHRydWUsCgkJYXN5bmM6
IGZhbHNlLAoJCWdsb2JhbDogZmFsc2UsCgkJInRocm93cyI6IHRydWUKCX0gKTsKfTsKCgpqUXVl
cnkuZm4uZXh0ZW5kKCB7Cgl3cmFwQWxsOiBmdW5jdGlvbiggaHRtbCApIHsKCQl2YXIgd3JhcDsK
CgkJaWYgKCB0aGlzWyAwIF0gKSB7CgkJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGh0bWwgKSAp
IHsKCQkJCWh0bWwgPSBodG1sLmNhbGwoIHRoaXNbIDAgXSApOwoJCQl9CgoJCQkvLyBUaGUgZWxl
bWVudHMgdG8gd3JhcCB0aGUgdGFyZ2V0IGFyb3VuZAoJCQl3cmFwID0galF1ZXJ5KCBodG1sLCB0
aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTsKCgkJCWlmICgg
dGhpc1sgMCBdLnBhcmVudE5vZGUgKSB7CgkJCQl3cmFwLmluc2VydEJlZm9yZSggdGhpc1sgMCBd
ICk7CgkJCX0KCgkJCXdyYXAubWFwKCBmdW5jdGlvbigpIHsKCQkJCXZhciBlbGVtID0gdGhpczsK
CgkJCQl3aGlsZSAoIGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQgKSB7CgkJCQkJZWxlbSA9IGVsZW0u
Zmlyc3RFbGVtZW50Q2hpbGQ7CgkJCQl9CgoJCQkJcmV0dXJuIGVsZW07CgkJCX0gKS5hcHBlbmQo
IHRoaXMgKTsKCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCgl3cmFwSW5uZXI6IGZ1bmN0aW9uKCBo
dG1sICkgewoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGh0bWwgKSApIHsKCQkJcmV0dXJuIHRo
aXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7CgkJCQlqUXVlcnkoIHRoaXMgKS53cmFwSW5uZXIoIGh0
bWwuY2FsbCggdGhpcywgaSApICk7CgkJCX0gKTsKCQl9CgoJCXJldHVybiB0aGlzLmVhY2goIGZ1
bmN0aW9uKCkgewoJCQl2YXIgc2VsZiA9IGpRdWVyeSggdGhpcyApLAoJCQkJY29udGVudHMgPSBz
ZWxmLmNvbnRlbnRzKCk7CgoJCQlpZiAoIGNvbnRlbnRzLmxlbmd0aCApIHsKCQkJCWNvbnRlbnRz
LndyYXBBbGwoIGh0bWwgKTsKCgkJCX0gZWxzZSB7CgkJCQlzZWxmLmFwcGVuZCggaHRtbCApOwoJ
CQl9CgkJfSApOwoJfSwKCgl3cmFwOiBmdW5jdGlvbiggaHRtbCApIHsKCQl2YXIgaXNGdW5jdGlv
biA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICk7CgoJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0
aW9uKCBpICkgewoJCQlqUXVlcnkoIHRoaXMgKS53cmFwQWxsKCBpc0Z1bmN0aW9uID8gaHRtbC5j
YWxsKCB0aGlzLCBpICkgOiBodG1sICk7CgkJfSApOwoJfSwKCgl1bndyYXA6IGZ1bmN0aW9uKCBz
ZWxlY3RvciApIHsKCQl0aGlzLnBhcmVudCggc2VsZWN0b3IgKS5ub3QoICJib2R5IiApLmVhY2go
IGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkoIHRoaXMgKS5yZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5v
ZGVzICk7CgkJfSApOwoJCXJldHVybiB0aGlzOwoJfQp9ICk7CgoKalF1ZXJ5LmV4cHIucHNldWRv
cy5oaWRkZW4gPSBmdW5jdGlvbiggZWxlbSApIHsKCXJldHVybiAhalF1ZXJ5LmV4cHIucHNldWRv
cy52aXNpYmxlKCBlbGVtICk7Cn07CmpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSA9IGZ1bmN0
aW9uKCBlbGVtICkgewoJcmV0dXJuICEhKCBlbGVtLm9mZnNldFdpZHRoIHx8IGVsZW0ub2Zmc2V0
SGVpZ2h0IHx8IGVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKTsKfTsKCgoKCmpRdWVyeS5h
amF4U2V0dGluZ3MueGhyID0gZnVuY3Rpb24oKSB7Cgl0cnkgewoJCXJldHVybiBuZXcgd2luZG93
LlhNTEh0dHBSZXF1ZXN0KCk7Cgl9IGNhdGNoICggZSApIHt9Cn07Cgp2YXIgeGhyU3VjY2Vzc1N0
YXR1cyA9IHsKCgkJLy8gRmlsZSBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyBjb2RlIDAs
IGFzc3VtZSAyMDAKCQkwOiAyMDAsCgoJCS8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5CgkJLy8gIzE0
NTA6IHNvbWV0aW1lcyBJRSByZXR1cm5zIDEyMjMgd2hlbiBpdCBzaG91bGQgYmUgMjA0CgkJMTIy
MzogMjA0Cgl9LAoJeGhyU3VwcG9ydGVkID0galF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIoKTsKCnN1
cHBvcnQuY29ycyA9ICEheGhyU3VwcG9ydGVkICYmICggIndpdGhDcmVkZW50aWFscyIgaW4geGhy
U3VwcG9ydGVkICk7CnN1cHBvcnQuYWpheCA9IHhoclN1cHBvcnRlZCA9ICEheGhyU3VwcG9ydGVk
OwoKalF1ZXJ5LmFqYXhUcmFuc3BvcnQoIGZ1bmN0aW9uKCBvcHRpb25zICkgewoJdmFyIGNhbGxi
YWNrLCBlcnJvckNhbGxiYWNrOwoKCS8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3Vw
cG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3QKCWlmICggc3VwcG9ydC5jb3JzIHx8IHhoclN1
cHBvcnRlZCAmJiAhb3B0aW9ucy5jcm9zc0RvbWFpbiApIHsKCQlyZXR1cm4gewoJCQlzZW5kOiBm
dW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7CgkJCQl2YXIgaSwKCQkJCQl4aHIgPSBvcHRp
b25zLnhocigpOwoKCQkJCXhoci5vcGVuKAoJCQkJCW9wdGlvbnMudHlwZSwKCQkJCQlvcHRpb25z
LnVybCwKCQkJCQlvcHRpb25zLmFzeW5jLAoJCQkJCW9wdGlvbnMudXNlcm5hbWUsCgkJCQkJb3B0
aW9ucy5wYXNzd29yZAoJCQkJKTsKCgkJCQkvLyBBcHBseSBjdXN0b20gZmllbGRzIGlmIHByb3Zp
ZGVkCgkJCQlpZiAoIG9wdGlvbnMueGhyRmllbGRzICkgewoJCQkJCWZvciAoIGkgaW4gb3B0aW9u
cy54aHJGaWVsZHMgKSB7CgkJCQkJCXhoclsgaSBdID0gb3B0aW9ucy54aHJGaWVsZHNbIGkgXTsK
CQkJCQl9CgkJCQl9CgoJCQkJLy8gT3ZlcnJpZGUgbWltZSB0eXBlIGlmIG5lZWRlZAoJCQkJaWYg
KCBvcHRpb25zLm1pbWVUeXBlICYmIHhoci5vdmVycmlkZU1pbWVUeXBlICkgewoJCQkJCXhoci5v
dmVycmlkZU1pbWVUeXBlKCBvcHRpb25zLm1pbWVUeXBlICk7CgkJCQl9CgoJCQkJLy8gWC1SZXF1
ZXN0ZWQtV2l0aCBoZWFkZXIKCQkJCS8vIEZvciBjcm9zcy1kb21haW4gcmVxdWVzdHMsIHNlZWlu
ZyBhcyBjb25kaXRpb25zIGZvciBhIHByZWZsaWdodCBhcmUKCQkJCS8vIGFraW4gdG8gYSBqaWdz
YXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2ZXIgc2V0IGl0IHRvIGJlIHN1cmUuCgkJCQkvLyAoaXQg
Y2FuIGFsd2F5cyBiZSBzZXQgb24gYSBwZXItcmVxdWVzdCBiYXNpcyBvciBldmVuIHVzaW5nIGFq
YXhTZXR1cCkKCQkJCS8vIEZvciBzYW1lLWRvbWFpbiByZXF1ZXN0cywgd29uJ3QgY2hhbmdlIGhl
YWRlciBpZiBhbHJlYWR5IHByb3ZpZGVkLgoJCQkJaWYgKCAhb3B0aW9ucy5jcm9zc0RvbWFpbiAm
JiAhaGVhZGVyc1sgIlgtUmVxdWVzdGVkLVdpdGgiIF0gKSB7CgkJCQkJaGVhZGVyc1sgIlgtUmVx
dWVzdGVkLVdpdGgiIF0gPSAiWE1MSHR0cFJlcXVlc3QiOwoJCQkJfQoKCQkJCS8vIFNldCBoZWFk
ZXJzCgkJCQlmb3IgKCBpIGluIGhlYWRlcnMgKSB7CgkJCQkJeGhyLnNldFJlcXVlc3RIZWFkZXIo
IGksIGhlYWRlcnNbIGkgXSApOwoJCQkJfQoKCQkJCS8vIENhbGxiYWNrCgkJCQljYWxsYmFjayA9
IGZ1bmN0aW9uKCB0eXBlICkgewoJCQkJCXJldHVybiBmdW5jdGlvbigpIHsKCQkJCQkJaWYgKCBj
YWxsYmFjayApIHsKCQkJCQkJCWNhbGxiYWNrID0gZXJyb3JDYWxsYmFjayA9IHhoci5vbmxvYWQg
PQoJCQkJCQkJCXhoci5vbmVycm9yID0geGhyLm9uYWJvcnQgPSB4aHIub25yZWFkeXN0YXRlY2hh
bmdlID0gbnVsbDsKCgkJCQkJCQlpZiAoIHR5cGUgPT09ICJhYm9ydCIgKSB7CgkJCQkJCQkJeGhy
LmFib3J0KCk7CgkJCQkJCQl9IGVsc2UgaWYgKCB0eXBlID09PSAiZXJyb3IiICkgewoKCQkJCQkJ
CQkvLyBTdXBwb3J0OiBJRSA8PTkgb25seQoJCQkJCQkJCS8vIE9uIGEgbWFudWFsIG5hdGl2ZSBh
Ym9ydCwgSUU5IHRocm93cwoJCQkJCQkJCS8vIGVycm9ycyBvbiBhbnkgcHJvcGVydHkgYWNjZXNz
IHRoYXQgaXMgbm90IHJlYWR5U3RhdGUKCQkJCQkJCQlpZiAoIHR5cGVvZiB4aHIuc3RhdHVzICE9
PSAibnVtYmVyIiApIHsKCQkJCQkJCQkJY29tcGxldGUoIDAsICJlcnJvciIgKTsKCQkJCQkJCQl9
IGVsc2UgewoJCQkJCQkJCQljb21wbGV0ZSgKCgkJCQkJCQkJCQkvLyBGaWxlOiBwcm90b2NvbCBh
bHdheXMgeWllbGRzIHN0YXR1cyAwOyBzZWUgIzg2MDUsICMxNDIwNwoJCQkJCQkJCQkJeGhyLnN0
YXR1cywKCQkJCQkJCQkJCXhoci5zdGF0dXNUZXh0CgkJCQkJCQkJCSk7CgkJCQkJCQkJfQoJCQkJ
CQkJfSBlbHNlIHsKCQkJCQkJCQljb21wbGV0ZSgKCQkJCQkJCQkJeGhyU3VjY2Vzc1N0YXR1c1sg
eGhyLnN0YXR1cyBdIHx8IHhoci5zdGF0dXMsCgkJCQkJCQkJCXhoci5zdGF0dXNUZXh0LAoKCQkJ
CQkJCQkJLy8gU3VwcG9ydDogSUUgPD05IG9ubHkKCQkJCQkJCQkJLy8gSUU5IGhhcyBubyBYSFIy
IGJ1dCB0aHJvd3Mgb24gYmluYXJ5ICh0cmFjLTExNDI2KQoJCQkJCQkJCQkvLyBGb3IgWEhSMiBu
b24tdGV4dCwgbGV0IHRoZSBjYWxsZXIgaGFuZGxlIGl0IChnaC0yNDk4KQoJCQkJCQkJCQkoIHho
ci5yZXNwb25zZVR5cGUgfHwgInRleHQiICkgIT09ICJ0ZXh0IiAgfHwKCQkJCQkJCQkJdHlwZW9m
IHhoci5yZXNwb25zZVRleHQgIT09ICJzdHJpbmciID8KCQkJCQkJCQkJCXsgYmluYXJ5OiB4aHIu
cmVzcG9uc2UgfSA6CgkJCQkJCQkJCQl7IHRleHQ6IHhoci5yZXNwb25zZVRleHQgfSwKCQkJCQkJ
CQkJeGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpCgkJCQkJCQkJKTsKCQkJCQkJCX0KCQkJCQkJ
fQoJCQkJCX07CgkJCQl9OwoKCQkJCS8vIExpc3RlbiB0byBldmVudHMKCQkJCXhoci5vbmxvYWQg
PSBjYWxsYmFjaygpOwoJCQkJZXJyb3JDYWxsYmFjayA9IHhoci5vbmVycm9yID0gY2FsbGJhY2so
ICJlcnJvciIgKTsKCgkJCQkvLyBTdXBwb3J0OiBJRSA5IG9ubHkKCQkJCS8vIFVzZSBvbnJlYWR5
c3RhdGVjaGFuZ2UgdG8gcmVwbGFjZSBvbmFib3J0CgkJCQkvLyB0byBoYW5kbGUgdW5jYXVnaHQg
YWJvcnRzCgkJCQlpZiAoIHhoci5vbmFib3J0ICE9PSB1bmRlZmluZWQgKSB7CgkJCQkJeGhyLm9u
YWJvcnQgPSBlcnJvckNhbGxiYWNrOwoJCQkJfSBlbHNlIHsKCQkJCQl4aHIub25yZWFkeXN0YXRl
Y2hhbmdlID0gZnVuY3Rpb24oKSB7CgoJCQkJCQkvLyBDaGVjayByZWFkeVN0YXRlIGJlZm9yZSB0
aW1lb3V0IGFzIGl0IGNoYW5nZXMKCQkJCQkJaWYgKCB4aHIucmVhZHlTdGF0ZSA9PT0gNCApIHsK
CgkJCQkJCQkvLyBBbGxvdyBvbmVycm9yIHRvIGJlIGNhbGxlZCBmaXJzdCwKCQkJCQkJCS8vIGJ1
dCB0aGF0IHdpbGwgbm90IGhhbmRsZSBhIG5hdGl2ZSBhYm9ydAoJCQkJCQkJLy8gQWxzbywgc2F2
ZSBlcnJvckNhbGxiYWNrIHRvIGEgdmFyaWFibGUKCQkJCQkJCS8vIGFzIHhoci5vbmVycm9yIGNh
bm5vdCBiZSBhY2Nlc3NlZAoJCQkJCQkJd2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkgewoJ
CQkJCQkJCWlmICggY2FsbGJhY2sgKSB7CgkJCQkJCQkJCWVycm9yQ2FsbGJhY2soKTsKCQkJCQkJ
CQl9CgkJCQkJCQl9ICk7CgkJCQkJCX0KCQkJCQl9OwoJCQkJfQoKCQkJCS8vIENyZWF0ZSB0aGUg
YWJvcnQgY2FsbGJhY2sKCQkJCWNhbGxiYWNrID0gY2FsbGJhY2soICJhYm9ydCIgKTsKCgkJCQl0
cnkgewoKCQkJCQkvLyBEbyBzZW5kIHRoZSByZXF1ZXN0ICh0aGlzIG1heSByYWlzZSBhbiBleGNl
cHRpb24pCgkJCQkJeGhyLnNlbmQoIG9wdGlvbnMuaGFzQ29udGVudCAmJiBvcHRpb25zLmRhdGEg
fHwgbnVsbCApOwoJCQkJfSBjYXRjaCAoIGUgKSB7CgoJCQkJCS8vICMxNDY4MzogT25seSByZXRo
cm93IGlmIHRoaXMgaGFzbid0IGJlZW4gbm90aWZpZWQgYXMgYW4gZXJyb3IgeWV0CgkJCQkJaWYg
KCBjYWxsYmFjayApIHsKCQkJCQkJdGhyb3cgZTsKCQkJCQl9CgkJCQl9CgkJCX0sCgoJCQlhYm9y
dDogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIGNhbGxiYWNrICkgewoJCQkJCWNhbGxiYWNrKCk7CgkJ
CQl9CgkJCX0KCQl9OwoJfQp9ICk7CgoKCgovLyBQcmV2ZW50IGF1dG8tZXhlY3V0aW9uIG9mIHNj
cmlwdHMgd2hlbiBubyBleHBsaWNpdCBkYXRhVHlwZSB3YXMgcHJvdmlkZWQgKFNlZSBnaC0yNDMy
KQpqUXVlcnkuYWpheFByZWZpbHRlciggZnVuY3Rpb24oIHMgKSB7CglpZiAoIHMuY3Jvc3NEb21h
aW4gKSB7CgkJcy5jb250ZW50cy5zY3JpcHQgPSBmYWxzZTsKCX0KfSApOwoKLy8gSW5zdGFsbCBz
Y3JpcHQgZGF0YVR5cGUKalF1ZXJ5LmFqYXhTZXR1cCggewoJYWNjZXB0czogewoJCXNjcmlwdDog
InRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgIiArCgkJCSJhcHBsaWNh
dGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHQiCgl9LAoJY29udGVudHM6
IHsKCQlzY3JpcHQ6IC9cYig/OmphdmF8ZWNtYSlzY3JpcHRcYi8KCX0sCgljb252ZXJ0ZXJzOiB7
CgkJInRleHQgc2NyaXB0IjogZnVuY3Rpb24oIHRleHQgKSB7CgkJCWpRdWVyeS5nbG9iYWxFdmFs
KCB0ZXh0ICk7CgkJCXJldHVybiB0ZXh0OwoJCX0KCX0KfSApOwoKLy8gSGFuZGxlIGNhY2hlJ3Mg
c3BlY2lhbCBjYXNlIGFuZCBjcm9zc0RvbWFpbgpqUXVlcnkuYWpheFByZWZpbHRlciggInNjcmlw
dCIsIGZ1bmN0aW9uKCBzICkgewoJaWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7CgkJcy5j
YWNoZSA9IGZhbHNlOwoJfQoJaWYgKCBzLmNyb3NzRG9tYWluICkgewoJCXMudHlwZSA9ICJHRVQi
OwoJfQp9ICk7CgovLyBCaW5kIHNjcmlwdCB0YWcgaGFjayB0cmFuc3BvcnQKalF1ZXJ5LmFqYXhU
cmFuc3BvcnQoICJzY3JpcHQiLCBmdW5jdGlvbiggcyApIHsKCgkvLyBUaGlzIHRyYW5zcG9ydCBv
bmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIHJlcXVlc3RzCglpZiAoIHMuY3Jvc3NEb21haW4g
KSB7CgkJdmFyIHNjcmlwdCwgY2FsbGJhY2s7CgkJcmV0dXJuIHsKCQkJc2VuZDogZnVuY3Rpb24o
IF8sIGNvbXBsZXRlICkgewoJCQkJc2NyaXB0ID0galF1ZXJ5KCAiPHNjcmlwdD4iICkucHJvcCgg
ewoJCQkJCWNoYXJzZXQ6IHMuc2NyaXB0Q2hhcnNldCwKCQkJCQlzcmM6IHMudXJsCgkJCQl9ICku
b24oCgkJCQkJImxvYWQgZXJyb3IiLAoJCQkJCWNhbGxiYWNrID0gZnVuY3Rpb24oIGV2dCApIHsK
CQkJCQkJc2NyaXB0LnJlbW92ZSgpOwoJCQkJCQljYWxsYmFjayA9IG51bGw7CgkJCQkJCWlmICgg
ZXZ0ICkgewoJCQkJCQkJY29tcGxldGUoIGV2dC50eXBlID09PSAiZXJyb3IiID8gNDA0IDogMjAw
LCBldnQudHlwZSApOwoJCQkJCQl9CgkJCQkJfQoJCQkJKTsKCgkJCQkvLyBVc2UgbmF0aXZlIERP
TSBtYW5pcHVsYXRpb24gdG8gYXZvaWQgb3VyIGRvbU1hbmlwIEFKQVggdHJpY2tlcnkKCQkJCWRv
Y3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdFsgMCBdICk7CgkJCX0sCgkJCWFib3J0OiBm
dW5jdGlvbigpIHsKCQkJCWlmICggY2FsbGJhY2sgKSB7CgkJCQkJY2FsbGJhY2soKTsKCQkJCX0K
CQkJfQoJCX07Cgl9Cn0gKTsKCgoKCnZhciBvbGRDYWxsYmFja3MgPSBbXSwKCXJqc29ucCA9IC8o
PSlcPyg/PSZ8JCl8XD9cPy87CgovLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzCmpRdWVyeS5hamF4
U2V0dXAoIHsKCWpzb25wOiAiY2FsbGJhY2siLAoJanNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7
CgkJdmFyIGNhbGxiYWNrID0gb2xkQ2FsbGJhY2tzLnBvcCgpIHx8ICggalF1ZXJ5LmV4cGFuZG8g
KyAiXyIgKyAoIG5vbmNlKysgKSApOwoJCXRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlOwoJCXJldHVy
biBjYWxsYmFjazsKCX0KfSApOwoKLy8gRGV0ZWN0LCBub3JtYWxpemUgb3B0aW9ucyBhbmQgaW5z
dGFsbCBjYWxsYmFja3MgZm9yIGpzb25wIHJlcXVlc3RzCmpRdWVyeS5hamF4UHJlZmlsdGVyKCAi
anNvbiBqc29ucCIsIGZ1bmN0aW9uKCBzLCBvcmlnaW5hbFNldHRpbmdzLCBqcVhIUiApIHsKCgl2
YXIgY2FsbGJhY2tOYW1lLCBvdmVyd3JpdHRlbiwgcmVzcG9uc2VDb250YWluZXIsCgkJanNvblBy
b3AgPSBzLmpzb25wICE9PSBmYWxzZSAmJiAoIHJqc29ucC50ZXN0KCBzLnVybCApID8KCQkJInVy
bCIgOgoJCQl0eXBlb2Ygcy5kYXRhID09PSAic3RyaW5nIiAmJgoJCQkJKCBzLmNvbnRlbnRUeXBl
IHx8ICIiICkKCQkJCQkuaW5kZXhPZiggImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2Rl
ZCIgKSA9PT0gMCAmJgoJCQkJcmpzb25wLnRlc3QoIHMuZGF0YSApICYmICJkYXRhIgoJCSk7CgoJ
Ly8gSGFuZGxlIGlmZiB0aGUgZXhwZWN0ZWQgZGF0YSB0eXBlIGlzICJqc29ucCIgb3Igd2UgaGF2
ZSBhIHBhcmFtZXRlciB0byBzZXQKCWlmICgganNvblByb3AgfHwgcy5kYXRhVHlwZXNbIDAgXSA9
PT0gImpzb25wIiApIHsKCgkJLy8gR2V0IGNhbGxiYWNrIG5hbWUsIHJlbWVtYmVyaW5nIHByZWV4
aXN0aW5nIHZhbHVlIGFzc29jaWF0ZWQgd2l0aCBpdAoJCWNhbGxiYWNrTmFtZSA9IHMuanNvbnBD
YWxsYmFjayA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/CgkJCXMuanNv
bnBDYWxsYmFjaygpIDoKCQkJcy5qc29ucENhbGxiYWNrOwoKCQkvLyBJbnNlcnQgY2FsbGJhY2sg
aW50byB1cmwgb3IgZm9ybSBkYXRhCgkJaWYgKCBqc29uUHJvcCApIHsKCQkJc1sganNvblByb3Ag
XSA9IHNbIGpzb25Qcm9wIF0ucmVwbGFjZSggcmpzb25wLCAiJDEiICsgY2FsbGJhY2tOYW1lICk7
CgkJfSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7CgkJCXMudXJsICs9ICggcnF1ZXJ5
LnRlc3QoIHMudXJsICkgPyAiJiIgOiAiPyIgKSArIHMuanNvbnAgKyAiPSIgKyBjYWxsYmFja05h
bWU7CgkJfQoKCQkvLyBVc2UgZGF0YSBjb252ZXJ0ZXIgdG8gcmV0cmlldmUganNvbiBhZnRlciBz
Y3JpcHQgZXhlY3V0aW9uCgkJcy5jb252ZXJ0ZXJzWyAic2NyaXB0IGpzb24iIF0gPSBmdW5jdGlv
bigpIHsKCQkJaWYgKCAhcmVzcG9uc2VDb250YWluZXIgKSB7CgkJCQlqUXVlcnkuZXJyb3IoIGNh
bGxiYWNrTmFtZSArICIgd2FzIG5vdCBjYWxsZWQiICk7CgkJCX0KCQkJcmV0dXJuIHJlc3BvbnNl
Q29udGFpbmVyWyAwIF07CgkJfTsKCgkJLy8gRm9yY2UganNvbiBkYXRhVHlwZQoJCXMuZGF0YVR5
cGVzWyAwIF0gPSAianNvbiI7CgoJCS8vIEluc3RhbGwgY2FsbGJhY2sKCQlvdmVyd3JpdHRlbiA9
IHdpbmRvd1sgY2FsbGJhY2tOYW1lIF07CgkJd2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0
aW9uKCkgewoJCQlyZXNwb25zZUNvbnRhaW5lciA9IGFyZ3VtZW50czsKCQl9OwoKCQkvLyBDbGVh
bi11cCBmdW5jdGlvbiAoZmlyZXMgYWZ0ZXIgY29udmVydGVycykKCQlqcVhIUi5hbHdheXMoIGZ1
bmN0aW9uKCkgewoKCQkJLy8gSWYgcHJldmlvdXMgdmFsdWUgZGlkbid0IGV4aXN0IC0gcmVtb3Zl
IGl0CgkJCWlmICggb3ZlcndyaXR0ZW4gPT09IHVuZGVmaW5lZCApIHsKCQkJCWpRdWVyeSggd2lu
ZG93ICkucmVtb3ZlUHJvcCggY2FsbGJhY2tOYW1lICk7CgoJCQkvLyBPdGhlcndpc2UgcmVzdG9y
ZSBwcmVleGlzdGluZyB2YWx1ZQoJCQl9IGVsc2UgewoJCQkJd2luZG93WyBjYWxsYmFja05hbWUg
XSA9IG92ZXJ3cml0dGVuOwoJCQl9CgoJCQkvLyBTYXZlIGJhY2sgYXMgZnJlZQoJCQlpZiAoIHNb
IGNhbGxiYWNrTmFtZSBdICkgewoKCQkJCS8vIE1ha2Ugc3VyZSB0aGF0IHJlLXVzaW5nIHRoZSBv
cHRpb25zIGRvZXNuJ3Qgc2NyZXcgdGhpbmdzIGFyb3VuZAoJCQkJcy5qc29ucENhbGxiYWNrID0g
b3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrOwoKCQkJCS8vIFNhdmUgdGhlIGNhbGxiYWNr
IG5hbWUgZm9yIGZ1dHVyZSB1c2UKCQkJCW9sZENhbGxiYWNrcy5wdXNoKCBjYWxsYmFja05hbWUg
KTsKCQkJfQoKCQkJLy8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJl
c3BvbnNlCgkJCWlmICggcmVzcG9uc2VDb250YWluZXIgJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIG92
ZXJ3cml0dGVuICkgKSB7CgkJCQlvdmVyd3JpdHRlbiggcmVzcG9uc2VDb250YWluZXJbIDAgXSAp
OwoJCQl9CgoJCQlyZXNwb25zZUNvbnRhaW5lciA9IG92ZXJ3cml0dGVuID0gdW5kZWZpbmVkOwoJ
CX0gKTsKCgkJLy8gRGVsZWdhdGUgdG8gc2NyaXB0CgkJcmV0dXJuICJzY3JpcHQiOwoJfQp9ICk7
CgoKCgovLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5Ci8vIEluIFNhZmFyaSA4IGRvY3VtZW50cyBj
cmVhdGVkIHZpYSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQKLy8g
Y29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9m
IHRoZSBmaXJzdCBvbmUuCi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJl
IGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC4KLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5v
cmcvc2hvd19idWcuY2dpP2lkPTEzNzMzNwpzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9ICgg
ZnVuY3Rpb24oKSB7Cgl2YXIgYm9keSA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhU
TUxEb2N1bWVudCggIiIgKS5ib2R5OwoJYm9keS5pbm5lckhUTUwgPSAiPGZvcm0+PC9mb3JtPjxm
b3JtPjwvZm9ybT4iOwoJcmV0dXJuIGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggPT09IDI7Cn0gKSgp
OwoKCi8vIEFyZ3VtZW50ICJkYXRhIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWwKLy8gY29udGV4
dCAob3B0aW9uYWwpOiBJZiBzcGVjaWZpZWQsIHRoZSBmcmFnbWVudCB3aWxsIGJlIGNyZWF0ZWQg
aW4gdGhpcyBjb250ZXh0LAovLyBkZWZhdWx0cyB0byBkb2N1bWVudAovLyBrZWVwU2NyaXB0cyAo
b3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0
bWwgc3RyaW5nCmpRdWVyeS5wYXJzZUhUTUwgPSBmdW5jdGlvbiggZGF0YSwgY29udGV4dCwga2Vl
cFNjcmlwdHMgKSB7CglpZiAoIHR5cGVvZiBkYXRhICE9PSAic3RyaW5nIiApIHsKCQlyZXR1cm4g
W107Cgl9CglpZiAoIHR5cGVvZiBjb250ZXh0ID09PSAiYm9vbGVhbiIgKSB7CgkJa2VlcFNjcmlw
dHMgPSBjb250ZXh0OwoJCWNvbnRleHQgPSBmYWxzZTsKCX0KCgl2YXIgYmFzZSwgcGFyc2VkLCBz
Y3JpcHRzOwoKCWlmICggIWNvbnRleHQgKSB7CgoJCS8vIFN0b3Agc2NyaXB0cyBvciBpbmxpbmUg
ZXZlbnQgaGFuZGxlcnMgZnJvbSBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseQoJCS8vIGJ5IHVz
aW5nIGRvY3VtZW50LmltcGxlbWVudGF0aW9uCgkJaWYgKCBzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1
bWVudCApIHsKCQkJY29udGV4dCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxE
b2N1bWVudCggIiIgKTsKCgkJCS8vIFNldCB0aGUgYmFzZSBocmVmIGZvciB0aGUgY3JlYXRlZCBk
b2N1bWVudAoJCQkvLyBzbyBhbnkgcGFyc2VkIGVsZW1lbnRzIHdpdGggVVJMcwoJCQkvLyBhcmUg
YmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KQoJCQliYXNlID0gY29udGV4dC5j
cmVhdGVFbGVtZW50KCAiYmFzZSIgKTsKCQkJYmFzZS5ocmVmID0gZG9jdW1lbnQubG9jYXRpb24u
aHJlZjsKCQkJY29udGV4dC5oZWFkLmFwcGVuZENoaWxkKCBiYXNlICk7CgkJfSBlbHNlIHsKCQkJ
Y29udGV4dCA9IGRvY3VtZW50OwoJCX0KCX0KCglwYXJzZWQgPSByc2luZ2xlVGFnLmV4ZWMoIGRh
dGEgKTsKCXNjcmlwdHMgPSAha2VlcFNjcmlwdHMgJiYgW107CgoJLy8gU2luZ2xlIHRhZwoJaWYg
KCBwYXJzZWQgKSB7CgkJcmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEg
XSApIF07Cgl9CgoJcGFyc2VkID0gYnVpbGRGcmFnbWVudCggWyBkYXRhIF0sIGNvbnRleHQsIHNj
cmlwdHMgKTsKCglpZiAoIHNjcmlwdHMgJiYgc2NyaXB0cy5sZW5ndGggKSB7CgkJalF1ZXJ5KCBz
Y3JpcHRzICkucmVtb3ZlKCk7Cgl9CgoJcmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIHBhcnNlZC5j
aGlsZE5vZGVzICk7Cn07CgoKLyoqCiAqIExvYWQgYSB1cmwgaW50byBhIHBhZ2UKICovCmpRdWVy
eS5mbi5sb2FkID0gZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFjayApIHsKCXZhciBzZWxl
Y3RvciwgdHlwZSwgcmVzcG9uc2UsCgkJc2VsZiA9IHRoaXMsCgkJb2ZmID0gdXJsLmluZGV4T2Yo
ICIgIiApOwoKCWlmICggb2ZmID4gLTEgKSB7CgkJc2VsZWN0b3IgPSBzdHJpcEFuZENvbGxhcHNl
KCB1cmwuc2xpY2UoIG9mZiApICk7CgkJdXJsID0gdXJsLnNsaWNlKCAwLCBvZmYgKTsKCX0KCgkv
LyBJZiBpdCdzIGEgZnVuY3Rpb24KCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHBhcmFtcyApICkg
ewoKCQkvLyBXZSBhc3N1bWUgdGhhdCBpdCdzIHRoZSBjYWxsYmFjawoJCWNhbGxiYWNrID0gcGFy
YW1zOwoJCXBhcmFtcyA9IHVuZGVmaW5lZDsKCgkvLyBPdGhlcndpc2UsIGJ1aWxkIGEgcGFyYW0g
c3RyaW5nCgl9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gIm9iamVjdCIg
KSB7CgkJdHlwZSA9ICJQT1NUIjsKCX0KCgkvLyBJZiB3ZSBoYXZlIGVsZW1lbnRzIHRvIG1vZGlm
eSwgbWFrZSB0aGUgcmVxdWVzdAoJaWYgKCBzZWxmLmxlbmd0aCA+IDAgKSB7CgkJalF1ZXJ5LmFq
YXgoIHsKCQkJdXJsOiB1cmwsCgoJCQkvLyBJZiAidHlwZSIgdmFyaWFibGUgaXMgdW5kZWZpbmVk
LCB0aGVuICJHRVQiIG1ldGhvZCB3aWxsIGJlIHVzZWQuCgkJCS8vIE1ha2UgdmFsdWUgb2YgdGhp
cyBmaWVsZCBleHBsaWNpdCBzaW5jZQoJCQkvLyB1c2VyIGNhbiBvdmVycmlkZSBpdCB0aHJvdWdo
IGFqYXhTZXR1cCBtZXRob2QKCQkJdHlwZTogdHlwZSB8fCAiR0VUIiwKCQkJZGF0YVR5cGU6ICJo
dG1sIiwKCQkJZGF0YTogcGFyYW1zCgkJfSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQg
KSB7CgoJCQkvLyBTYXZlIHJlc3BvbnNlIGZvciB1c2UgaW4gY29tcGxldGUgY2FsbGJhY2sKCQkJ
cmVzcG9uc2UgPSBhcmd1bWVudHM7CgoJCQlzZWxmLmh0bWwoIHNlbGVjdG9yID8KCgkJCQkvLyBJ
ZiBhIHNlbGVjdG9yIHdhcyBzcGVjaWZpZWQsIGxvY2F0ZSB0aGUgcmlnaHQgZWxlbWVudHMgaW4g
YSBkdW1teSBkaXYKCQkJCS8vIEV4Y2x1ZGUgc2NyaXB0cyB0byBhdm9pZCBJRSAnUGVybWlzc2lv
biBEZW5pZWQnIGVycm9ycwoJCQkJalF1ZXJ5KCAiPGRpdj4iICkuYXBwZW5kKCBqUXVlcnkucGFy
c2VIVE1MKCByZXNwb25zZVRleHQgKSApLmZpbmQoIHNlbGVjdG9yICkgOgoKCQkJCS8vIE90aGVy
d2lzZSB1c2UgdGhlIGZ1bGwgcmVzdWx0CgkJCQlyZXNwb25zZVRleHQgKTsKCgkJLy8gSWYgdGhl
IHJlcXVlc3Qgc3VjY2VlZHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyAiZGF0YSIsICJzdGF0dXMiLCAi
anFYSFIiCgkJLy8gYnV0IHRoZXkgYXJlIGlnbm9yZWQgYmVjYXVzZSByZXNwb25zZSB3YXMgc2V0
IGFib3ZlLgoJCS8vIElmIGl0IGZhaWxzLCB0aGlzIGZ1bmN0aW9uIGdldHMgImpxWEhSIiwgInN0
YXR1cyIsICJlcnJvciIKCQl9ICkuYWx3YXlzKCBjYWxsYmFjayAmJiBmdW5jdGlvbigganFYSFIs
IHN0YXR1cyApIHsKCQkJc2VsZi5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCWNhbGxiYWNrLmFwcGx5
KCB0aGlzLCByZXNwb25zZSB8fCBbIGpxWEhSLnJlc3BvbnNlVGV4dCwgc3RhdHVzLCBqcVhIUiBd
ICk7CgkJCX0gKTsKCQl9ICk7Cgl9CgoJcmV0dXJuIHRoaXM7Cn07CgoKCgovLyBBdHRhY2ggYSBi
dW5jaCBvZiBmdW5jdGlvbnMgZm9yIGhhbmRsaW5nIGNvbW1vbiBBSkFYIGV2ZW50cwpqUXVlcnku
ZWFjaCggWwoJImFqYXhTdGFydCIsCgkiYWpheFN0b3AiLAoJImFqYXhDb21wbGV0ZSIsCgkiYWph
eEVycm9yIiwKCSJhamF4U3VjY2VzcyIsCgkiYWpheFNlbmQiCl0sIGZ1bmN0aW9uKCBpLCB0eXBl
ICkgewoJalF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7CgkJcmV0dXJuIHRoaXMu
b24oIHR5cGUsIGZuICk7Cgl9Owp9ICk7CgoKCgpqUXVlcnkuZXhwci5wc2V1ZG9zLmFuaW1hdGVk
ID0gZnVuY3Rpb24oIGVsZW0gKSB7CglyZXR1cm4galF1ZXJ5LmdyZXAoIGpRdWVyeS50aW1lcnMs
IGZ1bmN0aW9uKCBmbiApIHsKCQlyZXR1cm4gZWxlbSA9PT0gZm4uZWxlbTsKCX0gKS5sZW5ndGg7
Cn07CgoKCgpqUXVlcnkub2Zmc2V0ID0gewoJc2V0T2Zmc2V0OiBmdW5jdGlvbiggZWxlbSwgb3B0
aW9ucywgaSApIHsKCQl2YXIgY3VyUG9zaXRpb24sIGN1ckxlZnQsIGN1ckNTU1RvcCwgY3VyVG9w
LCBjdXJPZmZzZXQsIGN1ckNTU0xlZnQsIGNhbGN1bGF0ZVBvc2l0aW9uLAoJCQlwb3NpdGlvbiA9
IGpRdWVyeS5jc3MoIGVsZW0sICJwb3NpdGlvbiIgKSwKCQkJY3VyRWxlbSA9IGpRdWVyeSggZWxl
bSApLAoJCQlwcm9wcyA9IHt9OwoKCQkvLyBTZXQgcG9zaXRpb24gZmlyc3QsIGluLWNhc2UgdG9w
L2xlZnQgYXJlIHNldCBldmVuIG9uIHN0YXRpYyBlbGVtCgkJaWYgKCBwb3NpdGlvbiA9PT0gInN0
YXRpYyIgKSB7CgkJCWVsZW0uc3R5bGUucG9zaXRpb24gPSAicmVsYXRpdmUiOwoJCX0KCgkJY3Vy
T2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTsKCQljdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVt
LCAidG9wIiApOwoJCWN1ckNTU0xlZnQgPSBqUXVlcnkuY3NzKCBlbGVtLCAibGVmdCIgKTsKCQlj
YWxjdWxhdGVQb3NpdGlvbiA9ICggcG9zaXRpb24gPT09ICJhYnNvbHV0ZSIgfHwgcG9zaXRpb24g
PT09ICJmaXhlZCIgKSAmJgoJCQkoIGN1ckNTU1RvcCArIGN1ckNTU0xlZnQgKS5pbmRleE9mKCAi
YXV0byIgKSA+IC0xOwoKCQkvLyBOZWVkIHRvIGJlIGFibGUgdG8gY2FsY3VsYXRlIHBvc2l0aW9u
IGlmIGVpdGhlcgoJCS8vIHRvcCBvciBsZWZ0IGlzIGF1dG8gYW5kIHBvc2l0aW9uIGlzIGVpdGhl
ciBhYnNvbHV0ZSBvciBmaXhlZAoJCWlmICggY2FsY3VsYXRlUG9zaXRpb24gKSB7CgkJCWN1clBv
c2l0aW9uID0gY3VyRWxlbS5wb3NpdGlvbigpOwoJCQljdXJUb3AgPSBjdXJQb3NpdGlvbi50b3A7
CgkJCWN1ckxlZnQgPSBjdXJQb3NpdGlvbi5sZWZ0OwoKCQl9IGVsc2UgewoJCQljdXJUb3AgPSBw
YXJzZUZsb2F0KCBjdXJDU1NUb3AgKSB8fCAwOwoJCQljdXJMZWZ0ID0gcGFyc2VGbG9hdCggY3Vy
Q1NTTGVmdCApIHx8IDA7CgkJfQoKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBvcHRpb25zICkg
KSB7CgoJCQkvLyBVc2UgalF1ZXJ5LmV4dGVuZCBoZXJlIHRvIGFsbG93IG1vZGlmaWNhdGlvbiBv
ZiBjb29yZGluYXRlcyBhcmd1bWVudCAoZ2gtMTg0OCkKCQkJb3B0aW9ucyA9IG9wdGlvbnMuY2Fs
bCggZWxlbSwgaSwgalF1ZXJ5LmV4dGVuZCgge30sIGN1ck9mZnNldCApICk7CgkJfQoKCQlpZiAo
IG9wdGlvbnMudG9wICE9IG51bGwgKSB7CgkJCXByb3BzLnRvcCA9ICggb3B0aW9ucy50b3AgLSBj
dXJPZmZzZXQudG9wICkgKyBjdXJUb3A7CgkJfQoJCWlmICggb3B0aW9ucy5sZWZ0ICE9IG51bGwg
KSB7CgkJCXByb3BzLmxlZnQgPSAoIG9wdGlvbnMubGVmdCAtIGN1ck9mZnNldC5sZWZ0ICkgKyBj
dXJMZWZ0OwoJCX0KCgkJaWYgKCAidXNpbmciIGluIG9wdGlvbnMgKSB7CgkJCW9wdGlvbnMudXNp
bmcuY2FsbCggZWxlbSwgcHJvcHMgKTsKCgkJfSBlbHNlIHsKCQkJY3VyRWxlbS5jc3MoIHByb3Bz
ICk7CgkJfQoJfQp9OwoKalF1ZXJ5LmZuLmV4dGVuZCggewoJb2Zmc2V0OiBmdW5jdGlvbiggb3B0
aW9ucyApIHsKCgkJLy8gUHJlc2VydmUgY2hhaW5pbmcgZm9yIHNldHRlcgoJCWlmICggYXJndW1l
bnRzLmxlbmd0aCApIHsKCQkJcmV0dXJuIG9wdGlvbnMgPT09IHVuZGVmaW5lZCA/CgkJCQl0aGlz
IDoKCQkJCXRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7CgkJCQkJalF1ZXJ5Lm9mZnNldC5zZXRP
ZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTsKCQkJCX0gKTsKCQl9CgoJCXZhciBkb2MsIGRvY0Vs
ZW0sIHJlY3QsIHdpbiwKCQkJZWxlbSA9IHRoaXNbIDAgXTsKCgkJaWYgKCAhZWxlbSApIHsKCQkJ
cmV0dXJuOwoJCX0KCgkJLy8gUmV0dXJuIHplcm9zIGZvciBkaXNjb25uZWN0ZWQgYW5kIGhpZGRl
biAoZGlzcGxheTogbm9uZSkgZWxlbWVudHMgKGdoLTIzMTApCgkJLy8gU3VwcG9ydDogSUUgPD0x
MSBvbmx5CgkJLy8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYQoJCS8vIGRpc2Nv
bm5lY3RlZCBub2RlIGluIElFIHRocm93cyBhbiBlcnJvcgoJCWlmICggIWVsZW0uZ2V0Q2xpZW50
UmVjdHMoKS5sZW5ndGggKSB7CgkJCXJldHVybiB7IHRvcDogMCwgbGVmdDogMCB9OwoJCX0KCgkJ
cmVjdCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CgoJCWRvYyA9IGVsZW0ub3duZXJE
b2N1bWVudDsKCQlkb2NFbGVtID0gZG9jLmRvY3VtZW50RWxlbWVudDsKCQl3aW4gPSBkb2MuZGVm
YXVsdFZpZXc7CgoJCXJldHVybiB7CgkJCXRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQg
LSBkb2NFbGVtLmNsaWVudFRvcCwKCQkJbGVmdDogcmVjdC5sZWZ0ICsgd2luLnBhZ2VYT2Zmc2V0
IC0gZG9jRWxlbS5jbGllbnRMZWZ0CgkJfTsKCX0sCgoJcG9zaXRpb246IGZ1bmN0aW9uKCkgewoJ
CWlmICggIXRoaXNbIDAgXSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdmFyIG9mZnNldFBhcmVudCwg
b2Zmc2V0LAoJCQllbGVtID0gdGhpc1sgMCBdLAoJCQlwYXJlbnRPZmZzZXQgPSB7IHRvcDogMCwg
bGVmdDogMCB9OwoKCQkvLyBGaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gd2luZG93IChw
YXJlbnRPZmZzZXQgPSB7dG9wOjAsIGxlZnQ6IDB9LAoJCS8vIGJlY2F1c2UgaXQgaXMgaXRzIG9u
bHkgb2Zmc2V0IHBhcmVudAoJCWlmICggalF1ZXJ5LmNzcyggZWxlbSwgInBvc2l0aW9uIiApID09
PSAiZml4ZWQiICkgewoKCQkJLy8gQXNzdW1lIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBpcyB0aGVy
ZSB3aGVuIGNvbXB1dGVkIHBvc2l0aW9uIGlzIGZpeGVkCgkJCW9mZnNldCA9IGVsZW0uZ2V0Qm91
bmRpbmdDbGllbnRSZWN0KCk7CgoJCX0gZWxzZSB7CgoJCQkvLyBHZXQgKnJlYWwqIG9mZnNldFBh
cmVudAoJCQlvZmZzZXRQYXJlbnQgPSB0aGlzLm9mZnNldFBhcmVudCgpOwoKCQkJLy8gR2V0IGNv
cnJlY3Qgb2Zmc2V0cwoJCQlvZmZzZXQgPSB0aGlzLm9mZnNldCgpOwoJCQlpZiAoICFub2RlTmFt
ZSggb2Zmc2V0UGFyZW50WyAwIF0sICJodG1sIiApICkgewoJCQkJcGFyZW50T2Zmc2V0ID0gb2Zm
c2V0UGFyZW50Lm9mZnNldCgpOwoJCQl9CgoJCQkvLyBBZGQgb2Zmc2V0UGFyZW50IGJvcmRlcnMK
CQkJcGFyZW50T2Zmc2V0ID0gewoJCQkJdG9wOiBwYXJlbnRPZmZzZXQudG9wICsgalF1ZXJ5LmNz
cyggb2Zmc2V0UGFyZW50WyAwIF0sICJib3JkZXJUb3BXaWR0aCIsIHRydWUgKSwKCQkJCWxlZnQ6
IHBhcmVudE9mZnNldC5sZWZ0ICsgalF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50WyAwIF0sICJib3Jk
ZXJMZWZ0V2lkdGgiLCB0cnVlICkKCQkJfTsKCQl9CgoJCS8vIFN1YnRyYWN0IHBhcmVudCBvZmZz
ZXRzIGFuZCBlbGVtZW50IG1hcmdpbnMKCQlyZXR1cm4gewoJCQl0b3A6IG9mZnNldC50b3AgLSBw
YXJlbnRPZmZzZXQudG9wIC0galF1ZXJ5LmNzcyggZWxlbSwgIm1hcmdpblRvcCIsIHRydWUgKSwK
CQkJbGVmdDogb2Zmc2V0LmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdCAtIGpRdWVyeS5jc3MoIGVs
ZW0sICJtYXJnaW5MZWZ0IiwgdHJ1ZSApCgkJfTsKCX0sCgoJLy8gVGhpcyBtZXRob2Qgd2lsbCBy
ZXR1cm4gZG9jdW1lbnRFbGVtZW50IGluIHRoZSBmb2xsb3dpbmcgY2FzZXM6CgkvLyAxKSBGb3Ig
dGhlIGVsZW1lbnQgaW5zaWRlIHRoZSBpZnJhbWUgd2l0aG91dCBvZmZzZXRQYXJlbnQsIHRoaXMg
bWV0aG9kIHdpbGwgcmV0dXJuCgkvLyAgICBkb2N1bWVudEVsZW1lbnQgb2YgdGhlIHBhcmVudCB3
aW5kb3cKCS8vIDIpIEZvciB0aGUgaGlkZGVuIG9yIGRldGFjaGVkIGVsZW1lbnQKCS8vIDMpIEZv
ciBib2R5IG9yIGh0bWwgZWxlbWVudCwgaS5lLiBpbiBjYXNlIG9mIHRoZSBodG1sIG5vZGUgLSBp
dCB3aWxsIHJldHVybiBpdHNlbGYKCS8vCgkvLyBidXQgdGhvc2UgZXhjZXB0aW9ucyB3ZXJlIG5l
dmVyIHByZXNlbnRlZCBhcyBhIHJlYWwgbGlmZSB1c2UtY2FzZXMKCS8vIGFuZCBtaWdodCBiZSBj
b25zaWRlcmVkIGFzIG1vcmUgcHJlZmVyYWJsZSByZXN1bHRzLgoJLy8KCS8vIFRoaXMgbG9naWMs
IGhvd2V2ZXIsIGlzIG5vdCBndWFyYW50ZWVkIGFuZCBjYW4gY2hhbmdlIGF0IGFueSBwb2ludCBp
biB0aGUgZnV0dXJlCglvZmZzZXRQYXJlbnQ6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLm1h
cCggZnVuY3Rpb24oKSB7CgkJCXZhciBvZmZzZXRQYXJlbnQgPSB0aGlzLm9mZnNldFBhcmVudDsK
CgkJCXdoaWxlICggb2Zmc2V0UGFyZW50ICYmIGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgInBv
c2l0aW9uIiApID09PSAic3RhdGljIiApIHsKCQkJCW9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVu
dC5vZmZzZXRQYXJlbnQ7CgkJCX0KCgkJCXJldHVybiBvZmZzZXRQYXJlbnQgfHwgZG9jdW1lbnRF
bGVtZW50OwoJCX0gKTsKCX0KfSApOwoKLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRv
cCBtZXRob2RzCmpRdWVyeS5lYWNoKCB7IHNjcm9sbExlZnQ6ICJwYWdlWE9mZnNldCIsIHNjcm9s
bFRvcDogInBhZ2VZT2Zmc2V0IiB9LCBmdW5jdGlvbiggbWV0aG9kLCBwcm9wICkgewoJdmFyIHRv
cCA9ICJwYWdlWU9mZnNldCIgPT09IHByb3A7CgoJalF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0
aW9uKCB2YWwgKSB7CgkJcmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG1ldGhv
ZCwgdmFsICkgewoKCQkJLy8gQ29hbGVzY2UgZG9jdW1lbnRzIGFuZCB3aW5kb3dzCgkJCXZhciB3
aW47CgkJCWlmICggalF1ZXJ5LmlzV2luZG93KCBlbGVtICkgKSB7CgkJCQl3aW4gPSBlbGVtOwoJ
CQl9IGVsc2UgaWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkgewoJCQkJd2luID0gZWxlbS5kZWZh
dWx0VmlldzsKCQkJfQoKCQkJaWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiB3
aW4gPyB3aW5bIHByb3AgXSA6IGVsZW1bIG1ldGhvZCBdOwoJCQl9CgoJCQlpZiAoIHdpbiApIHsK
CQkJCXdpbi5zY3JvbGxUbygKCQkJCQkhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LAoJCQkJ
CXRvcCA/IHZhbCA6IHdpbi5wYWdlWU9mZnNldAoJCQkJKTsKCgkJCX0gZWxzZSB7CgkJCQllbGVt
WyBtZXRob2QgXSA9IHZhbDsKCQkJfQoJCX0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3Ro
ICk7Cgl9Owp9ICk7CgovLyBTdXBwb3J0OiBTYWZhcmkgPD03IC0gOS4xLCBDaHJvbWUgPD0zNyAt
IDQ5Ci8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9u
Ci8vIFdlYmtpdCBidWc6IGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0y
OTA4NAovLyBCbGluayBidWc6IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9p
c3N1ZXMvZGV0YWlsP2lkPTU4OTM0NwovLyBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgcGVyY2Vu
dCB3aGVuIHNwZWNpZmllZCBmb3IgdG9wL2xlZnQvYm90dG9tL3JpZ2h0OwovLyByYXRoZXIgdGhh
biBtYWtlIHRoZSBjc3MgbW9kdWxlIGRlcGVuZCBvbiB0aGUgb2Zmc2V0IG1vZHVsZSwganVzdCBj
aGVjayBmb3IgaXQgaGVyZQpqUXVlcnkuZWFjaCggWyAidG9wIiwgImxlZnQiIF0sIGZ1bmN0aW9u
KCBpLCBwcm9wICkgewoJalF1ZXJ5LmNzc0hvb2tzWyBwcm9wIF0gPSBhZGRHZXRIb29rSWYoIHN1
cHBvcnQucGl4ZWxQb3NpdGlvbiwKCQlmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7CgkJCWlm
ICggY29tcHV0ZWQgKSB7CgkJCQljb21wdXRlZCA9IGN1ckNTUyggZWxlbSwgcHJvcCApOwoKCQkJ
CS8vIElmIGN1ckNTUyByZXR1cm5zIHBlcmNlbnRhZ2UsIGZhbGxiYWNrIHRvIG9mZnNldAoJCQkJ
cmV0dXJuIHJudW1ub25weC50ZXN0KCBjb21wdXRlZCApID8KCQkJCQlqUXVlcnkoIGVsZW0gKS5w
b3NpdGlvbigpWyBwcm9wIF0gKyAicHgiIDoKCQkJCQljb21wdXRlZDsKCQkJfQoJCX0KCSk7Cn0g
KTsKCgovLyBDcmVhdGUgaW5uZXJIZWlnaHQsIGlubmVyV2lkdGgsIGhlaWdodCwgd2lkdGgsIG91
dGVySGVpZ2h0IGFuZCBvdXRlcldpZHRoIG1ldGhvZHMKalF1ZXJ5LmVhY2goIHsgSGVpZ2h0OiAi
aGVpZ2h0IiwgV2lkdGg6ICJ3aWR0aCIgfSwgZnVuY3Rpb24oIG5hbWUsIHR5cGUgKSB7CglqUXVl
cnkuZWFjaCggeyBwYWRkaW5nOiAiaW5uZXIiICsgbmFtZSwgY29udGVudDogdHlwZSwgIiI6ICJv
dXRlciIgKyBuYW1lIH0sCgkJZnVuY3Rpb24oIGRlZmF1bHRFeHRyYSwgZnVuY05hbWUgKSB7CgoJ
CS8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aAoJCWpRdWVyeS5m
blsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkgewoJCQl2YXIgY2hhaW5h
YmxlID0gYXJndW1lbnRzLmxlbmd0aCAmJiAoIGRlZmF1bHRFeHRyYSB8fCB0eXBlb2YgbWFyZ2lu
ICE9PSAiYm9vbGVhbiIgKSwKCQkJCWV4dHJhID0gZGVmYXVsdEV4dHJhIHx8ICggbWFyZ2luID09
PSB0cnVlIHx8IHZhbHVlID09PSB0cnVlID8gIm1hcmdpbiIgOiAiYm9yZGVyIiApOwoKCQkJcmV0
dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIHR5cGUsIHZhbHVlICkgewoJCQkJdmFy
IGRvYzsKCgkJCQlpZiAoIGpRdWVyeS5pc1dpbmRvdyggZWxlbSApICkgewoKCQkJCQkvLyAkKCB3
aW5kb3cgKS5vdXRlcldpZHRoL0hlaWdodCByZXR1cm4gdy9oIGluY2x1ZGluZyBzY3JvbGxiYXJz
IChnaC0xNzI5KQoJCQkJCXJldHVybiBmdW5jTmFtZS5pbmRleE9mKCAib3V0ZXIiICkgPT09IDAg
PwoJCQkJCQllbGVtWyAiaW5uZXIiICsgbmFtZSBdIDoKCQkJCQkJZWxlbS5kb2N1bWVudC5kb2N1
bWVudEVsZW1lbnRbICJjbGllbnQiICsgbmFtZSBdOwoJCQkJfQoKCQkJCS8vIEdldCBkb2N1bWVu
dCB3aWR0aCBvciBoZWlnaHQKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gOSApIHsKCQkJCQlk
b2MgPSBlbGVtLmRvY3VtZW50RWxlbWVudDsKCgkJCQkJLy8gRWl0aGVyIHNjcm9sbFtXaWR0aC9I
ZWlnaHRdIG9yIG9mZnNldFtXaWR0aC9IZWlnaHRdIG9yIGNsaWVudFtXaWR0aC9IZWlnaHRdLAoJ
CQkJCS8vIHdoaWNoZXZlciBpcyBncmVhdGVzdAoJCQkJCXJldHVybiBNYXRoLm1heCgKCQkJCQkJ
ZWxlbS5ib2R5WyAic2Nyb2xsIiArIG5hbWUgXSwgZG9jWyAic2Nyb2xsIiArIG5hbWUgXSwKCQkJ
CQkJZWxlbS5ib2R5WyAib2Zmc2V0IiArIG5hbWUgXSwgZG9jWyAib2Zmc2V0IiArIG5hbWUgXSwK
CQkJCQkJZG9jWyAiY2xpZW50IiArIG5hbWUgXQoJCQkJCSk7CgkJCQl9CgoJCQkJcmV0dXJuIHZh
bHVlID09PSB1bmRlZmluZWQgPwoKCQkJCQkvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBl
bGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0CgkJCQkJalF1ZXJ5
LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6CgoJCQkJCS8vIFNldCB3aWR0aCBvciBoZWlnaHQg
b24gdGhlIGVsZW1lbnQKCQkJCQlqUXVlcnkuc3R5bGUoIGVsZW0sIHR5cGUsIHZhbHVlLCBleHRy
YSApOwoJCQl9LCB0eXBlLCBjaGFpbmFibGUgPyBtYXJnaW4gOiB1bmRlZmluZWQsIGNoYWluYWJs
ZSApOwoJCX07Cgl9ICk7Cn0gKTsKCgpqUXVlcnkuZm4uZXh0ZW5kKCB7CgoJYmluZDogZnVuY3Rp
b24oIHR5cGVzLCBkYXRhLCBmbiApIHsKCQlyZXR1cm4gdGhpcy5vbiggdHlwZXMsIG51bGwsIGRh
dGEsIGZuICk7Cgl9LAoJdW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkgewoJCXJldHVybiB0
aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7Cgl9LAoKCWRlbGVnYXRlOiBmdW5jdGlvbiggc2Vs
ZWN0b3IsIHR5cGVzLCBkYXRhLCBmbiApIHsKCQlyZXR1cm4gdGhpcy5vbiggdHlwZXMsIHNlbGVj
dG9yLCBkYXRhLCBmbiApOwoJfSwKCXVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlw
ZXMsIGZuICkgewoKCQkvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZu
XSApCgkJcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPwoJCQl0aGlzLm9mZiggc2VsZWN0
b3IsICIqKiIgKSA6CgkJCXRoaXMub2ZmKCB0eXBlcywgc2VsZWN0b3IgfHwgIioqIiwgZm4gKTsK
CX0KfSApOwoKalF1ZXJ5LmhvbGRSZWFkeSA9IGZ1bmN0aW9uKCBob2xkICkgewoJaWYgKCBob2xk
ICkgewoJCWpRdWVyeS5yZWFkeVdhaXQrKzsKCX0gZWxzZSB7CgkJalF1ZXJ5LnJlYWR5KCB0cnVl
ICk7Cgl9Cn07CmpRdWVyeS5pc0FycmF5ID0gQXJyYXkuaXNBcnJheTsKalF1ZXJ5LnBhcnNlSlNP
TiA9IEpTT04ucGFyc2U7CmpRdWVyeS5ub2RlTmFtZSA9IG5vZGVOYW1lOwoKCgoKLy8gUmVnaXN0
ZXIgYXMgYSBuYW1lZCBBTUQgbW9kdWxlLCBzaW5jZSBqUXVlcnkgY2FuIGJlIGNvbmNhdGVuYXRl
ZCB3aXRoIG90aGVyCi8vIGZpbGVzIHRoYXQgbWF5IHVzZSBkZWZpbmUsIGJ1dCBub3QgdmlhIGEg
cHJvcGVyIGNvbmNhdGVuYXRpb24gc2NyaXB0IHRoYXQKLy8gdW5kZXJzdGFuZHMgYW5vbnltb3Vz
IEFNRCBtb2R1bGVzLiBBIG5hbWVkIEFNRCBpcyBzYWZlc3QgYW5kIG1vc3Qgcm9idXN0Ci8vIHdh
eSB0byByZWdpc3Rlci4gTG93ZXJjYXNlIGpxdWVyeSBpcyB1c2VkIGJlY2F1c2UgQU1EIG1vZHVs
ZSBuYW1lcyBhcmUKLy8gZGVyaXZlZCBmcm9tIGZpbGUgbmFtZXMsIGFuZCBqUXVlcnkgaXMgbm9y
bWFsbHkgZGVsaXZlcmVkIGluIGEgbG93ZXJjYXNlCi8vIGZpbGUgbmFtZS4gRG8gdGhpcyBhZnRl
ciBjcmVhdGluZyB0aGUgZ2xvYmFsIHNvIHRoYXQgaWYgYW4gQU1EIG1vZHVsZSB3YW50cwovLyB0
byBjYWxsIG5vQ29uZmxpY3QgdG8gaGlkZSB0aGlzIHZlcnNpb24gb2YgalF1ZXJ5LCBpdCB3aWxs
IHdvcmsuCgovLyBOb3RlIHRoYXQgZm9yIG1heGltdW0gcG9ydGFiaWxpdHksIGxpYnJhcmllcyB0
aGF0IGFyZSBub3QgalF1ZXJ5IHNob3VsZAovLyBkZWNsYXJlIHRoZW1zZWx2ZXMgYXMgYW5vbnlt
b3VzIG1vZHVsZXMsIGFuZCBhdm9pZCBzZXR0aW5nIGEgZ2xvYmFsIGlmIGFuCi8vIEFNRCBsb2Fk
ZXIgaXMgcHJlc2VudC4galF1ZXJ5IGlzIGEgc3BlY2lhbCBjYXNlLiBGb3IgbW9yZSBpbmZvcm1h
dGlvbiwgc2VlCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcmJ1cmtlL3JlcXVpcmVqcy93aWtpL1Vw
ZGF0aW5nLWV4aXN0aW5nLWxpYnJhcmllcyN3aWtpLWFub24KCmlmICggdHlwZW9mIGRlZmluZSA9
PT0gImZ1bmN0aW9uIiAmJiBkZWZpbmUuYW1kICkgewoJZGVmaW5lKCAianF1ZXJ5IiwgW10sIGZ1
bmN0aW9uKCkgewoJCXJldHVybiBqUXVlcnk7Cgl9ICk7Cn0KCgoKCnZhcgoKCS8vIE1hcCBvdmVy
IGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZQoJX2pRdWVyeSA9IHdpbmRvdy5qUXVlcnksCgoJ
Ly8gTWFwIG92ZXIgdGhlICQgaW4gY2FzZSBvZiBvdmVyd3JpdGUKCV8kID0gd2luZG93LiQ7Cgpq
UXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkgewoJaWYgKCB3aW5kb3cuJCA9PT0g
alF1ZXJ5ICkgewoJCXdpbmRvdy4kID0gXyQ7Cgl9CgoJaWYgKCBkZWVwICYmIHdpbmRvdy5qUXVl
cnkgPT09IGpRdWVyeSApIHsKCQl3aW5kb3cualF1ZXJ5ID0gX2pRdWVyeTsKCX0KCglyZXR1cm4g
alF1ZXJ5Owp9OwoKLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBB
TUQKLy8gKCM3MTAyI2NvbW1lbnQ6MTAsIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5
L3B1bGwvNTU3KQovLyBhbmQgQ29tbW9uSlMgZm9yIGJyb3dzZXIgZW11bGF0b3JzICgjMTM1NjYp
CmlmICggIW5vR2xvYmFsICkgewoJd2luZG93LmpRdWVyeSA9IHdpbmRvdy4kID0galF1ZXJ5Owp9
CgoKCgpyZXR1cm4galF1ZXJ5Owp9ICk7Cg==
----field----
field: {C06867FE-9A43-4C7D-B739-48780492D06F}
name: Extension
key: extension
content-length: 2

js
----field----
field: {6F47A0A5-9C94-4B48-ABEB-42D38DEF6054}
name: Mime Type
key: mime type
content-length: 24

application/x-javascript
----field----
field: {6954B7C7-2487-423F-8600-436CB3B6DC0E}
name: Size
key: size
content-length: 6

268039
----field----
field: {06D5295C-ED2F-4A54-9BF2-26228D113318}
name: __Icon
key: __icon
content-length: 61

-/media/476A712AA047464A9CDD54EC6461F927.ashx?h=16&thn=1&w=16
----field----
field: {BA3F86A2-4A1C-4D78-B63D-91C2779C1B5E}
name: __Sortorder
key: __sortorder
content-length: 1

0
----version----
language: de-DE
version: 1
revision: 2aae246f-e88d-402f-9166-c82c5f85443f

----field----
field: {52807595-0F8F-4B20-8D2A-CB71D28C6103}
name: __Owner
key: __owner
content-length: 14

sitecore\admin
----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 16

20171120T053115Z
----field----
field: {5DD74568-4D4B-44C1-B513-0AF5F4CDA34F}
name: __Created by
key: __created by
content-length: 14

sitecore\admin
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

2aae246f-e88d-402f-9166-c82c5f85443f
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 16

20171120T053115Z
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
----version----
language: en
version: 1
revision: 02856c32-8ba7-486d-8b51-a34c09f2976b

----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 16

20171120T053115Z
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

02856c32-8ba7-486d-8b51-a34c09f2976b
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 16

20171120T060638Z
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
----version----
language: fr-FR
version: 1
revision: 08ad89bb-70a0-42e1-9e1e-0ee4f4126b32

----field----
field: {52807595-0F8F-4B20-8D2A-CB71D28C6103}
name: __Owner
key: __owner
content-length: 14

sitecore\admin
----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 16

20171120T053115Z
----field----
field: {5DD74568-4D4B-44C1-B513-0AF5F4CDA34F}
name: __Created by
key: __created by
content-length: 14

sitecore\admin
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

08ad89bb-70a0-42e1-9e1e-0ee4f4126b32
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 16

20171120T053115Z
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
----version----
language: ja-JP
version: 1
revision: 916e5e16-90ce-4ac6-9388-7e94df89f51e

----field----
field: {52807595-0F8F-4B20-8D2A-CB71D28C6103}
name: __Owner
key: __owner
content-length: 14

sitecore\admin
----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 16

20171120T053115Z
----field----
field: {5DD74568-4D4B-44C1-B513-0AF5F4CDA34F}
name: __Created by
key: __created by
content-length: 14

sitecore\admin
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

916e5e16-90ce-4ac6-9388-7e94df89f51e
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 16

20171120T053115Z
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
