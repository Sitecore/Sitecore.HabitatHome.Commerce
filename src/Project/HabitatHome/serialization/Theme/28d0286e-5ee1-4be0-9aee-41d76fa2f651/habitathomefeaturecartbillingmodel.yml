---
ID: "66672750-aeb8-4186-bf93-f05fd29a0c21"
Parent: "28d0286e-5ee1-4be0-9aee-41d76fa2f651"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Themes/Habitat Sites/Habitat Home Store/scripts/components/Cart/habitathomefeaturecartbillingmodel
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/66672750AEB84186BF93F05FD29A0C21.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "7baea1ea-b280-4742-b729-3562af864c9f"
  Value: 77u/dmFyIG11c3RFcXVhbCA9IGZ1bmN0aW9uICh2YWwsIG90aGVyKSB7DQoNCiAgICBpZiAodmFsKSB7DQogICAgICAgIHJldHVybiB2YWwgPT09IG90aGVyOw0KICAgIH0NCg0KICAgIHJldHVybiB0cnVlOw0KfTsNCg0KLy8gLS0tLS1bR0lGVCBDQVJEIFBBWU1FTlQgTU9ERUxdLS0tLS0NCmZ1bmN0aW9uIEdpZnRDYXJkUGF5bWVudFZpZXdNb2RlbChiaWxsaW5nVmlld01vZGVsLCBjYXJkKSB7DQogICAgdmFyIHNlbGYgPSB0aGlzOw0KICAgIHZhciBwb3B1bGF0ZSA9IGNhcmQgIT0gbnVsbDsNCg0KICAgIHNlbGYuYmlsbGluZ1ZpZXdNb2RlbCA9IGJpbGxpbmdWaWV3TW9kZWw7DQoNCiAgICBzZWxmLmlzQWRkZWQgPSBrby5vYnNlcnZhYmxlKGZhbHNlKTsNCiAgICBzZWxmLmJhbGFuY2UgPSBrby5vYnNlcnZhYmxlKDApOw0KICAgIHNlbGYuZm9ybWF0dGVkQmFsYW5jZSA9IGtvLm9ic2VydmFibGUoIiIpOw0KICAgIHNlbGYuZW5hYmxlQWRkQ2FyZCA9IGtvLm9ic2VydmFibGUoZmFsc2UpOw0KDQogICAgc2VsZi5naWZ0Q2FyZE51bWJlciA9IHBvcHVsYXRlID8ga28udmFsaWRhdGVkT2JzZXJ2YWJsZShjYXJkLlBheW1lbnRNZXRob2RJRCkuZXh0ZW5kKHsgcmVxdWlyZWQ6IHRydWUgfSkgOiBrby52YWxpZGF0ZWRPYnNlcnZhYmxlKCIiKS5leHRlbmQoeyByZXF1aXJlZDogdHJ1ZSB9KTsNCiAgICBzZWxmLmdpZnRDYXJkTnVtYmVyLnN1YnNjcmliZShmdW5jdGlvbiAoY24pIHsNCiAgICAgICAgc2VsZi5iYWxhbmNlKDApOw0KICAgICAgICBzZWxmLmZvcm1hdHRlZEJhbGFuY2UoIiIpOw0KDQogICAgICAgIHNlbGYucmVFbmFibGVBZGRDYXJkKCk7DQogICAgICAgIC8vc2VsZi5lbmFibGVBZGRDYXJkKGNuLmxlbmd0aCA+IDAgJiYgc2VsZi5naWZ0Q2FyZEFtb3VudCgpLmxlbmd0aCA+IDAgJiYgc2VsZi5pc0FkZGVkKCkgPT09IGZhbHNlKTsNCiAgICB9LmJpbmQodGhpcykpOw0KDQogICAgc2VsZi5yZWxvYWQgPSBmdW5jdGlvbiAoZGF0YSkgew0KICAgICAgICBzZWxmLmdpZnRDYXJkTnVtYmVyKGRhdGEuRXh0ZXJuYWxJZCk7DQogICAgICAgIHNlbGYuZm9ybWF0dGVkQmFsYW5jZShkYXRhLkZvcm1hdHRlZEJhbGFuY2UpOw0KICAgICAgICBzZWxmLmJhbGFuY2UoZGF0YS5CYWxhbmNlKTsNCiAgICAgICAgLy9zZWxmLmVuYWJsZUFkZENhcmQoZmFsc2UpOw0KICAgICAgICBzZWxmLnJlRW5hYmxlQWRkQ2FyZCgpOw0KICAgIH0NCg0KICAgIHNlbGYucmVFbmFibGVBZGRDYXJkID0gZnVuY3Rpb24gKGNhKSB7DQogICAgICAgIGlmICghY2EpIHsNCiAgICAgICAgICAgIGNhID0gc2VsZi5naWZ0Q2FyZEFtb3VudCgpOw0KICAgICAgICB9DQoNCiAgICAgICAgc2VsZi5lbmFibGVBZGRDYXJkKGNhLmxlbmd0aCA+IDAgJiYgc2VsZi5naWZ0Q2FyZE51bWJlcigpLmxlbmd0aCA+IDAgJiYgc2VsZi5pc0FkZGVkKCkgPT09IGZhbHNlICYmIHNlbGYuZ2lmdENhcmRBbW91bnQuaXNWYWxpZCgpICYmIHNlbGYuYmFsYW5jZSgpID4gMCk7DQogICAgfQ0KDQogICAgc2VsZi5nZXRCYWxhbmNlID0gZnVuY3Rpb24gKCkgew0KICAgICAgICBNZXNzYWdlQ29udGV4dC5DbGVhckFsbE1lc3NhZ2VzKCk7DQogICAgICAgIHZhciAkYnRuID0gJCgnLmdpdC1jYXJkLXBheW1lbnQtZ2V0LWJhbGFuY2UtYnRuJykuYnV0dG9uKCdsb2FkaW5nJyk7DQogICAgICAgIHZhciBkYXRhID0ge307DQogICAgICAgIGRhdGEuR2lmdENhcmRJZCA9IHNlbGYuZ2lmdENhcmROdW1iZXIoKTsNCiAgICAgICAgQWpheFNlcnZpY2UuUG9zdCgnL2FwaS9jeGEvY2hlY2tvdXQvZ2V0Z2lmdGNhcmRiYWxhbmNlJywgZGF0YSwgZnVuY3Rpb24gKGRhdGEsIHN1Y2Nlc3MsIHNlbmRlcikgew0KICAgICAgICAgICAgaWYgKHN1Y2Nlc3MgJiYgZGF0YS5TdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgc2VsZi5yZWxvYWQoZGF0YSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICQoJy5naXQtY2FyZC1wYXltZW50LWdldC1iYWxhbmNlLWJ0bicpLmJ1dHRvbigncmVzZXQnKTsNCiAgICAgICAgfSwgdGhpcyk7DQogICAgfTsNCg0KICAgIHNlbGYuYXBwbHlCYWxhbmNlID0gZnVuY3Rpb24gKCkgew0KICAgICAgICBNZXNzYWdlQ29udGV4dC5DbGVhckFsbE1lc3NhZ2VzKCk7DQogICAgICAgIHZhciBiYWxhbmNlID0gc2VsZi5iYWxhbmNlKCk7DQogICAgICAgIGlmIChiYWxhbmNlIDw9IDApIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KDQogICAgICAgIHZhciBvcmRlclRvdGFsID0gc2VsZi5iaWxsaW5nVmlld01vZGVsLmNhcnQoKS50b3RhbEFtb3VudCgpOw0KICAgICAgICBpZiAoYmFsYW5jZSA+IG9yZGVyVG90YWwpIHsNCiAgICAgICAgICAgIHNlbGYuZ2lmdENhcmRBbW91bnRSYXdWYWx1ZShvcmRlclRvdGFsKTsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIGlmIChiYWxhbmNlIDw9IG9yZGVyVG90YWwpIHsNCiAgICAgICAgICAgIHNlbGYuZ2lmdENhcmRBbW91bnRSYXdWYWx1ZShiYWxhbmNlKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHNlbGYuZW5hYmxlQWRkQ2FyZCh0cnVlKTsNCiAgICB9Ow0KDQogICAgc2VsZi5hZGRDYXJkID0gZnVuY3Rpb24gKCkgew0KICAgICAgICBNZXNzYWdlQ29udGV4dC5DbGVhckFsbE1lc3NhZ2VzKCk7DQogICAgICAgIHNlbGYuaXNBZGRlZCh0cnVlKTsNCiAgICAgICAgc2VsZi5lbmFibGVBZGRDYXJkKGZhbHNlKTsNCiAgICAgICAgc2VsZi5yZXZhbHVlQW1vdW50cygpOw0KICAgIH07DQoNCiAgICBzZWxmLnJlbW92ZUNhcmQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIE1lc3NhZ2VDb250ZXh0LkNsZWFyQWxsTWVzc2FnZXMoKTsNCiAgICAgICAgc2VsZi5pc0FkZGVkKGZhbHNlKTsNCiAgICAgICAgc2VsZi5naWZ0Q2FyZE51bWJlcigiIik7DQogICAgICAgIHNlbGYuZm9ybWF0dGVkQmFsYW5jZSgiIik7DQogICAgICAgIHNlbGYuZ2lmdENhcmRBbW91bnRSYXdWYWx1ZSgwLjAwKTsNCiAgICAgICAgc2VsZi5iYWxhbmNlKDAuMDApOw0KICAgIH07DQoNCiAgICBzZWxmLnJldmFsdWVBbW91bnRzID0gZnVuY3Rpb24gKCkgew0KICAgICAgICBpZiAoIXNlbGYuaXNBZGRlZCgpKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCg0KICAgICAgICB2YXIgY2NJc0FkZGVkID0gc2VsZi5iaWxsaW5nVmlld01vZGVsLmNyZWRpdENhcmRQYXltZW50KCkuaXNBZGRlZCgpOw0KICAgICAgICBpZiAoIWNjSXNBZGRlZCkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgdmFyIGNjQW1vdW50ID0gcGFyc2VGbG9hdChzZWxmLmJpbGxpbmdWaWV3TW9kZWwuY3JlZGl0Q2FyZFBheW1lbnQoKS5jcmVkaXRDYXJkQW1vdW50KCkpOw0KICAgICAgICB2YXIgdG90YWwgPSBwYXJzZUZsb2F0KHNlbGYuYmlsbGluZ1ZpZXdNb2RlbC5jYXJ0KCkudG90YWxBbW91bnQoKSk7DQogICAgICAgIHZhciBhVG90YWwgPSBwYXJzZUZsb2F0KHBhcnNlRmxvYXQoc2VsZi5naWZ0Q2FyZEFtb3VudFJhd1ZhbHVlKCkpICsgY2NBbW91bnQpOw0KDQogICAgICAgIGlmIChhVG90YWwgPiB0b3RhbCkgew0KICAgICAgICAgICAgdmFyIGNvdW50ID0gMTsNCiAgICAgICAgICAgIHZhciBkaWZmID0gKGFUb3RhbCAtIHRvdGFsKSAvIGNvdW50Ow0KICAgICAgICAgICAgY2NBbW91bnQgPSBjY0lzQWRkZWQgPyBjY0Ftb3VudCAtIGRpZmYgOiAwOw0KICAgICAgICAgICAgc2VsZi5iaWxsaW5nVmlld01vZGVsLmNyZWRpdENhcmRQYXltZW50KCkuY3JlZGl0Q2FyZEFtb3VudCgoY2NBbW91bnQpLnRvRml4ZWQoMikpOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIHNlbGYuZ2lmdENhcmRBbW91bnQgPSBrby52YWxpZGF0ZWRPYnNlcnZhYmxlKDAuMDApLmV4dGVuZCh7IHJlcXVpcmVkOiB0cnVlLCBudW1iZXI6IHRydWUgfSk7DQoNCiAgICBzZWxmLmdpZnRDYXJkQW1vdW50UmF3VmFsdWUgPSBrby5jb21wdXRlZCh7DQogICAgICAgIHJlYWQ6IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIHZhbHVlID0gc2VsZi5naWZ0Q2FyZEFtb3VudCgpOw0KDQogICAgICAgICAgICBpZiAoc2VsZi5iaWxsaW5nVmlld01vZGVsKSB7DQogICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpOw0KICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZShzZWxmLmJpbGxpbmdWaWV3TW9kZWwuY3VycmVuY3lEZWNpbWFsU2VwYXJhdG9yKCksICIuIik7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiB2YWx1ZTsNCiAgICAgICAgfSwNCiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uICh2YWx1ZSkgew0KICAgICAgICAgICAgaWYgKHNlbGYuYmlsbGluZ1ZpZXdNb2RlbCkgew0KICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUudG9TdHJpbmcoKTsNCiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoIi4iLCBzZWxmLmJpbGxpbmdWaWV3TW9kZWwuY3VycmVuY3lEZWNpbWFsU2VwYXJhdG9yKCkpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBzZWxmLmdpZnRDYXJkQW1vdW50KHZhbHVlKTsNCiAgICAgICAgfQ0KICAgIH0pOw0KDQogICAgc2VsZi5naWZ0Q2FyZEFtb3VudC5zdWJzY3JpYmUoZnVuY3Rpb24gKGNhKSB7DQogICAgICAgIHNlbGYucmVFbmFibGVBZGRDYXJkKGNhKTsNCiAgICAgICAgc2VsZi5yZXZhbHVlQW1vdW50cygpOw0KICAgIH0uYmluZCh0aGlzKSk7DQoNCiAgICBzZWxmLmFkZEdpZnRDYXJkID0gZnVuY3Rpb24gKGNhcmREYXRhKSB7DQogICAgICAgIHNlbGYuZ2lmdENhcmROdW1iZXIoY2FyZERhdGEuR2lmdENhcmROdW1iZXIgIT0gbnVsbCA/IGNhcmREYXRhLkdpZnRDYXJkTnVtYmVyIDogIiIpOw0KICAgICAgICBzZWxmLmdpZnRDYXJkQW1vdW50UmF3VmFsdWUoY2FyZERhdGEuQW1vdW50KTsNCiAgICAgICAgc2VsZi5pc0FkZGVkKHRydWUpOw0KICAgIH0NCn0NCg0KLy8gLS0tLS1bQ1JFRElUQ0FSRCBQQVlNRU5UIE1PREVMXS0tLS0tDQpmdW5jdGlvbiBDcmVkaXRDYXJkUGF5bWVudFZpZXdNb2RlbChjYXJkLCBjaGVja291dFZpZXdNb2RlbCkgew0KICAgIHZhciBzZWxmID0gdGhpczsNCiAgICB2YXIgcG9wdWxhdGUgPSBjYXJkICE9IG51bGw7DQoNCiAgICBzZWxmLmNoZWNrb3V0Vmlld01vZGVsID0gY2hlY2tvdXRWaWV3TW9kZWw7DQoNCiAgICBzZWxmLmlzQWRkZWQgPSBrby5vYnNlcnZhYmxlKGZhbHNlKTsNCiAgICBzZWxmLmNyZWRpdENhcmROdW1iZXIgPSBrby52YWxpZGF0ZWRPYnNlcnZhYmxlKCkuZXh0ZW5kKHsgcmVxdWlyZWQ6IHRydWUsIG51bWJlcjogdHJ1ZSB9KTsNCiAgICBzZWxmLmNyZWRpdENhcmROdW1iZXJNYXNrZWQgPSBrby5vYnNlcnZhYmxlKCk7DQogICAgc2VsZi5jcmVkaXRDYXJkTnVtYmVyLnN1YnNjcmliZShmdW5jdGlvbiAobnVtYmVyKSB7DQogICAgICAgIHNlbGYuY3JlZGl0Q2FyZE51bWJlck1hc2tlZCgiWFhYWCBYWFhYIFhYWFggIiArIG51bWJlci5zdWJzdHIobnVtYmVyLmxlbmd0aCAtIDQpKTsNCiAgICB9KTsNCg0KICAgIHNlbGYuZGVzY3JpcHRpb24gPSBrby5vYnNlcnZhYmxlKCk7DQoNCiAgICBzZWxmLmV4aXN0aW5nUGF5bWVudEFtb3VudCA9IGtvLm9ic2VydmFibGUocG9wdWxhdGUgPyBjYXJkLkFtb3VudCA6IDApOw0KDQogICAgc2VsZi5wYXltZW50TWV0aG9kSUQgPSBwb3B1bGF0ZSA/IGtvLnZhbGlkYXRlZE9ic2VydmFibGUoY2FyZC5QYXltZW50TWV0aG9kSUQpLmV4dGVuZCh7IHJlcXVpcmVkOiB0cnVlIH0pIDoga28udmFsaWRhdGVkT2JzZXJ2YWJsZSgpLmV4dGVuZCh7IHJlcXVpcmVkOiB0cnVlIH0pOw0KICAgIHNlbGYucGF5bWVudE1ldGhvZElELnN1YnNjcmliZShmdW5jdGlvbiAobWV0aG9kSWQpIHsNCiAgICAgICAgaWYgKG1ldGhvZElkICE9PSAiMCIpIHsNCiAgICAgICAgICAgIHNlbGYuaXNBZGRlZCh0cnVlKTsNCg0KICAgICAgICAgICAgdmFyIHBheW1lbnRNZXRob2QgPSBrby51dGlscy5hcnJheUZpcnN0KHNlbGYuY2hlY2tvdXRWaWV3TW9kZWwucGF5bWVudE1ldGhvZHMoKSwgZnVuY3Rpb24gKGEpIHsNCiAgICAgICAgICAgICAgICBpZiAoYS5FeHRlcm5hbElkID09PSBtZXRob2RJZCkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBzZWxmLmRlc2NyaXB0aW9uKHBheW1lbnRNZXRob2QgPyBwYXltZW50TWV0aG9kLkRlc2NyaXB0aW9uIDogIiIpOw0KICAgICAgICAgICAgc2VsZi5jaGVja291dFZpZXdNb2RlbC5jcmVkaXRDYXJkRW5hYmxlKHRydWUpOw0KICAgICAgICAgICAgc2VsZi5jaGVja291dFZpZXdNb2RlbC5iaWxsaW5nQWRkcmVzc0VuYWJsZSh0cnVlKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHNlbGYuaXNBZGRlZChmYWxzZSk7DQogICAgICAgICAgICBzZWxmLmNoZWNrb3V0Vmlld01vZGVsLmNyZWRpdENhcmRFbmFibGUoZmFsc2UpOw0KICAgICAgICAgICAgc2VsZi5jaGVja291dFZpZXdNb2RlbC5iaWxsaW5nQWRkcmVzc0VuYWJsZShmYWxzZSk7DQogICAgICAgIH0NCiAgICB9KTsNCg0KICAgIHNlbGYuY2hhbmdlUGF5bWVudCA9IGtvLm9ic2VydmFibGUoZmFsc2UpOw0KICAgIHNlbGYuZGlzcGxheUV4aXN0aW5nUGF5bWVudE1lc3NhZ2UgPSBrby5jb21wdXRlZCh7DQogICAgICAgIHJlYWQ6IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIGlmIChzZWxmLmNoZWNrb3V0Vmlld01vZGVsLmVkaXRNb2RlKCkgJiYgc2VsZi5leGlzdGluZ1BheW1lbnRBbW91bnQoKSA9PSBzZWxmLmNyZWRpdENhcmRBbW91bnQoKSAmJiAhc2VsZi5jaGFuZ2VQYXltZW50KCkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uICgpIHsgfQ0KICAgIH0pOw0KDQogICAgc2VsZi5tdXN0UmV2YWxpZGF0ZVBheW1lbnRNZXNzYWdlID0ga28ub2JzZXJ2YWJsZShwb3B1bGF0ZSA/IGNhcmQuQ2FydEFtb3VudERpZmZlcmVudFRoYW5QYXltZW50TWVzc2FnZSA6ICIiKTsNCiAgICBzZWxmLm11c3RSZXZhbGlkYXRlUGF5bWVudCA9IGtvLmNvbXB1dGVkKHsNCiAgICAgICAgcmVhZDogZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgaWYgKHNlbGYuY2hlY2tvdXRWaWV3TW9kZWwuZWRpdE1vZGUoKSAmJiBzZWxmLmV4aXN0aW5nUGF5bWVudEFtb3VudCgpICE9IHNlbGYuY3JlZGl0Q2FyZEFtb3VudCgpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHdyaXRlOiBmdW5jdGlvbiAoKSB7IH0NCiAgICB9KTsNCg0KICAgIHNlbGYuY3JlZGl0Q2FyZEFtb3VudCA9IGtvLmNvbXB1dGVkKHsNCiAgICAgICAgcmVhZDogZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgaWYgKCFzZWxmLmlzQWRkZWQoKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiAwOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB2YXIgdG90YWwgPSBzZWxmLmNoZWNrb3V0Vmlld01vZGVsLmNhcnQoKSA/IHNlbGYuY2hlY2tvdXRWaWV3TW9kZWwuY2FydCgpLnRvdGFsQW1vdW50KCkgOiAwOw0KICAgICAgICAgICAgdmFyIGdjQW1vdW50ID0gc2VsZi5jaGVja291dFZpZXdNb2RlbC5naWZ0Q2FyZFBheW1lbnQoKSA/IHNlbGYuY2hlY2tvdXRWaWV3TW9kZWwuZ2lmdENhcmRQYXltZW50KCkuZ2lmdENhcmRBbW91bnRSYXdWYWx1ZSgpIDogMDsNCiAgICAgICAgICAgIHZhciBjY0Ftb3VudCA9IChwYXJzZUZsb2F0KHRvdGFsKSAtIHBhcnNlRmxvYXQoZ2NBbW91bnQpKS50b0ZpeGVkKDIpOw0KDQogICAgICAgICAgICBpZiAoY2NBbW91bnQgPD0gMCkgew0KICAgICAgICAgICAgICAgIHNlbGYuaXNBZGRlZChmYWxzZSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBjY0Ftb3VudDsNCiAgICAgICAgfSwNCiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uICgpIHsgfQ0KICAgIH0pOw0KDQogICAgc2VsZi5vcmlnaW5hbEV4aXN0aW5nUGF5bWVudE1lc3NhZ2UgPSBrby5vYnNlcnZhYmxlKHBvcHVsYXRlID8gY2FyZC5FeGlzdGluZ1BheW1lbnRNZXNzYWdlIDogIiIpOw0KICAgIHNlbGYuZXhpc3RpbmdQYXltZW50TWVzc2FnZSA9IGtvLmNvbXB1dGVkKHsNCiAgICAgICAgcmVhZDogZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgaWYgKHNlbGYuY3JlZGl0Q2FyZEFtb3VudCgpICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5vcmlnaW5hbEV4aXN0aW5nUGF5bWVudE1lc3NhZ2UoKS5mb3JtYXQoc2VsZi5jcmVkaXRDYXJkQW1vdW50KCkpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICIiOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB3cml0ZTogZnVuY3Rpb24gKCkgeyB9DQogICAgfSk7DQoNCiAgICBzZWxmLnBhcnR5SUQgPSBwb3B1bGF0ZSA/IGtvLm9ic2VydmFibGUoY2FyZC5QYXJ0eUlEKSA6IGtvLm9ic2VydmFibGUoKTsNCn0NCg0KLy8gLS0tLS1bQklMTElORyBEQVRBIE1PREVMXS0tLS0tDQpmdW5jdGlvbiBCaWxsaW5nRGF0YVZpZXdNb2RlbCgpIHsNCiAgICB2YXIgc2VsZiA9IHRoaXM7DQoNCiAgICB2YXIgUGF5bWVudFR5cGVzID0gew0KICAgICAgICBHaWZ0Q2FyZDogMywNCiAgICAgICAgRmVkZXJhdGVkUGF5bWVudDogNCwNCiAgICB9Ow0KDQogICAgc2VsZi5jYXJ0ID0ga28ub2JzZXJ2YWJsZSgiIik7DQoNCiAgICBzZWxmLmVkaXRNb2RlID0ga28ub2JzZXJ2YWJsZShmYWxzZSk7DQoNCiAgICB2YXIgQ291bnRyeSA9IGZ1bmN0aW9uIChuYW1lLCBjb2RlKSB7DQogICAgICAgIHRoaXMuY291bnRyeSA9IG5hbWU7DQogICAgICAgIHRoaXMuY29kZSA9IGNvZGU7DQogICAgfTsNCiAgICBzZWxmLmNvdW50cmllcyA9IGtvLm9ic2VydmFibGVBcnJheSgpOw0KDQogICAgc2VsZi5pc0F1dGhlbnRpY2F0ZWQgPSBmYWxzZTsNCiAgICBzZWxmLnVzZXJFbWFpbCA9ICIiOw0KDQogICAgc2VsZi5pc1NoaXBBbGwgPSBrby5vYnNlcnZhYmxlKGZhbHNlKTsNCg0KICAgIHNlbGYuY3VycmVuY3lEZWNpbWFsU2VwYXJhdG9yID0ga28ub2JzZXJ2YWJsZSgpOw0KICAgIHNlbGYuY3VycmVuY3lHcm91cFNlcGFyYXRvciA9IGtvLm9ic2VydmFibGUoKTsNCg0KICAgIHNlbGYudXNlckFkZHJlc3NlcyA9IGtvLm9ic2VydmFibGVBcnJheSgpOw0KICAgIHNlbGYuaGFzRGlnaXRhbFByb2R1Y3RzSW5DYXJ0ID0gZmFsc2U7DQogICAgc2VsZi51c2VyQWRkcmVzc2VzLnB1c2gobmV3IEFkZHJlc3NWaWV3TW9kZWwoeyAiRXh0ZXJuYWxJZCI6ICJVc2VPdGhlciIsICJGdWxsQWRkcmVzcyI6ICQoIiNPdGhlckFkZHJlc3NMYWJlbCIpLnZhbCgpIH0pKTsNCg0KICAgIHNlbGYuYmlsbGluZ0VtYWlsID0ga28udmFsaWRhdGVkT2JzZXJ2YWJsZShzZWxmLnVzZXJFbWFpbCkuZXh0ZW5kKHsgcmVxdWlyZWQ6IHRydWUsIGVtYWlsOiB0cnVlIH0pOw0KICAgIHNlbGYuYmlsbGluZ0NvbmZpcm1FbWFpbCA9IGtvLnZhbGlkYXRlZE9ic2VydmFibGUoc2VsZi51c2VyRW1haWwpLmV4dGVuZCh7IHJlcXVpcmVkOiB0cnVlLCB2YWxpZGF0aW9uOiB7IHZhbGlkYXRvcjogbXVzdEVxdWFsLCBtZXNzYWdlOiAkKCIjRW1haWxzTXVzdE1hdGNoTWVzc2FnZSIpLnZhbCgpLCBwYXJhbXM6IHNlbGYuYmlsbGluZ0VtYWlsIH0gfSk7DQoNCiAgICBzZWxmLnBheUZlZGVyYXRlZFBheW1lbnQgPSBrby5vYnNlcnZhYmxlKGZhbHNlKTsNCiAgICBzZWxmLnBheUdpZnRDYXJkID0ga28ub2JzZXJ2YWJsZShmYWxzZSk7DQogICAgc2VsZi5jYXJkUGF5bWVudEFjY2VwdFBhZ2VVcmwgPSBrby5vYnNlcnZhYmxlKCcnKTsNCiAgICBzZWxmLmNhcmRQYXltZW50UmVzdWx0QWNjZXNzQ29kZSA9ICIiOw0KICAgIHNlbGYuY2FyZFBheW1lbnRBY2NlcHRDYXJkUHJlZml4ID0gIiI7DQogICAgc2VsZi5DQVJEUEFZTUVOVEFDQ0VQVFBBR0VIRUlHSFQgPSAibXNheC1jYy1oZWlnaHQiOw0KICAgIHNlbGYuQ0FSRFBBWU1FTlRBQ0NFUFRQQUdFRVJST1IgPSAibXNheC1jYy1lcnJvciI7DQogICAgc2VsZi5DQVJEUEFZTUVOVEFDQ0VQVFBBR0VSRVNVTFQgPSAibXNheC1jYy1yZXN1bHQiOw0KICAgIHNlbGYuQ0FSRFBBWU1FTlRBQ0NFUFRQQUdFU1VCTUlUID0gIm1zYXgtY2Mtc3VibWl0IjsNCiAgICBzZWxmLkNBUkRQQVlNRU5UQUNDRVBUQ0FSRFBSRUZJWCA9ICJtc2F4LWNjLWNhcmRwcmVmaXgiOw0KDQogICAgdmFyIFBheW1lbnRNZXRob2QgPSBmdW5jdGlvbiAoZXh0ZXJuYWxJZCwgZGVzY3JpcHRpb24pIHsNCiAgICAgICAgdGhpcy5FeHRlcm5hbElkID0gZXh0ZXJuYWxJZDsNCiAgICAgICAgdGhpcy5EZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uOw0KICAgIH07DQoNCiAgICBzZWxmLnBheW1lbnRNZXRob2RzID0ga28ub2JzZXJ2YWJsZUFycmF5KCk7DQogICAgc2VsZi5wYXltZW50Q2xpZW50VG9rZW4gPSBrby5vYnNlcnZhYmxlKCIiKTsNCg0KICAgIHNlbGYuZ2lmdENhcmRQYXltZW50ID0ga28udmFsaWRhdGVkT2JzZXJ2YWJsZShuZXcgR2lmdENhcmRQYXltZW50Vmlld01vZGVsKHNlbGYpKTsNCiAgICBzZWxmLmNyZWRpdENhcmRQYXltZW50ID0ga28udmFsaWRhdGVkT2JzZXJ2YWJsZShuZXcgQ3JlZGl0Q2FyZFBheW1lbnRWaWV3TW9kZWwobnVsbCwgc2VsZikpOw0KICAgIHNlbGYuY3JlZGl0Q2FyZEVuYWJsZSA9IGtvLm9ic2VydmFibGUoZmFsc2UpOw0KICAgIHNlbGYuYmlsbGluZ0FkZHJlc3MgPSBrby52YWxpZGF0ZWRPYnNlcnZhYmxlKG5ldyBBZGRyZXNzVmlld01vZGVsKHsgIkV4dGVybmFsSWQiOiAiMSIgfSkpOw0KICAgIHNlbGYuYmlsbGluZ0FkZHJlc3NFbmFibGUgPSBrby5vYnNlcnZhYmxlKGZhbHNlKTsNCiAgICBzZWxmLnNoaXBwaW5nQWRkcmVzcyA9IGtvLm9ic2VydmFibGUoKTsNCiAgICBzZWxmLnNlbGVjdGVkQmlsbGluZ0FkZHJlc3MgPSBrby5vYnNlcnZhYmxlKCJVc2VPdGhlciIpOw0KICAgIHNlbGYuc2VsZWN0ZWRCaWxsaW5nQWRkcmVzcy5zdWJzY3JpYmUoZnVuY3Rpb24gKGlkKSB7DQogICAgICAgIGlmIChpZCA9PT0gIlVzZVNoaXBwaW5nIikgew0KICAgICAgICAgICAgc2VsZi5iaWxsaW5nQWRkcmVzc0VuYWJsZShmYWxzZSk7DQogICAgICAgICAgICBzZWxmLmJpbGxpbmdBZGRyZXNzKHNlbGYuc2hpcHBpbmdBZGRyZXNzKCkpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgdmFyIG1hdGNoID0gc2VsZi5nZXRBZGRyZXNzKGlkKTsNCiAgICAgICAgICAgIGlmIChtYXRjaCAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgc2VsZi5iaWxsaW5nQWRkcmVzc0VuYWJsZShmYWxzZSk7DQogICAgICAgICAgICAgICAgc2VsZi5iaWxsaW5nQWRkcmVzcyhtYXRjaCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHNlbGYuYmlsbGluZ0FkZHJlc3NFbmFibGUodHJ1ZSk7DQogICAgICAgICAgICAgICAgc2VsZi5iaWxsaW5nQWRkcmVzcyhuZXcgQWRkcmVzc1ZpZXdNb2RlbCh7ICJFeHRlcm5hbElkIjogIjEiIH0pKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgICQoIi5zZWxlY3QtYmlsbGluZy1hZGRyZXNzIikucHJvcCgiZGlzYWJsZWQiLCBmYWxzZSk7DQogICAgfSk7DQoNCiAgICBzZWxmLnBheW1lbnRUb3RhbCA9IGtvLmNvbXB1dGVkKHsNCiAgICAgICAgcmVhZDogZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgdmFyIGNjSXNBZGRlZCA9IHNlbGYuY3JlZGl0Q2FyZFBheW1lbnQoKS5pc0FkZGVkKCk7DQogICAgICAgICAgICB2YXIgZ2NJc0FkZGVkID0gc2VsZi5naWZ0Q2FyZFBheW1lbnQoKS5pc0FkZGVkKCk7DQogICAgICAgICAgICBpZiAoIWNjSXNBZGRlZCAmJiAhZ2NJc0FkZGVkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIDA7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHZhciBjY0Ftb3VudCA9IGNjSXNBZGRlZCA/IHNlbGYuY3JlZGl0Q2FyZFBheW1lbnQoKS5jcmVkaXRDYXJkQW1vdW50KCkgOiAwOw0KICAgICAgICAgICAgdmFyIGdjQW1vdW50ID0gZ2NJc0FkZGVkID8gc2VsZi5naWZ0Q2FyZFBheW1lbnQoKS5naWZ0Q2FyZEFtb3VudFJhd1ZhbHVlKCkgOiAwOw0KICAgICAgICAgICAgcmV0dXJuIChwYXJzZUZsb2F0KGNjQW1vdW50KSArIHBhcnNlRmxvYXQoZ2NBbW91bnQpKS50b0ZpeGVkKDIpOw0KICAgICAgICB9LA0KICAgICAgICB3cml0ZTogZnVuY3Rpb24gKCkgeyB9DQogICAgfSk7DQoNCiAgICBzZWxmLmVuYWJsZVRvQ29uZmlybSA9IGtvLmNvbXB1dGVkKHsNCiAgICAgICAgcmVhZDogZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgaWYgKHNlbGYuY2FydCgpLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB2YXIgcGF5bWVudFRvdGFsSXNWYWxpZCA9IHBhcnNlRmxvYXQoc2VsZi5wYXltZW50VG90YWwoKSkgPT09IHBhcnNlRmxvYXQoc2VsZi5jYXJ0KCkudG90YWxBbW91bnQoKSk7DQogICAgICAgICAgICBpZiAoIXBheW1lbnRUb3RhbElzVmFsaWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHZhciBwYXltZW50c0FyZVZhbGlkID0gZmFsc2U7DQogICAgICAgICAgICBpZiAoc2VsZi5naWZ0Q2FyZFBheW1lbnQoKS5pc0FkZGVkKCkpIHsNCiAgICAgICAgICAgICAgICBwYXltZW50c0FyZVZhbGlkID0gc2VsZi5naWZ0Q2FyZFBheW1lbnQuaXNWYWxpZCgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoc2VsZi5jcmVkaXRDYXJkUGF5bWVudCgpLmlzQWRkZWQoKSkgew0KICAgICAgICAgICAgICAgIGlmICghc2VsZi5wYXlGZWRlcmF0ZWRQYXltZW50KCkpIHsNCiAgICAgICAgICAgICAgICAgICAgcGF5bWVudHNBcmVWYWxpZCA9IHNlbGYuY3JlZGl0Q2FyZFBheW1lbnQuaXNWYWxpZCgpICYmIHNlbGYuYmlsbGluZ0FkZHJlc3MuaXNWYWxpZCgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgcGF5bWVudHNBcmVWYWxpZCA9ICFzZWxmLmNyZWRpdENhcmRQYXltZW50KCkubXVzdFJldmFsaWRhdGVQYXltZW50KCkgJiYgc2VsZi5iaWxsaW5nQWRkcmVzcy5pc1ZhbGlkKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAocGF5bWVudHNBcmVWYWxpZCkgew0KICAgICAgICAgICAgICAgIGtvLnZhbGlkYXRpb24uZ3JvdXAoc2VsZikuc2hvd0FsbE1lc3NhZ2VzKHRydWUpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gcGF5bWVudHNBcmVWYWxpZCAmJiBzZWxmLmJpbGxpbmdFbWFpbC5pc1ZhbGlkKCkgJiYgc2VsZi5iaWxsaW5nQ29uZmlybUVtYWlsLmlzVmFsaWQoKTsNCiAgICAgICAgfSwNCiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uICh2YWx1ZSkgew0KICAgICAgICAgICAgcmV0dXJuIEJvb2xlYW4odmFsdWUpOw0KICAgICAgICB9DQogICAgfSk7DQoNCiAgICBzZWxmLnNldFBheW1lbnRNZXRob2RzID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgZGF0YSA9ICJ7IjsNCg0KICAgICAgICBkYXRhID0gZGF0YSArICciQmlsbGluZ0l0ZW1QYXRoIjoiJyArICQoIiNCaWxsaW5nSXRlbVBhdGgiKS52YWwoKSArICciLCcNCiAgICAgICAgZGF0YSA9IGRhdGEgKyAnIlVzZXJFbWFpbCI6JyArICciJyArIHNlbGYuYmlsbGluZ0VtYWlsKCkgKyAnIic7DQoNCiAgICAgICAgaWYgKHNlbGYuY3JlZGl0Q2FyZFBheW1lbnQoKS5pc0FkZGVkKCkpIHsNCiAgICAgICAgICAgIHZhciBjYyA9IHNlbGYuY3JlZGl0Q2FyZFBheW1lbnQoKTsNCiAgICAgICAgICAgIGlmIChzZWxmLnBheUZlZGVyYXRlZFBheW1lbnQpIHsNCiAgICAgICAgICAgICAgICB2YXIgY3JlZGl0Q2FyZCA9IHsNCiAgICAgICAgICAgICAgICAgICAgIkNhcmRUb2tlbiI6IHNlbGYuY2FyZFBheW1lbnRSZXN1bHRBY2Nlc3NDb2RlLA0KICAgICAgICAgICAgICAgICAgICAiQW1vdW50IjogY2MuY3JlZGl0Q2FyZEFtb3VudCgpLA0KICAgICAgICAgICAgICAgICAgICAiQ2FyZFBheW1lbnRBY2NlcHRDYXJkUHJlZml4Ijogc2VsZi5jYXJkUGF5bWVudEFjY2VwdENhcmRQcmVmaXgNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgICAgICAgICBkYXRhICs9ICIsIjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBkYXRhICs9ICciRmVkZXJhdGVkUGF5bWVudCI6JyArIEpTT04uc3RyaW5naWZ5KGNyZWRpdENhcmQpOw0KICAgICAgICAgICAgICAgIGlmIChzZWxmLmNhcmRQYXltZW50QWNjZXB0Q2FyZFByZWZpeCA9PT0gInBheXBhbCIpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGJhID0gc2VsZi5iaWxsaW5nQWRkcmVzcygpOw0KICAgICAgICAgICAgICAgICAgICB2YXIgYmlsbGluZ0FkZHJlc3MgPQ0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICJOYW1lIjogYmEubmFtZSgpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICJBZGRyZXNzMSI6IGJhLmFkZHJlc3MxKCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkNvdW50cnkiOiBiYS5jb3VudHJ5KCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkNpdHkiOiBiYS5jaXR5KCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIlN0YXRlIjogYmEuc3RhdGUoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiWmlwUG9zdGFsQ29kZSI6IGJhLnppcFBvc3RhbENvZGUoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRXh0ZXJuYWxJZCI6IGJhLmV4dGVybmFsSWQoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUGFydHlJZCI6IGJhLmV4dGVybmFsSWQoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAxKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhICs9ICIsIjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGRhdGEgKz0gJyJCaWxsaW5nQWRkcmVzcyI6JyArIEpTT04uc3RyaW5naWZ5KGJpbGxpbmdBZGRyZXNzKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoc2VsZi5naWZ0Q2FyZFBheW1lbnQoKS5pc0FkZGVkKCkpIHsNCiAgICAgICAgICAgIHZhciBnaWZ0Q2FyZCA9IHsNCiAgICAgICAgICAgICAgICAiUGF5bWVudE1ldGhvZElEIjogc2VsZi5naWZ0Q2FyZFBheW1lbnQoKS5naWZ0Q2FyZE51bWJlcigpLA0KICAgICAgICAgICAgICAgICJBbW91bnQiOiBzZWxmLmdpZnRDYXJkUGF5bWVudCgpLmdpZnRDYXJkQW1vdW50UmF3VmFsdWUoKQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgICAgIGRhdGEgKz0gIiwiOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBkYXRhICs9ICciR2lmdENhcmRQYXltZW50IjonICsgSlNPTi5zdHJpbmdpZnkoZ2lmdENhcmQpOw0KICAgICAgICB9DQoNCiAgICAgICAgZGF0YSArPSAifSI7DQoNCiAgICAgICAgJCgiLnRvLWNvbmZpcm0tYnV0dG9uIikuYnV0dG9uKCdsb2FkaW5nJyk7DQogICAgICAgIE1lc3NhZ2VDb250ZXh0LkNsZWFyQWxsTWVzc2FnZXMoKTsNCg0KICAgICAgICBBamF4U2VydmljZS5Qb3N0KCIvYXBpL2N4YS9jaGVja291dC9TZXRQYXltZW50TWV0aG9kcyIsIEpTT04ucGFyc2UoZGF0YSksIGZ1bmN0aW9uIChkYXRhLCBzdWNjZXNzLCBzZW5kZXIpIHsNCiAgICAgICAgICAgIGlmIChkYXRhLlN1Y2Nlc3MgJiYgc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gZGF0YS5OZXh0UGFnZUxpbmsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICQoIi50by1jb25maXJtLWJ1dHRvbiIpLmJ1dHRvbigncmVzZXQnKTsNCiAgICAgICAgfSwgJCh0aGlzKSk7DQogICAgfQ0KDQogICAgc2VsZi5zZXR1cFBhZ2UgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICQoJy5leGlzdGluZy1wYXltZW50LXJlc2V0LWxpbmsnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHsNCiAgICAgICAgICAgIHNlbGYuY3JlZGl0Q2FyZFBheW1lbnQoKS5jaGFuZ2VQYXltZW50KHRydWUpOw0KICAgICAgICB9KTsNCiAgICB9DQoNCiAgICBzZWxmLmdvVG9OZXh0UGFnZUNsaWNrID0gZnVuY3Rpb24gKCkgew0KICAgICAgICBzZWxmLnNldFBheW1lbnRNZXRob2RzKCk7DQogICAgfQ0KDQogICAgc2VsZi5nZXRBZGRyZXNzID0gZnVuY3Rpb24gKGlkKSB7DQogICAgICAgIHZhciBtYXRjaCA9IGtvLnV0aWxzLmFycmF5Rmlyc3Qoc2VsZi51c2VyQWRkcmVzc2VzKCksIGZ1bmN0aW9uIChhKSB7DQogICAgICAgICAgICBpZiAoYS5leHRlcm5hbElkKCkgPT09IGlkICYmIGlkICE9PSAiVXNlT3RoZXIiKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGE7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9KTsNCg0KICAgICAgICByZXR1cm4gbWF0Y2g7DQogICAgfTsNCg0KICAgIHNlbGYubG9hZCA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgQWpheFNlcnZpY2UuUG9zdCgiL2FwaS9jeGEvY2hlY2tvdXQvR2V0QmlsbGluZ0RhdGEiLCBudWxsLCBmdW5jdGlvbiAoZGF0YSwgc3VjY2Vzcywgc2VuZGVyKSB7DQogICAgICAgICAgICBpZiAoc3VjY2VzcyAmJiBkYXRhLlN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsNCiAgICAgICAgICAgICAgICBpZiAoZGF0YS5Db3VudHJpZXMgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICAkLmVhY2goZGF0YS5Db3VudHJpZXMsIGZ1bmN0aW9uIChpbmRleCwgdmFsdWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY291bnRyaWVzLnB1c2gobmV3IENvdW50cnkodmFsdWUsIGluZGV4KSk7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHNlbGYuY2FydChuZXcgQ2FydFZpZXdNb2RlbChkYXRhLkNhcnQpKTsNCg0KICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgc2hpcHBpbmcgYWRkcmVzcy4gTmVlZGVkIGZvciBzYW1lIGFzIHNoaXBwaW5nLg0KICAgICAgICAgICAgICAgIGlmIChzZWxmLmNhcnQoKS5zaGlwbWVudHMubGVuZ3RoID09IDEpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnR5SWQgPSBzZWxmLmNhcnQoKS5zaGlwbWVudHNbMF0ucGFydHlJZDsNCiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnR5ID0ga28udXRpbHMuYXJyYXlGaXJzdChzZWxmLmNhcnQoKS5wYXJ0aWVzLCBmdW5jdGlvbiAoYSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGEuZXh0ZXJuYWxJZCgpID09PSBwYXJ0eUlkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGE7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAocGFydHkgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zaGlwcGluZ0FkZHJlc3MocGFydHkpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgc2VsZi5wYXltZW50Q2xpZW50VG9rZW4oZGF0YS5QYXltZW50Q2xpZW50VG9rZW4pOw0KDQogICAgICAgICAgICAgICAgaWYgKGRhdGEuSXNVc2VyQXV0aGVudGljYXRlZCA9PT0gdHJ1ZSAmJiBkYXRhLlVzZXJBZGRyZXNzZXMuQWRkcmVzc2VzICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEuVXNlckFkZHJlc3Nlcy5BZGRyZXNzZXMsIGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYudXNlckFkZHJlc3Nlcy5wdXNoKG5ldyBBZGRyZXNzVmlld01vZGVsKHRoaXMpKTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgc2VsZi5pc0F1dGhlbnRpY2F0ZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIENoZWNraW5nIGlmIHRoZSBjYXJ0IGNvbnRhaW5zIGEgZGlnaXRhbCBwcm9kdWN0ICJIYXNEaWdpdGFsUHJvZHVjdCINCiAgICAgICAgICAgICAgICAvLyBpZiB0cnVlIHRoZW4gdGhlICJTYW1lIGFzIHNoaXBwaW5nIGFkZHJlc3MiIHdpbGwgbm90IGJlIGF2YWlsYWJsZSANCiAgICAgICAgICAgICAgICAvLyBlbHNlIGl0IHdpbGwgYmUgYWRkZWQgdG8gbmlsbGluZyBhZGRyZXNzIGxpc3QNCiAgICAgICAgICAgICAgICBzZWxmLmhhc0RpZ2l0YWxQcm9kdWN0c0luQ2FydCA9IGRhdGEuSGFzRGlnaXRhbFByb2R1Y3Q7DQogICAgICAgICAgICAgICAgaWYgKCFzZWxmLmhhc0RpZ2l0YWxQcm9kdWN0c0luQ2FydCkgew0KICAgICAgICAgICAgICAgICAgICBzZWxmLnVzZXJBZGRyZXNzZXMucHVzaChuZXcgQWRkcmVzc1ZpZXdNb2RlbCh7ICJFeHRlcm5hbElkIjogIlVzZVNoaXBwaW5nIiwgIkZ1bGxBZGRyZXNzIjogJCgiLnNlbGVjdC1iaWxsaW5nLWFkZHJlc3MiKS5hdHRyKCJ0aXRsZSIpIH0pKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBzZWxmLnVzZXJFbWFpbCA9IGRhdGEuVXNlckVtYWlsOw0KICAgICAgICAgICAgICAgIHNlbGYuYmlsbGluZ0VtYWlsKGRhdGEuVXNlckVtYWlsKTsNCiAgICAgICAgICAgICAgICBzZWxmLmJpbGxpbmdDb25maXJtRW1haWwoZGF0YS5Vc2VyRW1haWwpOw0KDQogICAgICAgICAgICAgICAgc2VsZi5jdXJyZW5jeURlY2ltYWxTZXBhcmF0b3IoZGF0YS5DdXJyZW5jeURlY2ltYWxTZXBhcmF0b3IpOw0KICAgICAgICAgICAgICAgIHNlbGYuY3VycmVuY3lHcm91cFNlcGFyYXRvcihkYXRhLkN1cnJlbmN5R3JvdXBTZXBhcmF0b3IpDQoNCiAgICAgICAgICAgICAgICAvL2lmIChzZWxmLmN1cnJlbmN5RGVjaW1hbFNlcGFyYXRvcigpICE9ICIuIikgew0KICAgICAgICAgICAgICAgIC8vfQ0KDQogICAgICAgICAgICAgICAgY3VycmVudE51bWJlclZhbGlkYXRvciA9IGtvLnZhbGlkYXRpb24ucnVsZXMubnVtYmVyLnZhbGlkYXRvcjsNCiAgICAgICAgICAgICAgICBrby52YWxpZGF0aW9uLnJ1bGVzLm51bWJlci52YWxpZGF0b3IgPSBmdW5jdGlvbiAobiwgdCkgew0KICAgICAgICAgICAgICAgICAgICBuID0gbi5yZXBsYWNlKHNlbGYuY3VycmVuY3lEZWNpbWFsU2VwYXJhdG9yKCksICIuIik7DQoNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnROdW1iZXJWYWxpZGF0b3IobiwgdCkgJiYgJC5pc051bWVyaWMobik7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGRhdGEuUGF5bWVudE9wdGlvbnMgIT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICAkLmVhY2goZGF0YS5QYXltZW50T3B0aW9ucywgZnVuY3Rpb24gKGluZGV4LCB2YWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlLlBheW1lbnRPcHRpb25UeXBlTmFtZSA9PT0gIlBheUZlZGVyYXRlZFBheW1lbnQiKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5wYXlGZWRlcmF0ZWRQYXltZW50KHRydWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlLlBheW1lbnRPcHRpb25UeXBlTmFtZSA9PT0gIlBheUdpZnRDYXJkIikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYucGF5R2lmdENhcmQodHJ1ZSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChkYXRhLlBheW1lbnRNZXRob2RzICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgc2VsZi5wYXltZW50TWV0aG9kcy5wdXNoKG5ldyBQYXltZW50TWV0aG9kKCIwIiwgJCgiI1BheW1lbnRNZXRob2RzIikuYXR0cigidGl0bGUiKSkpOw0KICAgICAgICAgICAgICAgICAgICAkLmVhY2goZGF0YS5QYXltZW50TWV0aG9kcywgZnVuY3Rpb24gKGluZGV4LCB2YWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5wYXltZW50TWV0aG9kcy5wdXNoKG5ldyBQYXltZW50TWV0aG9kKHZhbHVlLkV4dGVybmFsSWQsIHZhbHVlLkRlc2NyaXB0aW9uKSk7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHNlbGYuaXNTaGlwQWxsKChkYXRhLkNhcnQgIT0gbnVsbCAmJiBkYXRhLkNhcnQuU2hpcG1lbnRzICE9IG51bGwgJiYgZGF0YS5DYXJ0LlNoaXBtZW50cy5sZW5ndGggPT0gMSAmJiBkYXRhLkNhcnQuU2hpcG1lbnRzWzBdLlNoaXBwaW5nTWV0aG9kTmFtZSAhPSAiUGlja3VwIEZyb20gU3RvcmUiKSA/IHRydWUgOiBmYWxzZSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoc2VsZi5wYXltZW50Q2xpZW50VG9rZW4oKSAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgIHZhciBjbGllbnRUb2tlbiA9IHNlbGYucGF5bWVudENsaWVudFRva2VuKCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChjbGllbnRUb2tlbi5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBicmFpbnRyZWUuc2V0dXAoY2xpZW50VG9rZW4sICdkcm9waW4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyOiAnZHJvcGluLWNvbnRhaW5lcicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF5bWVudE1ldGhvZE5vbmNlUmVjZWl2ZWQ6IGZ1bmN0aW9uIChldmVudCwgbm9uY2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vbmNlLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY2FyZFBheW1lbnRSZXN1bHRBY2Nlc3NDb2RlID0gbm9uY2U7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmNhcmRQYXltZW50QWNjZXB0Q2FyZFByZWZpeCA9ICJwYXlwYWwiOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZi5jcmVkaXRDYXJkUGF5bWVudCgpICE9IG51bGwgJiYgc2VsZi5lZGl0TW9kZSgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jcmVkaXRDYXJkUGF5bWVudCgpLmV4aXN0aW5nUGF5bWVudEFtb3VudChzZWxmLmNyZWRpdENhcmRQYXltZW50KCkuY3JlZGl0Q2FyZEFtb3VudCgpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmNyZWRpdENhcmRQYXltZW50KCkuY2hhbmdlUGF5bWVudChmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChkYXRhLkNhcnQgIT0gbnVsbCAmJiBkYXRhLkNhcnQuQWNjb3VudGluZ1BhcnR5ICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnR5SWQgPSBkYXRhLkNhcnQuQWNjb3VudGluZ1BhcnR5LlBhcnR5SUQ7DQogICAgICAgICAgICAgICAgICAgIHZhciBwYXJ0eSA9IGtvLnV0aWxzLmFycmF5Rmlyc3Qoc2VsZi5jYXJ0KCkucGFydGllcywgZnVuY3Rpb24gKGEpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhLmV4dGVybmFsSWQoKSA9PT0gcGFydHlJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnR5ICE9IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYmlsbGluZ0FkZHJlc3MocGFydHkpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGRhdGEuQ2FydCAhPSBudWxsICYmIGRhdGEuQ2FydC5QYXltZW50cyAhPSBudWxsICYmIGRhdGEuQ2FydC5QYXltZW50cy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHZhciBnaWZ0Q2FyZEFkZGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIHZhciBmZWRQYXltZW50QWRkZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEuQ2FydC5QYXltZW50cywgZnVuY3Rpb24gKGluZGV4LCBWYWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFZhbHVlLlBheW1lbnRUeXBlID09IFBheW1lbnRUeXBlcy5GZWRlcmF0ZWRQYXltZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jcmVkaXRDYXJkUGF5bWVudChuZXcgQ3JlZGl0Q2FyZFBheW1lbnRWaWV3TW9kZWwoVmFsdWUsIHNlbGYpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnBheUZlZGVyYXRlZFBheW1lbnQodHJ1ZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jYXJkUGF5bWVudFJlc3VsdEFjY2Vzc0NvZGUgPSBWYWx1ZS5DYXJkVG9rZW47DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jYXJkUGF5bWVudEFjY2VwdENhcmRQcmVmaXggPSAicGF5cGFsIjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWRQYXltZW50QWRkZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoVmFsdWUuUGF5bWVudFR5cGUgPT0gUGF5bWVudFR5cGVzLkdpZnRDYXJkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5naWZ0Q2FyZFBheW1lbnQoKS5hZGRHaWZ0Q2FyZChWYWx1ZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5wYXlHaWZ0Q2FyZCh0cnVlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnaWZ0Q2FyZEFkZGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgc2VsZi5lZGl0TW9kZShmZWRQYXltZW50QWRkZWQgfHwgZ2lmdENhcmRBZGRlZCk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGZlZFBheW1lbnRBZGRlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgJCgiLmNjcGF5bWVudCIpLnRyaWdnZXIoImNsaWNrIik7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBpZiAoZ2lmdENhcmRBZGRlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgJCgiLmdpZnRDYXJkUGF5bWVudCIpLnRyaWdnZXIoImNsaWNrIik7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBzZWxmLnNldHVwUGFnZSgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgICkNCiAgICB9Ow0KfQ==
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 23914
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/x-javascript"
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: js
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20190305T182631Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
