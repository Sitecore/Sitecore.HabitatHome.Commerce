@using Sitecore.Mvc
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions
@using ComponentDataSource = Sitecore.Commerce.XA.Feature.Account.AccountFeatureConstants.Orders.OrderLines.DataSourceFields

@model Sitecore.HabitatHome.Feature.Orders.Models.OrderLinesViewModel

<!-- HabitatHome customization -->
<div @Html.Sxa().Component("cxa-orderdetailslines-component", Model.Attributes) data-cxa-component-class="OrderLines" data-cxa-component-initialized="false" data-cxa-component-model="OrderLinesViewModel" data-cxa-component-type="component">
<!-- HabitatHome customization -->
    @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
    {
        <div class="error-message">
            <p>@Model.ErrorMessage</p>
        </div>
    }
    else
    {
        <div class="component-content">

            <div class="order-lines-header">
                <h3 title="@Model.YourProductsHeaderTooltip">@Html.Sitecore().Field(ComponentDataSource.YourProductsHeader, Html.Sitecore().CurrentItem)</h3>
            </div>

            <div class="order-lines">
                <table class="products-table" data-orderId="@Model.OrderId">
                    <thead>
                        <tr class="order-header">
                            <th colspan="2">@Html.Sitecore().Field("Product Details Label", Html.Sitecore().CurrentItem)</th>
                            <th>@Html.Sitecore().Field("Unit Price Label", Html.Sitecore().CurrentItem)</th>
                            <th class="product-quantity-header">@Html.Sitecore().Field("Quantity Label", Html.Sitecore().CurrentItem)</th>
                            <th class="line-total-header">@Html.Sitecore().Field("Total Label", Html.Sitecore().CurrentItem)</th>
                            <!-- HabitatHome customization -->
                            <th></th>
                            <!-- end HabitatHome customization -->
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var cartLine in Model.Lines)
                    {
                        <tr>
                            <td class="product-image">
                                <img src="@cartLine.ImageUrl" alt="a" pid="image" />
                            </td>
                            <td class="cart-info">
                                <a href="@cartLine.ProductUrl"><h4>@cartLine.ProductDisplayName</h4></a>
                                <div class="product-variants">
                                    @foreach(var property in cartLine.Properties)
                                    {
                                        <div class="product-variant">
                                            <span class="variant-label">
                                                @(Model.VariantLabels.ContainsKey(property.Key) ? Model.VariantLabels[property.Key] : property.Key)
                                            </span>
                                            <span class="variant-information">
                                            @property.Value
                                            </span> 
                                        </div>                                   
                                    }
                                    
                                </div>
                                @if (!string.IsNullOrEmpty(cartLine.ShippingMethodName))
                                {
                                    <p class="cart-delivery">
                                        <span>
                                            @Html.Sitecore().Field(ComponentDataSource.DeliveryLabelText, Html.Sitecore().CurrentItem):
                                        </span>
                                        <!-- HabitatHome customization -->
                                        @if ((bool)Model.StoreOrder)
                                        {
                                            <span class="shippingMethodName">
                                                Pick up at @Model.StoreName
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="shippingMethodName">
                                                @cartLine.ShippingMethodName<br />
                                            </span>
                                            <div class="field-link">
                                                <span class="address-label">Tracking #:</span>
                                                <a href="https://www.fedex.com/apps/fedextrack/?tracknumbers=@Model.TrackingNumber" target="_blank">@Model.TrackingNumber</a>
                                            </div>
                                        }
                                        <!-- end HabitatHome customization -->
                                    </p>
                                }
                                @if (cartLine.Address != null)
                                {
                                    <div class="cart-delivery">
                                        <span class="address-label">Address:</span>
                                        <ul class="lineShippingAddress">
                                            <li>
                                                <span class="lineShippingAddressLine">
                                                    @cartLine.Address.Address1,
                                                </span>
                                                <span class="lineShippingAddressCity">
                                                    @cartLine.Address.City
                                                </span>
                                            </li>
                                            <li>
                                                <span class="lineShippingAddressState">@cartLine.Address.State, </span>
                                                <span class="lineShippingAddressZipCode">@cartLine.Address.ZipPostalCode</span>
                                            </li>
                                            <li class="lineShippingAddressCountry">
                                                <span>@cartLine.Address.Country</span>
                                            </li>
                                        </ul>
                                    </div>

                                    if (!string.IsNullOrEmpty(cartLine.ElectronicDeliveryEmail))
                                    {
                                        <p class="cart-email">@cartLine.ElectronicDeliveryEmail</p>
                                    }
                                }
                            </td>

                                <td class="unit-price">
                                    <span class="price-amount">@cartLine.PriceText</span>
                                    @if (@cartLine.DiscountOfferNames.Any())
                                    {
                                        <span>
                                            <span>@Html.Sitecore().Field(ComponentDataSource.DiscountLabelText, Html.Sitecore().CurrentItem): </span>
                                            <span class="savings">@string.Join(", ", cartLine.DiscountOfferNames)</span>
                                        </span>
                                    }
                                </td>
                                <td class="product-quantity">@cartLine.QuantityText</td>
                                <td class="line-total">
                                    <h4 class="total-amount">@cartLine.TotalText</h4>
                                    @if (@cartLine.LineDiscount > 0)
                                    {
                                        <span class="savings">
                                            <span>@Html.Sitecore().Field(ComponentDataSource.DiscountLabelText, Html.Sitecore().CurrentItem) </span>
                                            <span class="discount">@cartLine.LineDiscountText</span>
                                        </span>
                                    }
                                </td>
                                <!-- HabitatHome customization -->
                                <td class="reorder">
                                    <div class="reorder-button">
                                        <button type="submit" class="add-to-cart-btn" data-bind="attr: {'productId': '@cartLine.ProductId', 'variantId': '@cartLine.ProductVariantId', 'quantity': '@cartLine.Quantity' }, click: addItemToCart">
                                            <span class="initial-label">Add to cart</span>
                                            <span class="loading-label" style="display:none;">Adding to cart...</span>
                                        </button>
                                    </div>
                                </td>
                                <!-- end HabitatHome customization -->
                            </tr>
                            foreach (var subLine in cartLine.SubLines)
                            {
                                <tr class="subline-row">
                                    <td></td>
                                    <td>
                                        <div class="flex-container">
                                            <div class="product-image td">
                                                <a href="@subLine.ProductUrl"><img src="@subLine.ImageUrl" alt="a" pid="image" /></a>
                                            </div>
                                            <div class="cart-info">
                                                <a href="@subLine.ProductUrl"><h4>@subLine.ProductDisplayName</h4></a>
                                                <div class="product-variants">
                                                    @foreach(var property in subLine.Properties)
                                                    {
                                                        <div class="product-variant">
                                                            <span class="variant-label">
                                                                @(Model.VariantLabels.ContainsKey(property.Key) ? Model.VariantLabels[property.Key] : property.Key)
                                                            </span>
                                                            <span class="variant-information">
                                                                @property.Value
                                                            </span> 
                                                        </div>                                   
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="unit-price" />
                                    <td class="product-quantity">@subLine.QuantityText</td>
                                    <td class="line-total" />
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

    }
</div>