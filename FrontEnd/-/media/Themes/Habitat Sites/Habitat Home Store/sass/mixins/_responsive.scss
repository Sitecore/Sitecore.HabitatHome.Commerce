@import '../functions/index';
@import '../base/index';
$xs:'xSmall';
$sm: 'small';
$md: 'medium';
$lg: 'large';
$xl: 'xlarge';
$mdPlus: 'mediumAndLarger';

$break-desktop-large: 1200px;
$break-desktop: 960px;
$break-mobile: 380px;
$break-mobile-horizontal: 640px;
$break-mobile-large: 768px;

$breakpoints: (
  $xs:(max-width: ($break-mobile - 1)),
  $sm: (min-width: $break-mobile) and (max-width: ($break-mobile-large - 1)),
  $md: (min-width: $break-mobile-large) and (max-width: ($break-desktop - 1)),
  $mdPlus : (min-width: $break-mobile-large),
  $lg: (min-width: $break-desktop) and (max-width: ($break-desktop-large - 1)),
  $xl: (min-width: $break-desktop-large)
);

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

// responsive font size mixin
@mixin font-size-map($font-size-map) {
    @each $breakpoint, $font-size in $font-size-map {
        @if $breakpoint == null {
            font-size: em($font-size);
        } @else {
            @include respond-to($breakpoint) {
                font-size: em($font-size);
            }
        }
    }
}

//makes the table responsive
@mixin responsive-table()
{    
    display: table;
    overflow-x: auto;
    width: 100%;
    max-width: 100%;    
}

@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%; 
  height: auto; 
}