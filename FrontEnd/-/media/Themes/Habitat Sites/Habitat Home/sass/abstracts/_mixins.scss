@import "vars";

/* breakpoints */

$break-desktop-large: 1200px;
$break-desktop: 960px;
$break-mobile: 380px;
$break-mobile-horizontal: 640px;
$break-mobile-large: 768px;

@mixin wrapper() {
    max-width: $break-desktop;
    margin: 0 auto !important;
}
@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}
@mixin font-size($sizeValue: 1.6) {
    font-size: ($sizeValue * 10) + px;
    font-size: $sizeValue + rem;
}
@mixin opensans-font-stack() {
    font-family: "Open Sans", Helvetica, Verdana, Tahoma, sans-serif;
}
@mixin loading-gif() {
    background-image: url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMiAzMiIgd2lkdGg9IjMyIiBoZWlnaHQ9IjMyIiBmaWxsPSJibGFjayI+DQogIDxwYXRoICBvcGFjaXR5PSIuMjUiIGQ9Ik0xNiAwIEExNiAxNiAwIDAgMCAxNiAzMiBBMTYgMTYgMCAwIDAgMTYgMCBNMTYgNCBBMTIgMTIgMCAwIDEgMTYgMjggQTEyIDEyIDAgMCAxIDE2IDQiLz4NCiAgPHBhdGggZmlsbD0nIzFhODBiNicgZD0iTTE2IDAgQTE2IDE2IDAgMCAxIDMyIDE2IEwyOCAxNiBBMTIgMTIgMCAwIDAgMTYgNHoiPg0KICAgIDxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9InRyYW5zZm9ybSIgdHlwZT0icm90YXRlIiBmcm9tPSIwIDE2IDE2IiB0bz0iMzYwIDE2IDE2IiBkdXI9IjAuOHMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiAvPg0KICA8L3BhdGg+DQo8L3N2Zz4NCg==);
    background-position: center center;
    background-repeat: no-repeat;
}
@mixin respond-to($media) {
    @if $media==mobile {
        @media only screen and (max-width: $break-mobile) {
            @content;
        }
    }
    @else if $media==mobile-horizontal {
        @media only screen and (max-width: $break-mobile-horizontal - 1) {
            @content;
        }
    }
    @else if $media==mobile-large {
        @media only screen and (max-width: $break-mobile-large) {
            @content;
        }
    }
    @else if $media==tablet {
        @media only screen and (min-width: $break-mobile + 1) and (max-width: $break-desktop - 1) {
            @content;
        }
    }
    @else if $media==all-mobile {
        @media only screen and (max-width: $break-desktop - 1) {
            @content;
        }
    }
    @else if $media==desktop {
        @media only screen and (min-width: $break-desktop) {
            @content;
        }
    }
    @else if $media==desktop-large {
        @media only screen and (min-width: $break-desktop-large) {
            @content;
        }
    }
}
@mixin border-basic($position:all, $border-color:$border-gray, $border-width:1px) {
    @if($position==top) {
        border-top: $border-width solid $border-color;
    }
    @else if($position==bottom) {
        border-bottom: $border-width solid $border-color;
    }
    @else if($position==left) {
        border-left: $border-width solid $border-color;
    }
    @else if($position==right) {
        border-right: $border-width solid $border-color;
    }
    @else {
        border: $border-width solid $border-color;
    }
}
@mixin fixed-bg($pos, $min-height:240px) {
    background-position: $pos;
    background-attachment: fixed;
    min-height: $min-height;
}
@mixin linear-gradient($direction, $color-stops...) {
    // Direction has been omitted and happens to be a color-stop
    @if is-direction($direction)==false {
        $color-stops: $direction, $color-stops;
        $direction: 180deg;
    }
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
}
@mixin cta-button () {
    display: inline-block;
    font-size: 14px;
    line-height: 1.28571;
    font-weight: 700;
    color: #141919;
    border: 1px solid #141919;
    padding: 1.28571em 3em;
    border-radius: 0;
    text-transform: uppercase;
    text-align: center;
    min-width: 17.14286em;
    margin:1em 0;
}

@mixin blue-button() {
    background-color: #50a1ab;
    color: #fefefe;
    border: 1px solid #50a1ab;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    line-height: 1.28571;
    font-weight: 700;
    border-radius: 0;
    text-transform: uppercase;
}